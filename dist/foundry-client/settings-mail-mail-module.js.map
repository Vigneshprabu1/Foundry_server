{"version":3,"sources":["webpack:///./src/app/foundry/settings/mail/edit-mail/edit-mail.component.html","webpack:///./src/app/foundry/settings/mail/edit-mail/edit-mail.component.scss","webpack:///./src/app/foundry/settings/mail/edit-mail/edit-mail.component.ts","webpack:///./src/app/foundry/settings/mail/mail-routing.module.ts","webpack:///./src/app/foundry/settings/mail/mail.component.html","webpack:///./src/app/foundry/settings/mail/mail.component.scss","webpack:///./src/app/foundry/settings/mail/mail.component.ts","webpack:///./src/app/foundry/settings/mail/mail.module.ts","webpack:///./src/app/foundry/settings/mail/mail.service.ts","webpack:///./src/app/foundry/settings/mail/mail.ts"],"names":[],"mappings":"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","file":"settings-mail-mail-module.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1 mat-dialog-title>Update Mail</h1>\\r\\n  <form [formGroup]=\\\"userForm\\\">\\r\\n    <div mat-dialog-content>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput placeholder=\\\"Company Name\\\" formControlName=\\\"companyName\\\" name=\\\"companyName\\\"\\r\\n          [(ngModel)]=\\\"data.companyName\\\" id=\\\"companyName\\\">\\r\\n        <mat-error>\\r\\n          <control-messages [control]=\\\"userForm.controls.companyName\\\"></control-messages>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput placeholder=\\\"EmailId\\\" formControlName=\\\"emailId\\\" name=\\\"emailId\\\" [(ngModel)]=\\\"data.emailId\\\"\\r\\n          id=\\\"emailId\\\">\\r\\n        <mat-error>\\r\\n          <control-messages [control]=\\\"userForm.controls.emailId\\\"></control-messages>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" name=\\\"password\\\"\\r\\n          [(ngModel)]=\\\"data.password\\\" id=\\\"password\\\">\\r\\n        <mat-error>\\r\\n          <control-messages [control]=\\\"userForm.controls.password\\\"></control-messages>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput placeholder=\\\"Subject\\\" formControlName=\\\"subject\\\" name=\\\"subject\\\" [(ngModel)]=\\\"data.subject\\\"\\r\\n          id=\\\"subject\\\">\\r\\n        <mat-error>\\r\\n          <control-messages [control]=\\\"userForm.controls.subject\\\"></control-messages>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div mat-dialog-actions align=\\\"end\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!userForm.valid\\\" (click)=\\\"updateMail()\\\">Update</button>\\r\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"cancel()\\\">Close</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\"","module.exports = \"button {\\n  margin-left: 10px; }\\n\\n.example-full-width {\\n  width: 100%;\\n  font-family: 'Times New Roman', Times, serif; }\\n\\nh1 {\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 20px; }\\n\\nmat-form-field {\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 18px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9zZXR0aW5ncy9tYWlsL2VkaXQtbWFpbC9FOlxcVnBfV1NcXGZvdW5kcnktY2xpZW50L3NyY1xcYXBwXFxmb3VuZHJ5XFxzZXR0aW5nc1xcbWFpbFxcZWRpdC1tYWlsXFxlZGl0LW1haWwuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBaUIsRUFBQTs7QUFHckI7RUFDSSxXQUFXO0VBQ1gsNENBQTRDLEVBQUE7O0FBSWhEO0VBQ0ksa0JBQWtCO0VBQ2xCLDRDQUE0QztFQUM1QyxlQUFlLEVBQUE7O0FBR25CO0VBQ0ksa0JBQWtCO0VBQ2xCLDRDQUE0QztFQUM1QyxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9mb3VuZHJ5L3NldHRpbmdzL21haWwvZWRpdC1tYWlsL2VkaXQtbWFpbC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbntcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1mdWxsLXdpZHRoe1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcclxuXHJcblxyXG59XHJcbmgxe1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcblxyXG59XHJcbm1hdC1mb3JtLWZpZWxke1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbn0iXX0= */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Mail } from '../mail';\r\nimport { MailService } from '../mail.service';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ValidationService } from '../../../validation/validation-service';\r\n\r\n@Component({\r\n  selector: 'app-edit-mail',\r\n  templateUrl: './edit-mail.component.html',\r\n  styleUrls: ['./edit-mail.component.scss']\r\n})\r\nexport class EditMailComponent implements OnInit {\r\n  public mail: Mail;\r\n  userForm: any;\r\n  private notifier: NotifierService;\r\n  constructor(public matDialogRef: MatDialogRef<EditMailComponent>, private formBuilder: FormBuilder,\r\n    @Inject(MAT_DIALOG_DATA) public data: Mail, public mailService: MailService, notifierService: NotifierService) {\r\n    this.notifier = notifierService;\r\n    this.userForm = this.formBuilder.group({\r\n      'companyName': ['', [Validators.required, ValidationService.nameValidation]],\r\n      'password': ['', [Validators.required, ValidationService.passwordValidator]],\r\n      'emailId': ['', [Validators.required, ValidationService.emailValidator]],\r\n      'subject': ['', [Validators.required, ValidationService.nameValidation]]\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.mail = new Mail();\r\n  }\r\n\r\n  updateMail() {\r\n    this.data.modifiedBy = localStorage.getItem('user');\r\n    this.mailService.updateMail(this.data).subscribe((data) => {\r\n      this.notifier.notify('success', 'Updated Successfully');\r\n      this.matDialogRef.close();\r\n    }, (err) => {\r\n      this.notifier.notify('error', 'Not Update');\r\n    })\r\n  }\r\n\r\n  cancel() {\r\n    this.matDialogRef.close();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport { MailComponent } from './mail.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MailComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MailRoutingModule {}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1>Mail Settings</h1>\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n    <ng-container matColumnDef=\\\"companyName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Company Name</th>\\r\\n      <td mat-cell *matCellDef=\\\"let mail\\\">{{mail.companyName}}</td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"emailId\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Email Id</th>\\r\\n      <td mat-cell *matCellDef=\\\"let mail\\\">{{mail.emailId}}</td>\\r\\n    </ng-container>\\r\\n    <ng-container hidden matColumnDef=\\\"password\\\">\\r\\n      <th hidden mat-header-cell *matHeaderCellDef>Password</th>\\r\\n      <td hidden mat-cell *matCellDef=\\\"let mail\\\">{{mail.password}}</td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"subject\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Subject</th>\\r\\n      <td mat-cell *matCellDef=\\\"let mail\\\">{{mail.subject}}</td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n        <button mat-icon-button matTooltip=\\\"Refresh\\\" color=\\\"accent\\\" (click)=\\\"refresh()\\\">\\r\\n          <mat-icon>refresh</mat-icon>\\r\\n        </button>\\r\\n      </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let mail;let i=index\\\">\\r\\n        <button mat-icon-button matTooltip=\\\"Edit Mail\\\" color=\\\"accent\\\" (click)=\\\"updateMail(i,mail._id,mail.companyName,mail.emailId,mail.password,mail.subject,mail.message)\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n<notifier-container></notifier-container>\\r\\n\\r\\n<!-- <div class=\\\"col-sm-4\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n        <mat-card class=\\\"example-card\\\">\\r\\n          <mat-card-header>Mail</mat-card-header>\\r\\n          <mat-card-content>\\r\\n            <form>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-3\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <input matInput placeholder=\\\"CompanyName\\\" [(ngModel)]=\\\"mail.companyName\\\" name=\\\"companyName\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-3\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"mail.emailId\\\" name=\\\"emailId\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-3\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"mail.password\\\" name=\\\"password\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-3\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <input matInput placeholder=\\\"Subject\\\" [(ngModel)]=\\\"mail.subject\\\" name=\\\"subject\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-3\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <textarea matInput placeholder=\\\"Message\\\" [(ngModel)]=\\\"mail.message\\\" name=\\\"message\\\"></textarea>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-card-content>\\r\\n          <mat-card-actions>\\r\\n            <button mat-raised-button (click)=\\\"saveMail()\\\">Save</button>\\r\\n            <button mat-raised-button (click)=\\\"cancel()\\\">cancel</button>\\r\\n          </mat-card-actions>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n    </div>-->\"","module.exports = \".example-card {\\n  max-width: 400px;\\n  margin-top: 35px;\\n  align-self: auto;\\n  margin-left: 15px; }\\n\\nh1 {\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 20px;\\n  text-align: center; }\\n\\nmat-form-field {\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 18px; }\\n\\n.container {\\n  margin-top: 75px; }\\n\\n.example-full-width {\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 16px; }\\n\\nbutton {\\n  margin-left: 15px; }\\n\\ntable {\\n  width: 100%; }\\n\\ntd {\\n  width: 25%;\\n  font-family: 'Times New Roman', Times, serif; }\\n\\nth {\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 20px;\\n  width: 25%;\\n  color: #2979FF; }\\n\\nh1 {\\n  color: #c76254;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 20px;\\n  font-weight: bolder;\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9zZXR0aW5ncy9tYWlsL0U6XFxWcF9XU1xcZm91bmRyeS1jbGllbnQvc3JjXFxhcHBcXGZvdW5kcnlcXHNldHRpbmdzXFxtYWlsXFxtYWlsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsaUJBQWlCLEVBQUE7O0FBR3JCO0VBQ0ksNENBQTRDO0VBQzVDLGVBQWU7RUFDZixrQkFBa0IsRUFBQTs7QUFFdEI7RUFDSSxrQkFBa0I7RUFDbEIsNENBQTRDO0VBQzVDLGVBQWUsRUFBQTs7QUFHbkI7RUFDSSxnQkFBZ0IsRUFBQTs7QUFJcEI7RUFDSSxrQkFBa0I7RUFDbEIsNENBQTRDO0VBQzVDLGVBQWUsRUFBQTs7QUFFbkI7RUFDQSxpQkFBaUIsRUFBQTs7QUFFakI7RUFDSSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxVQUFVO0VBQ1YsNENBQTRDLEVBQUE7O0FBRTlDO0VBQ0ksNENBQTRDO0VBQzVDLGVBQWU7RUFDZixVQUFVO0VBQ1YsY0FBYyxFQUFBOztBQUVsQjtFQUNFLGNBQXVCO0VBQ3ZCLDRDQUE0QztFQUM1QyxlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZm91bmRyeS9zZXR0aW5ncy9tYWlsL21haWwuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jYXJkIHtcclxuICAgIG1heC13aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAzNXB4O1xyXG4gICAgYWxpZ24tc2VsZjogYXV0bztcclxuICAgIG1hcmdpbi1sZWZ0OiAxNXB4O1xyXG4gIH1cclxuXHJcbmgxe1xyXG4gICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxubWF0LWZvcm0tZmllbGR7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxufVxyXG5cclxuLmNvbnRhaW5lcntcclxuICAgIG1hcmdpbi10b3A6IDc1cHg7XHJcbn1cclxuXHJcblxyXG4uZXhhbXBsZS1mdWxsLXdpZHRoe1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuYnV0dG9ue1xyXG5tYXJnaW4tbGVmdDogMTVweDtcclxufVxyXG50YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiBcclxuICB0ZHtcclxuICAgIHdpZHRoOiAyNSU7XHJcbiAgICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcclxuICB9XHJcbiAgdGh7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xyXG4gICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgIHdpZHRoOiAyNSU7XHJcbiAgICAgIGNvbG9yOiAjMjk3OUZGO1xyXG4gIH1cclxuICBoMXtcclxuICAgIGNvbG9yOiByZ2IoMTk5LCA5OCwgODQpO1xyXG4gICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZGVyO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Mail } from './mail';\r\nimport { MailService } from './mail.service';\r\nimport { MatTableDataSource, MatDialog } from '@angular/material';\r\nimport { EditMailComponent } from './edit-mail/edit-mail.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-mail',\r\n  templateUrl: './mail.component.html',\r\n  styleUrls: ['./mail.component.scss']\r\n})\r\nexport class MailComponent implements OnInit {\r\n\r\n  public mail: Mail;\r\n  dataSource;\r\n  public x;\r\n  constructor(public mailService: MailService, public matDialog: MatDialog) {\r\n\r\n   }\r\n  displayedColumns = ['companyName', 'emailId', 'password', 'subject', 'actions'];\r\n  ngOnInit() {\r\n    this.mail = new Mail();\r\n    this.getAllMail();\r\n  }\r\n  saveMail() {\r\n    this.mailService.saveMail(this.mail).subscribe((data) => [\r\n    ]);\r\n  }\r\n\r\n  getAllMail() {\r\n    this.mailService.getAllMail().subscribe((data) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n    },(err)=>{\r\n      console.log(err)\r\n    });\r\n  }\r\n\r\n  updateMail(i: number, _id: number, companyName: String, emailId: String, password: String, subject: String, message: String, ) {\r\n    const matDialogRef = this.matDialog.open(EditMailComponent, {\r\n      data: { _id: _id, companyName: companyName, emailId: emailId, password: password, subject: subject, message: message }\r\n    });\r\n    matDialogRef.afterClosed().subscribe((result) => {\r\n      this.getAllMail();\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.getAllMail();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MailComponent } from './mail.component';\r\nimport { MailRoutingModule } from './mail-routing.module';\r\nimport { MaterialModule } from '../../../app.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { EditMailComponent } from './edit-mail/edit-mail.component';\r\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\r\nimport { FoundryModule } from '../../foundry.module';\r\nconst customNotifierOptions: NotifierOptions = {\r\n  position: {\r\n    horizontal: {\r\n      position: 'middle',\r\n      distance: 12\r\n    },\r\n    vertical: {\r\n      position: 'top',\r\n      distance: 50,\r\n      gap: 10\r\n    }\r\n  },\r\n  theme: 'material',\r\n  behaviour: {\r\n    autoHide: 1000,\r\n    onClick: 'hide',\r\n    onMouseover: 'pauseAutoHide',\r\n    showDismissButton: true,\r\n    stacking: 4\r\n  },\r\n  animations: {\r\n    enabled: true,\r\n    show: {\r\n      preset: 'slide',\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    hide: {\r\n      preset: 'fade',\r\n      speed: 300,\r\n      easing: 'ease',\r\n      offset: 50\r\n    },\r\n    shift: {\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    overlap: 10\r\n  }\r\n};\r\n\r\n@NgModule({\r\n  declarations: [MailComponent, EditMailComponent],\r\n  imports: [\r\n    CommonModule, MailRoutingModule, FormsModule, MaterialModule,FoundryModule,\r\n    ReactiveFormsModule, HttpModule, NotifierModule.withConfig(customNotifierOptions)\r\n  ], entryComponents: [EditMailComponent]\r\n})\r\nexport class MailModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { Mail } from './mail';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MailService {\r\n\r\n\r\n  public baseURL: String = '/api';\r\n  public headers = new Headers({ 'Content-type': 'application/json' });\r\n  public options = new RequestOptions({ headers: this.headers });\r\n  constructor(public http: Http) { }\r\n\r\n\r\n  saveMail(mail: Mail) {\r\n    return this.http.post(this.baseURL + '/mails', JSON.stringify(mail), this.options)\r\n      .pipe(map((response: Response) => response.json())\r\n        , catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n\r\n  getAllMail() {\r\n    return this.http.get(this.baseURL + '/mails', this.options)\r\n      .pipe(map((response: Response) => response.json())\r\n        , catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n  updateMail(mail: Mail) {\r\n    return this.http.put(this.baseURL + '/mails', JSON.stringify(mail), this.options)\r\n      .pipe(map((response: Response) => response.json())\r\n        , catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n}\r\n","export class Mail {\r\n  _id: number;\r\n  companyName: String;\r\n  emailId: String;\r\n  password: String;\r\n  subject: String;\r\n  message: String;\r\n  modifiedBy: String;\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/app/foundry/report/static-report/delivery-completed-report/delivery-completed-report.component.html","webpack:///./src/app/foundry/report/static-report/delivery-completed-report/delivery-completed-report.component.scss","webpack:///./src/app/foundry/report/static-report/delivery-completed-report/delivery-completed-report.component.ts","webpack:///./src/app/foundry/report/static-report/delivery-completed-report/delivery-completed-report.ts","webpack:///./src/app/foundry/report/static-report/delivery-pending-report/delivery-pending-report.component.html","webpack:///./src/app/foundry/report/static-report/delivery-pending-report/delivery-pending-report.component.scss","webpack:///./src/app/foundry/report/static-report/delivery-pending-report/delivery-pending-report.component.ts","webpack:///./src/app/foundry/report/static-report/melt-report/melt-report.component.html","webpack:///./src/app/foundry/report/static-report/melt-report/melt-report.component.scss","webpack:///./src/app/foundry/report/static-report/melt-report/melt-report.component.ts","webpack:///./src/app/foundry/report/static-report/melt-report/melt-report.ts","webpack:///./src/app/foundry/report/static-report/order-report/order-report.component.html","webpack:///./src/app/foundry/report/static-report/order-report/order-report.component.scss","webpack:///./src/app/foundry/report/static-report/order-report/order-report.component.ts","webpack:///./src/app/foundry/report/static-report/purchase-report/purchase-report.component.html","webpack:///./src/app/foundry/report/static-report/purchase-report/purchase-report.component.scss","webpack:///./src/app/foundry/report/static-report/purchase-report/purchase-report.component.ts","webpack:///./src/app/foundry/report/static-report/purchase-report/purchase-report.ts","webpack:///./src/app/foundry/report/static-report/raw-material-report/raw-material-report.component.html","webpack:///./src/app/foundry/report/static-report/raw-material-report/raw-material-report.component.scss","webpack:///./src/app/foundry/report/static-report/raw-material-report/raw-material-report.component.ts","webpack:///./src/app/foundry/report/static-report/raw-material-report/raw-material-report.ts","webpack:///./src/app/foundry/report/static-report/raw-material-summary-report/raw-material-summary-report.component.html","webpack:///./src/app/foundry/report/static-report/raw-material-summary-report/raw-material-summary-report.component.scss","webpack:///./src/app/foundry/report/static-report/raw-material-summary-report/raw-material-summary-report.component.ts","webpack:///./src/app/foundry/report/static-report/raw-material-summary-report/raw-material-summary-report.ts","webpack:///./src/app/foundry/report/static-report/static-report-routing.module.ts","webpack:///./src/app/foundry/report/static-report/static-report.component.html","webpack:///./src/app/foundry/report/static-report/static-report.component.scss","webpack:///./src/app/foundry/report/static-report/static-report.component.ts","webpack:///./src/app/foundry/report/static-report/static-report.module.ts","webpack:///./src/app/foundry/report/static-report/static-report.service.ts","webpack:///./src/app/foundry/report/static-report/vendor-wise-purchase-report/vendor-wise-purchase-report.component.html","webpack:///./src/app/foundry/report/static-report/vendor-wise-purchase-report/vendor-wise-purchase-report.component.scss","webpack:///./src/app/foundry/report/static-report/vendor-wise-purchase-report/vendor-wise-purchase-report.component.ts"],"names":[],"mappings":"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","file":"report-static-report-static-report-module.js","sourcesContent":["module.exports = \"<mat-card class=\\\"example-card\\\" style=\\\"margin-left:20px; margin-top: 30px; margin-right: 20px;\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Filter</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input type=\\\"text\\\" placeholder=\\\"CustomerName\\\" aria-label=\\\"CustomerName\\\" name=\\\"CustomerName\\\" [(ngModel)]=\\\"delivery.customerName\\\"\\r\\n            matInput [formControl]=\\\"customerControl\\\" [matAutocomplete]=\\\"auto1\\\">\\r\\n          <mat-autocomplete autoActiveFirstOption #auto1=\\\"matAutocomplete\\\" (optionSelected)=\\\"getCustomer()\\\">\\r\\n            <mat-option *ngFor=\\\"let customer of filteredCustomers | async\\\" [value]=\\\"customer.customerName\\\">\\r\\n              {{customer.customerName}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input type=\\\"text\\\" placeholder=\\\"Order Id\\\" aria-label=\\\"OrderId\\\" name=\\\"OrderId\\\" [(ngModel)]=\\\"delivery.orderId\\\"\\r\\n            matInput [formControl]=\\\"OrderControl\\\" [matAutocomplete]=\\\"auto2\\\">\\r\\n          <mat-autocomplete autoActiveFirstOption #auto2=\\\"matAutocomplete\\\" (optionSelected)=\\\"getOrderId()\\\">\\r\\n            <mat-option *ngFor=\\\"let order of filteredOrderId | async\\\" [value]=\\\"order.orderId\\\">\\r\\n              {{order.orderId}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input type=\\\"text\\\" placeholder=\\\"Melt No\\\" aria-label=\\\"meltNo\\\" name=\\\"meltNo\\\" [(ngModel)]=\\\"delivery.meltNo\\\"\\r\\n            matInput [formControl]=\\\"meltControl\\\" [matAutocomplete]=\\\"auto3\\\">\\r\\n          <mat-autocomplete autoActiveFirstOption #auto3=\\\"matAutocomplete\\\" (optionSelected)=\\\"getMeltNo()\\\">\\r\\n            <mat-option *ngFor=\\\"let melt of filteredMelts | async\\\" [value]=\\\"melt.meltNo\\\">\\r\\n              {{melt.meltNo}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"From date\\\" name=\\\"FromDate\\\" [(ngModel)]=\\\"delivery.fromDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker2></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"End date\\\" name=\\\"toDate\\\" [(ngModel)]=\\\"delivery.toDate\\\"\\r\\n            (ngModelChange)=\\\"getDeliveryReport()\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker3></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\">\\r\\n          <a style=\\\"color:white;\\\" href=\\\"http://52.26.246.107:3000/api/deliveryCompleteds/deliveryXlsx\\\" target=\\\"_block\\\">EXCEL</a>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\">\\r\\n          <a style=\\\"color:white;\\\" href=\\\"http://52.26.246.107:3000/api/deliveryCompleteds/deliveryPdf\\\" target=\\\"_block\\\">PDF</a>\\r\\n        </button>\\r\\n    </div>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<div class=\\\"mat-elevation-z8\\\" style=\\\"margin-left:20px; margin-top: 50px; margin-right: 20px; margin-bottom: 10px;\\\">\\r\\n  <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n    <!-- CustomerName Column -->\\r\\n    <ng-container matColumnDef=\\\"customerName\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> CustomerName </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let dlivery\\\">{{dlivery.customerName}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- PartId Column -->\\r\\n    <ng-container matColumnDef=\\\"partId\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> PartId </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let dlivery\\\"> {{dlivery.partId}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Order Id -->\\r\\n    <ng-container matColumnDef=\\\"orderId\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Order Id</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let dlivery\\\"> {{dlivery.orderId}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Order Date -->\\r\\n    <ng-container matColumnDef=\\\"orderDate\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Order Date</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let dlivery\\\"> {{dlivery.orderDate | date:'MMM d, y'}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Order Date -->\\r\\n    <ng-container matColumnDef=\\\"deliveryDate\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Delivery Date</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let dlivery\\\"> {{dlivery.deliveryDate | date:'MMM d, y'}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n    <!-- MeltNo Column -->\\r\\n    <ng-container matColumnDef=\\\"meltNo\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>MeltNo</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let dlivery\\\"> {{dlivery.meltNo}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- BatchId Column -->\\r\\n    <ng-container matColumnDef=\\\"batchId\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>BatchId</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let dlivery\\\"> {{dlivery.batchId}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <!-- PartWeight Column -->\\r\\n    <ng-container matColumnDef=\\\"partWeight\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> partWeight </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let dlivery\\\"> {{dlivery.partWeight}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Quantity Column -->\\r\\n    <ng-container matColumnDef=\\\"quantity\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Quantity </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let dlivery\\\"> {{dlivery.quantity}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <!-- MouldProduced Column -->\\r\\n    <ng-container matColumnDef=\\\"roughCastingWeight\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Rough Casting Weight </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let dlivery\\\"> {{dlivery.roughCastingWeight}}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- MouldProduced Column -->\\r\\n    <ng-container matColumnDef=\\\"totalWeight\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Total Weight</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let dlivery\\\"> {{dlivery.totalWeight}}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- MouldProduced Column -->\\r\\n    <ng-container matColumnDef=\\\"yieldPercentage\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Yield Percentage</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let dlivery\\\"> {{dlivery.yieldPercentage}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Return Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"returnWeight\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Return Weight </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let dlivery\\\"> {{dlivery.retrunWeight}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Rejection Weight  Column -->\\r\\n    <ng-container matColumnDef=\\\"rejectionWeight\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Rejection Weight</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let dlivery\\\"> {{dlivery.rejectionWeight}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n     <!-- Rejection Percentage  Column -->\\r\\n     <ng-container matColumnDef=\\\"rejectionPercentage\\\">\\r\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Rejection Percentage</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let dlivery\\\"> {{dlivery.rejectionPercentage}} </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let dlivery; columns: displayedColumns;\\\">\\r\\n    </mat-row>\\r\\n  </mat-table>\\r\\n\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n\"","module.exports = \".example-full-width {\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 16px;\\n  width: 100%; }\\n\\ntable {\\n  width: 100%; }\\n\\nmat-cell {\\n  width: 25%;\\n  font-family: 'Times New Roman', Times, serif; }\\n\\nmat-header-cell {\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 14px;\\n  width: 25%;\\n  color: #6200EE; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9yZXBvcnQvc3RhdGljLXJlcG9ydC9kZWxpdmVyeS1jb21wbGV0ZWQtcmVwb3J0L0U6XFxWcF9XU1xcZm91bmRyeS1jbGllbnQvc3JjXFxhcHBcXGZvdW5kcnlcXHJlcG9ydFxcc3RhdGljLXJlcG9ydFxcZGVsaXZlcnktY29tcGxldGVkLXJlcG9ydFxcZGVsaXZlcnktY29tcGxldGVkLXJlcG9ydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLGtCQUFrQjtFQUNsQiw0Q0FBNEM7RUFDNUMsZUFBZTtFQUNmLFdBQ0YsRUFBQTs7QUFFQTtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLFVBQVU7RUFDViw0Q0FBNEMsRUFBQTs7QUFFOUM7RUFDSSw0Q0FBNEM7RUFDNUMsZUFBZTtFQUNmLFVBQVU7RUFDVixjQUFhLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9mb3VuZHJ5L3JlcG9ydC9zdGF0aWMtcmVwb3J0L2RlbGl2ZXJ5LWNvbXBsZXRlZC1yZXBvcnQvZGVsaXZlcnktY29tcGxldGVkLXJlcG9ydC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uZXhhbXBsZS1mdWxsLXdpZHRoe1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgd2lkdGg6IDEwMCVcclxufVxyXG5cclxudGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5tYXQtY2VsbHtcclxuICB3aWR0aDogMjUlO1xyXG4gIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xyXG59XHJcbm1hdC1oZWFkZXItY2VsbHtcclxuICAgIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgd2lkdGg6IDI1JTtcclxuICAgIGNvbG9yOiM2MjAwRUU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { StaticReportService } from '../static-report.service';\r\nimport { DeliveryCompletedReport } from './delivery-completed-report';\r\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { FormControl } from '@angular/forms';\r\nimport { startWith, map } from 'rxjs/operators';\r\nimport { CustomerService } from '../../../customer/customer.service';\r\nimport { Customer } from '../../../customer/customer';\r\nimport { ProductionMonitoringService } from '../../../production-monitoring/production-monitoring.service';\r\nimport { Melt } from '../../../production-monitoring/melt';\r\nimport { ScheduledMelts } from '../../../production-monitoring/scheduled-melts/scheduled-melts';\r\nimport { OngoingMelts } from '../../../production-monitoring/ongoing-melts/ongoing-melts';\r\n@Component({\r\n  selector: 'app-delivery-completed-report',\r\n  templateUrl: './delivery-completed-report.component.html',\r\n  styleUrls: ['./delivery-completed-report.component.scss']\r\n})\r\nexport class DeliveryCompletedReportComponent implements OnInit {\r\n\r\n  public deliveryReports: DeliveryCompletedReport[];\r\n  public deliveryReports1: DeliveryCompletedReport[];\r\n  public delivery: DeliveryCompletedReport;\r\n  public custmer: Customer[];\r\n  public melt: Melt[];\r\n  public ongoingMelts: OngoingMelts[];\r\n  public scheduledMelts: ScheduledMelts[];\r\n  dataSource;\r\n  filteredCustomers: Observable<Customer[]>;\r\n  filteredMelts: Observable<Melt[]>;\r\n  filteredOrderDate: Observable<DeliveryCompletedReport[]>;\r\n  filteredOrderId: Observable<ScheduledMelts[]>;\r\n  customerControl = new FormControl;\r\n  OrderControl = new FormControl;\r\n  meltControl = new FormControl;\r\n  OrderDateControl = new FormControl;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  displayedColumns = ['customerName', 'partId', 'orderId', 'orderDate', 'deliveryDate', 'meltNo', 'batchId',\r\n    'partWeight', 'quantity', 'roughCastingWeight', 'totalWeight', 'yieldPercentage', 'returnWeight', 'rejectionWeight','rejectionPercentage'];\r\n\r\n  Option = [{ _id: '', meltNo: '', moldingType: '',heatCode:'', meltStartDate: '', meltEndDate: '', totalMeltWeight: 0, status: '' }];\r\n  constructor(private staticReportService: StaticReportService, private customerService: CustomerService,\r\n    private productionService: ProductionMonitoringService) { }\r\n\r\n  ngOnInit() {\r\n    this.delivery = new DeliveryCompletedReport();\r\n    this.getAllDeliverCompletedReport();\r\n    this.getFilterCustomer();\r\n    this.getFilterOrder();\r\n    this.getFilterMelt();\r\n  }\r\n\r\n  getAllDeliverCompletedReport() {\r\n    this.staticReportService.getAllDeliveryCompletedReport().subscribe((data) => {\r\n      this.deliveryReports = data;\r\n      console.log('all', this.deliveryReports);\r\n      this.dataSource = new MatTableDataSource(this.deliveryReports);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n\r\n  getFilterCustomer() {\r\n    this.customerService.getCustomers().subscribe((data) => {\r\n      this.custmer = data;\r\n      console.log(this.custmer);\r\n      this.filteredCustomers = this.customerControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterCustomer(state) : this.custmer.slice())\r\n      );\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  getFilterOrder() {\r\n    this.productionService.getUnscheduledMeltsAll().subscribe((data) => {\r\n      this.scheduledMelts = data;\r\n      this.filteredOrderId = this.OrderControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterOrder(state) : this.scheduledMelts.slice())\r\n      );\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  getFilterMelt() {\r\n    this.productionService.getAllMelt().subscribe((data) => {\r\n      this.melt = data;\r\n      console.log('melt', this.melt);\r\n      this.filteredMelts = this.meltControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterMelt(state) : this.melt.slice())\r\n      );\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n\r\n  private _filterCustomer(value: string): Customer[] {\r\n    const filerValue = value.toLowerCase();\r\n    return this.custmer.filter(customer => customer.customerName.toLowerCase().indexOf(filerValue) === 0);\r\n  }\r\n  private _filterOrder(value: number): ScheduledMelts[] {\r\n    const filerValue = value.toLocaleString();\r\n    return this.scheduledMelts.filter(melts => melts.orderId.toLocaleString().indexOf(filerValue) === 0);\r\n  }\r\n  private _filterMelt(value: String): Melt[] {\r\n    const filerValue = value.toLowerCase();\r\n    return this.melt.filter(melts => melts.meltNo.toLowerCase().indexOf(filerValue) === 0);\r\n  }\r\n\r\n\r\n  getDeliveryReport() {\r\n    this.staticReportService.getDeliveryCompletedReport(this.delivery).subscribe((data) => {\r\n      this.deliveryReports = data;\r\n      this.dataSource = new MatTableDataSource(this.deliveryReports);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n\r\n  getCustomer() {\r\n    this.productionService.getUnscheduledMeltsOrderId(this.delivery.customerName).subscribe((data) => {\r\n      this.scheduledMelts = data;\r\n      this.filteredOrderId = this.OrderControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterOrder(state) : this.scheduledMelts.slice())\r\n      );\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n    this.productionService.getOngoingMeltNo(this.delivery).subscribe((data) => {\r\n      this.ongoingMelts = data;\r\n      let i = 0;\r\n      this.ongoingMelts.forEach(res => {\r\n        this.Option[i].meltNo = res.meltId.meltNo.toString();\r\n        this.Option.push({ _id: '', meltNo: '', moldingType: '',heatCode:'', meltStartDate: '', meltEndDate: '', totalMeltWeight: 0, status: '' });\r\n        i++;\r\n      });\r\n      this.Option.pop();\r\n      this.melt = this.Option;\r\n      this.filteredMelts = this.meltControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterMelt(state) : this.melt.slice())\r\n      );\r\n      this.getDeliveryReport();\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  getOrderId() {\r\n    this.productionService.getOngoingMeltNo(this.delivery).subscribe((data) => {\r\n      this.ongoingMelts = data;\r\n      let i = 0;\r\n      this.ongoingMelts.forEach(res => {\r\n        this.Option[i].meltNo = res.meltId.meltNo.toString();\r\n        this.Option.push({ _id: '', meltNo: '', moldingType: '',heatCode:'', meltStartDate: '', meltEndDate: '', totalMeltWeight: 0, status: '' });\r\n        i++;\r\n      });\r\n      this.Option.pop();\r\n      this.melt = this.Option;\r\n      this.filteredMelts = this.meltControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterMelt(state) : this.melt.slice())\r\n      );\r\n      this.getDeliveryReport();\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  getMeltNo() {\r\n    this.getDeliveryReport();\r\n  }\r\n}\r\n","export class DeliveryCompletedReport {\r\n\r\n  customerName: string;\r\n  orderId: number;\r\n  orderDate: Date;\r\n  deliverDate: Date;\r\n  meltNo: string;\r\n  batchId: number;\r\n  partId: number;\r\n  partWeight: number;\r\n  quantity: number;\r\n  toatlWeight: number;\r\n  yieldPencendate: number;\r\n  rejectionWeight: number;\r\n  rejectionPercentage:number;\r\n  returnweight: number;\r\n  roughCastingWeight: number;\r\n  fromDate: Date;\r\n  toDate: Date;\r\n}\r\n","module.exports = \"<p>\\r\\n  delivery-pending-report works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvcmVwb3J0L3N0YXRpYy1yZXBvcnQvZGVsaXZlcnktcGVuZGluZy1yZXBvcnQvZGVsaXZlcnktcGVuZGluZy1yZXBvcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-delivery-pending-report',\r\n  templateUrl: './delivery-pending-report.component.html',\r\n  styleUrls: ['./delivery-pending-report.component.scss']\r\n})\r\nexport class DeliveryPendingReportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-card class=\\\"example-card\\\" style=\\\"margin-left:20px; margin-top: 30px; margin-right: 20px;\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Filter</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input type=\\\"text\\\" placeholder=\\\"CustomerName\\\" aria-label=\\\"CustomerName\\\" name=\\\"CustomerName\\\" matInput\\r\\n            [formControl]=\\\"customerControl\\\" [matAutocomplete]=\\\"auto1\\\" [(ngModel)]=\\\"meltReport.customerName\\\">\\r\\n          <mat-autocomplete autoActiveFirstOption #auto1=\\\"matAutocomplete\\\" (optionSelected)=\\\"getPartIdReportByCustomerName(meltReport)\\\">\\r\\n            <mat-option *ngFor=\\\"let customer of filteredCustomers | async\\\" [value]=\\\"customer.customerName\\\">\\r\\n              {{customer.customerName}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input type=\\\"text\\\" placeholder=\\\"partId\\\" aria-label=\\\"partId\\\" name=\\\"partId\\\" matInput [formControl]=\\\"productControl\\\"\\r\\n            [matAutocomplete]=\\\"auto2\\\" [(ngModel)]=\\\"meltReport.partId\\\">\\r\\n          <mat-autocomplete autoActiveFirstOption #auto2=\\\"matAutocomplete\\\" (optionSelected)=\\\"getMeltNoReportByPartId(meltReport)\\\">\\r\\n            <mat-option *ngFor=\\\"let product of filteredProducts | async\\\" [value]=\\\"product.partId\\\">\\r\\n              {{product.partId}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input type=\\\"text\\\" placeholder=\\\"meltNo\\\" aria-label=\\\"meltNo\\\" name=\\\"meltNo\\\" matInput [formControl]=\\\"meltControl\\\"\\r\\n            [matAutocomplete]=\\\"auto3\\\" [(ngModel)]=\\\"meltReport.meltNo\\\">\\r\\n          <mat-autocomplete autoActiveFirstOption #auto3=\\\"matAutocomplete\\\" (optionSelected)=\\\"getSelectedReport(meltReport)\\\">\\r\\n            <mat-option *ngFor=\\\"let melt of filteredMelts | async\\\" [value]=\\\"melt.meltNo\\\">\\r\\n              {{melt.meltNo}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"From date\\\" name=\\\"FromDate\\\" [(ngModel)]=\\\"meltReport.fromDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker1></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End date\\\" name=\\\"toDate\\\" [(ngModel)]=\\\"meltReport.toDate\\\"\\r\\n            (ngModelChange)=\\\"getSelectedReport(meltReport)\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker2></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\">\\r\\n          <a style=\\\"color:white;\\\" href=\\\"http://52.26.246.107:3000/api/meltReports/meltReportXlsx\\\" target=\\\"_block\\\">EXCEL</a>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\">\\r\\n          <a style=\\\"color:white;\\\" href=\\\"http://52.26.246.107:3000/api/meltReports/meltReportPdf\\\" target=\\\"_block\\\">PDF</a>\\r\\n        </button>\\r\\n    </div>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<div class=\\\"mat-elevation-z8\\\" style=\\\"margin-left:20px; margin-top: 50px; margin-right: 20px; margin-bottom: 10px;\\\">\\r\\n  <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n    <!-- meltDate -->\\r\\n    <ng-container matColumnDef=\\\"meltDate\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>MeltDate</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let melt\\\"> {{melt.meltDate | date:'MMM d, y'}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- MeltNo Column -->\\r\\n    <ng-container matColumnDef=\\\"meltNo\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>MeltNo</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let melt\\\"> {{melt.meltNo}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- BatchId Column -->\\r\\n    <ng-container matColumnDef=\\\"batchId\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>BatchId</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let melt\\\"> {{melt.batchId}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <!-- CustomerName Column -->\\r\\n    <ng-container matColumnDef=\\\"customerName\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> CustomerName </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let melt\\\"> {{melt.customerName}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- PartId Column -->\\r\\n    <ng-container matColumnDef=\\\"partId\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> PartId </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let melt\\\"> {{melt.partId}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- PartWeight Column -->\\r\\n    <ng-container matColumnDef=\\\"partWeight\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> partWeight </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let melt\\\"> {{melt.partWeight}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Quantity Column -->\\r\\n    <ng-container matColumnDef=\\\"quantity\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Quantity </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let melt\\\"> {{melt.quantity}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <!-- roughCastingWeight Column -->\\r\\n    <ng-container matColumnDef=\\\"roughCastingWeight\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> RoughCastingWeight </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let melt\\\"> {{melt.roughCastingWeight}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- yieldPercentage Column -->\\r\\n    <ng-container matColumnDef=\\\"yieldPercentage\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Yield </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let melt\\\"> {{melt.yieldPercentage}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <!-- TotalWeight Column -->\\r\\n    <ng-container matColumnDef=\\\"totalWeight\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> TotalWeight </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let melt\\\"> {{melt.totalWeight}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let melt; columns: displayedColumns;\\\">\\r\\n    </mat-row>\\r\\n  </mat-table>\\r\\n\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%;\\n  text-align: center; }\\n\\nmat-header-cell {\\n  font-size: 16px;\\n  font: outline;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-weight: bold;\\n  color: #6200EE; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9yZXBvcnQvc3RhdGljLXJlcG9ydC9tZWx0LXJlcG9ydC9FOlxcVnBfV1NcXGZvdW5kcnktY2xpZW50L3NyY1xcYXBwXFxmb3VuZHJ5XFxyZXBvcnRcXHN0YXRpYy1yZXBvcnRcXG1lbHQtcmVwb3J0XFxtZWx0LXJlcG9ydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLGVBQWU7RUFDZixXQUFXO0VBQ1gsa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0UsZUFBZTtFQUNmLGFBQWE7RUFDYiw0Q0FBMkM7RUFDNUMsaUJBQWlCO0VBQ2pCLGNBQWEsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvcmVwb3J0L3N0YXRpYy1yZXBvcnQvbWVsdC1yZXBvcnQvbWVsdC1yZXBvcnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYXQtZm9ybS1maWVsZCB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxubWF0LWhlYWRlci1jZWxse1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBmb250OiBvdXRsaW5lO1xyXG4gIGZvbnQtZmFtaWx5OidUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiBmb250LXdlaWdodDogYm9sZDtcclxuIGNvbG9yOiM2MjAwRUU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MeltReport } from './melt-report';\r\nimport { StaticReportService } from '../static-report.service';\r\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { FormControl } from '@angular/forms';\r\nimport { startWith, map } from 'rxjs/operators';\r\nimport { CustomerService } from '../../../customer/customer.service';\r\nimport { Customer } from '../../../customer/customer';\r\nimport { ProductionMonitoringService } from '../../../production-monitoring/production-monitoring.service';\r\nimport { Melt } from '../../../production-monitoring/melt';\r\nimport { ProductService } from '../../../product/product.service';\r\nimport { Product } from '../../../product/product';\r\nimport { state } from '@angular/animations';\r\nimport { Order } from '../../../order/order';\r\nimport { OrderService } from '../../../order/order.service';\r\nimport { OngoingMelts } from '../../../production-monitoring/ongoing-melts/ongoing-melts';\r\n\r\n@Component({\r\n  selector: 'app-melt-report',\r\n  templateUrl: './melt-report.component.html',\r\n  styleUrls: ['./melt-report.component.scss']\r\n})\r\nexport class MeltReportComponent implements OnInit {\r\n  public meltReports: MeltReport[];\r\n  public meltReports1: MeltReport[]\r\n  public meltReport: MeltReport;\r\n  public customers: Customer[];\r\n  public melts: Melt[];\r\n  public products: Product[];\r\n  public products1: Product[];\r\n  public ongoingmelts: OngoingMelts[];\r\n  public orders: Order[];\r\n  dataSource;\r\n  filteredCustomers: Observable<Customer[]>;\r\n  filteredMelts: Observable<Melt[]>;\r\n  filteredBatchs: Observable<MeltReport[]>;\r\n  filteredProducts: Observable<Product[]>;\r\n  customerControl = new FormControl;\r\n  productControl = new FormControl;\r\n  meltControl = new FormControl;\r\n  batchControl = new FormControl;\r\n  displayedColumns = ['meltDate', 'meltNo', 'batchId', 'customerName', 'partId',\r\n    'partWeight', 'quantity', 'roughCastingWeight', 'totalWeight'];\r\n  Option = [{ _id: '', meltNo: '',moldingType:'',heatCode:'', meltStartDate: '', meltEndDate: '', totalMeltWeight: 0, status: '' }];\r\n\r\n  constructor(public staticReportService: StaticReportService, public customerService: CustomerService,\r\n    public productionService: ProductionMonitoringService, public productService: ProductService,\r\n    public orderService: OrderService) { }\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngOnInit() {\r\n    this.meltReport = new MeltReport();\r\n    this.getAllMeltReports();\r\n    this.getFilterCustomer();\r\n    this.getFilterMelt();\r\n    this.getFilterProduct();\r\n  }\r\n\r\n\r\n  getAllMeltReports() {\r\n    console.log('getAllMeltReports');\r\n    this.staticReportService.getMeltReports().subscribe((data) => {\r\n      console.log('data', data);\r\n      this.meltReports = data;\r\n      this.dataSource = new MatTableDataSource(this.meltReports);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, error => {\r\n      console.log('error');\r\n    })\r\n  }\r\n\r\n  getFilterCustomer() {\r\n    this.customerService.getCustomers().subscribe((data) => {\r\n      this.customers = data;\r\n      this.filteredCustomers = this.customerControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterCustomer(state) : this.customers.slice())\r\n      );\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  getFilterMelt() {\r\n    this.productionService.getAllMelt().subscribe((data) => {\r\n      this.melts = data;\r\n      console.log(this.melts);\r\n      this.filteredMelts = this.meltControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterMelt(state) : this.melts.slice())\r\n      );\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n\r\n  getFilterProduct() {\r\n    this.productService.getProducts().subscribe((data) => {\r\n      this.products = data;\r\n      this.filteredProducts = this.productControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterProduct(state) : this.products.slice())\r\n      );\r\n    }, (error) => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n\r\n  private _filterCustomer(value: string): Customer[] {\r\n    const filerValue = value.toLowerCase();\r\n    return this.customers.filter(melts => melts.customerName.toLowerCase().indexOf(filerValue) === 0);\r\n  }\r\n\r\n  private _filterMelt(value: String): Melt[] {\r\n    const filerValue = value.toLowerCase();\r\n    return this.melts.filter(melts => melts.meltNo.toLowerCase().indexOf(filerValue) === 0);\r\n  }\r\n\r\n  private _filterProduct(value: string): Product[] {\r\n    const filerValue = value.toLowerCase();\r\n    return this.products.filter(melts => melts.partId.toLowerCase().indexOf(filerValue) === 0);\r\n  }\r\n\r\n  getSelectedReport(meltReport: MeltReport) {\r\n    // this.meltReport.fromDate = fromDate;\r\n    //this.meltReport.toDate = toDate;\r\n    this.staticReportService.meltSelectedReport(this.meltReport).subscribe(data => {\r\n      console.log('data', data);\r\n      this.meltReports1 = data;\r\n      this.dataSource = new MatTableDataSource(this.meltReports1);\r\n      this.dataSource.sort = this.sort;\r\n      this.dataSource.paginator = this.paginator;\r\n    })\r\n  }\r\n\r\n  getPartIdReportByCustomerName(meltReport: MeltReport) {\r\n    //this.meltReport.chosenCustName = meltReport.chosenCustName;\r\n\r\n    this.productionService.getPartIdByCustomerName(this.meltReport.customerName).subscribe(data => {\r\n      this.products = data;\r\n      this.filteredProducts = this.productControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterProduct(state) : this.products.slice())\r\n      );\r\n      console.log('this.products', this.products)\r\n      this.ongoingmelts = data;\r\n      let i = 0;\r\n      this.ongoingmelts.forEach(res => {\r\n        //console.log(' res.meltId.meltNo', res.meltId.meltNo)\r\n        this.Option[i].meltNo = res.meltId.meltNo.toString();\r\n        console.log('this.Option[i].meltNo', this.Option[i].meltNo);\r\n        this.Option.push({ _id: '', meltNo: '',moldingType:'',heatCode:'', meltStartDate: '', meltEndDate: '', totalMeltWeight: 0, status: '' });\r\n        i++;\r\n      });\r\n      this.Option.pop();\r\n      this.melts = this.Option;\r\n      this.filteredMelts = this.meltControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterMelt(state) : this.melts.slice())\r\n      );\r\n    })\r\n    this.getSelectedReport(meltReport);\r\n\r\n  }\r\n\r\n\r\n  getMeltNoReportByPartId(meltReport: MeltReport) {\r\n        console.log('getMeltNoReportByPartId');\r\n      this.productionService.getMeltNoReportByPartId(meltReport).subscribe((data) => {\r\n        console.log('data ss',data)\r\n        this.ongoingmelts = data;\r\n        let i = 0;\r\n        this.ongoingmelts.forEach(res => {\r\n          //console.log(' res.meltId.meltNo', res.meltId.meltNo)\r\n          this.Option[i].meltNo = res.meltId.meltNo.toString();\r\n          console.log('this.Option[i].meltNo', this.Option[i].meltNo);\r\n          this.Option.push({ _id: '', meltNo: '',moldingType:'',heatCode:'', meltStartDate: '', meltEndDate: '', totalMeltWeight: 0, status: '' });\r\n          i++;\r\n        });\r\n        this.Option.pop();\r\n        this.melts = this.Option;\r\n        console.log('this.melts', this.melts)\r\n        this.filteredMelts = this.meltControl.valueChanges.pipe(\r\n          startWith(''),\r\n          map(state => state ? this._filterMelt(state) : this.melts.slice())\r\n        );\r\n      },error =>{\r\n        console.log(error);\r\n      }\r\n    )\r\n    this.getSelectedReport(meltReport);\r\n    }\r\n\r\n\r\n}\r\n","export class MeltReport {\r\n  _id: String;\r\n  orderDate: String;\r\n  orderId: number;\r\n  customerName: String;\r\n  deliveryDate: String;\r\n  meltDate: String;\r\n  meltNo: String;\r\n  batchId: String;\r\n  partId: String;\r\n  quantity: number;\r\n  partWeight: number;\r\n  mouldWeight: number;\r\n  roughCastingWeight: number;\r\n  noOfMould: number;\r\n  totalWeight: number;\r\n  yieldPercentage: number;\r\n  returnWeight: number;\r\n  rejectionWeight: number;\r\n  fromDate: String;\r\n  toDate: String;\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  order-report works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvcmVwb3J0L3N0YXRpYy1yZXBvcnQvb3JkZXItcmVwb3J0L29yZGVyLXJlcG9ydC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-order-report',\r\n  templateUrl: './order-report.component.html',\r\n  styleUrls: ['./order-report.component.scss']\r\n})\r\nexport class OrderReportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-card style=\\\"margin-left: 20px;margin-right: 20px;margin-top: 30px\\\">\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-3\\\">\\r\\n        <mat-card>\\r\\n          <mat-card-content>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-6\\\">\\r\\n                  <div *ngFor=\\\"let item of itemList;let i=index\\\">\\r\\n                  <section class=\\\"example-section\\\" *ngIf=\\\"item.itemType=='RawMaterial'\\\">\\r\\n                      <mat-checkbox class=\\\"example-margin\\\" (change)=\\\"onChange($event,item.itemName)\\\">{{item.itemName}}</mat-checkbox>\\r\\n                    </section>\\r\\n                    </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-6\\\">\\r\\n                <div *ngFor=\\\"let item of itemList;let i=index\\\">\\r\\n                    <section class=\\\"example-section\\\" *ngIf=\\\"item.itemType=='Consumable'\\\">\\r\\n                        <mat-checkbox class=\\\"example-margin\\\" (change)=\\\"onChange($event,item.itemName)\\\">{{item.itemName}}</mat-checkbox>\\r\\n                      </section>\\r\\n                </div>\\r\\n                </div>\\r\\n            </div>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Type\\\" [(ngModel)]=\\\"reportName\\\">\\r\\n            <mat-option value=\\\"MONTHLY\\\">Monthly</mat-option>\\r\\n            <!-- <mat-option value=\\\"QUARTS\\\">Quarts</mat-option> -->\\r\\n            <mat-option value=\\\"YEARLY\\\">Yearly</mat-option>\\r\\n            <mat-option value=\\\"CUSTOMIZE\\\">Customize</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"reportName=='MONTHLY'\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Year\\\" [(ngModel)]=\\\"years\\\">\\r\\n            <mat-option *ngFor=\\\"let years of year\\\" [value]=\\\"years\\\">\\r\\n              {{years}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\" *ngIf=\\\"reportName=='CUSTOMIZE'\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"fromDate\\\" [matDatepicker]=\\\"picker\\\" name=\\\"fromDate\\\" [(ngModel)]=\\\"fromDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\" *ngIf=\\\"reportName=='CUSTOMIZE'\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"toDate\\\" [matDatepicker]=\\\"picker1\\\" name=\\\"toDate\\\" [(ngModel)]=\\\"toDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker1></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\">\\r\\n        <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"searchPurchaseReport()\\\">\\r\\n          <mat-icon>search</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\">\\r\\n          <a style=\\\"color:white;\\\" href=\\\"http://52.26.246.107:3000/api/purchaseReports/purchaseXlsx\\\" target=\\\"_block\\\">EXCEL</a>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\">\\r\\n          <a style=\\\"color:white;\\\" href=\\\"http://52.26.246.107:3000/api/purchaseReports/purchasePdf\\\" target=\\\"_block\\\">PDF</a>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<div class=\\\"mat-elevation-z8\\\" style=\\\"margin-bottom: 10px;margin-left: 20px;margin-right: 20px;margin-top: 50px\\\" *ngIf=\\\"report==undefined || report=='yearly'\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"itemName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Item </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.itemName}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"year\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Year </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.year}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"weight\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.weight}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"totalAmount\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> TotalAmount </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.totalAmount}} </td>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n<!--Monthly wise-->\\r\\n<div class=\\\"mat-elevation-z8\\\" style=\\\"margin-bottom: 10px;margin-left: 20px;margin-right: 20px;margin-top: 50px\\\" *ngIf=\\\"report=='monthly'\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"monthly\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Month </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.monthly}}</td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"itemName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Item </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.itemName}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"year\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Year </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.year}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"weight\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.weight}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"totalAmount\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> TotalAmount </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.totalAmount}} </td>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumn1\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumn1;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n<!--Customize -->\\r\\n<div class=\\\"mat-elevation-z8\\\" style=\\\"margin-bottom: 10px;margin-left: 20px;margin-right: 20px;margin-top: 50px\\\" *ngIf=\\\"report=='customize'\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"orderDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Date </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.orderDate | date:'MMM d, y'}}</td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"itemName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Item </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.itemName}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"weight\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.weight}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"totalAmount\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> TotalAmount </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.totalAmount}} </td>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumn2\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumn2;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n<notifier-container></notifier-container>\\r\\n\"","module.exports = \".example-card {\\n  width: 30%;\\n  margin-top: 50px; }\\n\\n.example-full-width {\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 16px; }\\n\\nbutton {\\n  margin-left: 15px; }\\n\\ntable {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd {\\n  width: 25%;\\n  font-family: 'Times New Roman', Times, serif; }\\n\\nth {\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 20px;\\n  width: 25%;\\n  color: #6200EE; }\\n\\n.example-table-container {\\n  position: relative;\\n  overflow: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9yZXBvcnQvc3RhdGljLXJlcG9ydC9wdXJjaGFzZS1yZXBvcnQvRTpcXFZwX1dTXFxmb3VuZHJ5LWNsaWVudC9zcmNcXGFwcFxcZm91bmRyeVxccmVwb3J0XFxzdGF0aWMtcmVwb3J0XFxwdXJjaGFzZS1yZXBvcnRcXHB1cmNoYXNlLXJlcG9ydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQVU7RUFDVixnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxrQkFBa0I7RUFDbEIsNENBQTRDO0VBQzVDLGVBQWUsRUFBQTs7QUFFbkI7RUFDQSxpQkFBaUIsRUFBQTs7QUFFakI7RUFDSSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxlQUFlO0VBQ2YsV0FBVyxFQUFBOztBQUdiO0VBQ0UsVUFBVTtFQUNWLDRDQUE0QyxFQUFBOztBQUU5QztFQUNJLDRDQUE0QztFQUM1QyxlQUFlO0VBQ2YsVUFBVTtFQUNWLGNBQWEsRUFBQTs7QUFFakI7RUFDRSxrQkFBa0I7RUFDbEIsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZm91bmRyeS9yZXBvcnQvc3RhdGljLXJlcG9ydC9wdXJjaGFzZS1yZXBvcnQvcHVyY2hhc2UtcmVwb3J0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY2FyZHtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG5cclxufVxyXG4uZXhhbXBsZS1mdWxsLXdpZHRoe1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuYnV0dG9ue1xyXG5tYXJnaW4tbGVmdDogMTVweDtcclxufVxyXG50YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcblxyXG4gIC5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcblxyXG4gIHRke1xyXG4gICAgd2lkdGg6IDI1JTtcclxuICAgIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xyXG4gIH1cclxuICB0aHtcclxuICAgICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgd2lkdGg6IDI1JTtcclxuICAgICAgY29sb3I6IzYyMDBFRTtcclxuICB9XHJcbiAgLmV4YW1wbGUtdGFibGUtY29udGFpbmVyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gIH1cclxuIl19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ItemsService } from 'src/app/foundry/items/items.service';\r\nimport { Items } from 'src/app/foundry/items/items';\r\nimport { StaticReportService } from '../static-report.service';\r\nimport { PurchaseReport } from './purchase-report';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { NotifierService } from 'angular-notifier';\r\n\r\n@Component({\r\n  selector: 'app-purchase-report',\r\n  templateUrl: './purchase-report.component.html',\r\n  styleUrls: ['./purchase-report.component.scss']\r\n})\r\nexport class PurchaseReportComponent implements OnInit {\r\n  public items: Items;\r\n  public itemList: Items[];\r\n  public selectedItem = [];\r\n  public purchaseReport = [];\r\n  reportName;\r\n  fromDate;\r\n  toDate;\r\n  public year = [];\r\n  years;\r\n  public report;\r\n  dataSource;\r\n  private notifier: NotifierService;\r\n  public purchaseReports: PurchaseReport;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(public itemService: ItemsService, public staticReportService: StaticReportService,\r\n    notifierService: NotifierService) {\r\n    this.notifier = notifierService;\r\n  }\r\n\r\n  displayedColumns: String[] = ['itemName', 'year', 'weight', 'totalAmount'];\r\n  displayedColumn1: String[] = ['monthly', 'itemName', 'year', 'weight', 'totalAmount'];\r\n  displayedColumn2: String[] = ['orderDate', 'itemName', 'weight', 'totalAmount'];\r\n  ngOnInit() {\r\n\r\n    this.getAllItems();\r\n    this.getAllYears();\r\n    this.getAllPurchaseList();\r\n    this.items = new Items();\r\n    this.purchaseReports = new PurchaseReport();\r\n  }\r\n\r\n  getAllItems() {\r\n    this.itemService.getAllItems().subscribe((data) => {\r\n      this.itemList = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  onChange(event, itemName) {\r\n    if (event.checked) {\r\n      this.selectedItem.push(itemName);\r\n    } else {\r\n      let i = 0;\r\n      this.selectedItem.forEach(res => {\r\n        if (res == itemName) {\r\n          this.selectedItem.splice(i, 1);\r\n        }\r\n        i++;\r\n      });\r\n    }\r\n  }\r\n\r\n  searchPurchaseReport() {\r\n    let option = [{ month: '', itemName: '', year: '', weight: '', totalAmount: '' }];\r\n    let option1 = [{ itemName: '', year: '', weight: '', totalAmount: '' }];\r\n    let option2 = [{ orderDate: '', itemName: '', weight: '', totalAmount: '' }];\r\n\r\n    this.purchaseReports.year = this.years;\r\n    this.purchaseReports.itemName = this.selectedItem.toString();\r\n    this.purchaseReports.reportType = this.reportName;\r\n    this.purchaseReports.fromDate = this.fromDate;\r\n    this.purchaseReports.toDate = this.toDate;\r\n\r\n    this.staticReportService.searchPurchaseReport(this.purchaseReports).subscribe((data) => {\r\n      this.purchaseReport = data;\r\n      if (this.reportName === 'YEARLY') {\r\n        this.report = 'yearly';\r\n      } else if (this.reportName === 'MONTHLY') {\r\n        this.report = 'monthly';\r\n      } else if (this.reportName === 'CUSTOMIZE') {\r\n        this.report = 'customize';\r\n      }\r\n      if (this.selectedItem.length >= 1) {\r\n        let i = 0;\r\n        this.selectedItem.forEach(res => {\r\n          this.purchaseReport.forEach(response => {\r\n            if (response.itemName === res) {\r\n              if (this.reportName === 'MONTHLY') {\r\n                option[i].month = response.month;\r\n                option[i].itemName = response.itemName;\r\n                option[i].weight = response.weight;\r\n                option[i].year = response.year;\r\n                option[i].totalAmount = response.totalAmount;\r\n                option.push({ month: '', itemName: '', year: '', weight: '', totalAmount: '' });\r\n                i++;\r\n              } else if (this.reportName === 'YEARLY') {\r\n                option1[i].itemName = response.itemName;\r\n                option1[i].weight = response.weight;\r\n                option1[i].year = response.year;\r\n                option1[i].totalAmount = response.totalAmount;\r\n                option1.push({ itemName: '', year: '', weight: '', totalAmount: '' });\r\n                i++;\r\n              } else if (this.reportName === 'CUSTOMIZE') {\r\n                option2[i].orderDate = response.orderDate;\r\n                option2[i].itemName = response.itemName;\r\n                option2[i].weight = response.weight;\r\n                option2[i].totalAmount = response.totalAmount;\r\n                option2.push({ orderDate: '', itemName: '', weight: '', totalAmount: '' });\r\n                i++;\r\n              }\r\n            }\r\n\r\n          })\r\n        })\r\n        if (this.reportName === 'MONTHLY') {\r\n          option.pop();\r\n          this.purchaseReport = option;\r\n        } else if (this.reportName === 'YEARLY') {\r\n          option1.pop();\r\n          this.purchaseReport = option1;\r\n        } else if (this.reportName === 'CUSTOMIZE') {\r\n          option2.pop();\r\n          this.purchaseReport = option2;\r\n        }\r\n      }\r\n\r\n      if (this.purchaseReport.length == 0) {\r\n        this.notifier.notify('warning', 'No data Available!');\r\n      }\r\n      this.dataSource = new MatTableDataSource(this.purchaseReport);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getAllYears() {\r\n    this.staticReportService.getAllYears().subscribe((data) => {\r\n      this.year = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getAllPurchaseList() {\r\n    this.staticReportService.getAllPurchaseList().subscribe((data) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n}\r\n","export class PurchaseReport {\r\n    year: String;\r\n    reportType: String;\r\n    itemName: String;\r\n    fromDate: String;\r\n    toDate: String;\r\n    vendorName:String;\r\n}\r\n","module.exports = \"<mat-card class=\\\"example-card\\\" style=\\\"margin-left:20px; margin-top: 30px; margin-right: 20px;\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Filter</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input type=\\\"text\\\" placeholder=\\\"partId\\\" aria-label=\\\"partId\\\" name=\\\"partId\\\" matInput [formControl]=\\\"productControl\\\"\\r\\n            [matAutocomplete]=\\\"auto2\\\" [(ngModel)]=\\\"rawMaterial.partId\\\">\\r\\n          <mat-autocomplete autoActiveFirstOption #auto2=\\\"matAutocomplete\\\" (optionSelected)=\\\"getMeltNoOrderIdBypartId(rawMaterial)\\\">\\r\\n            <mat-option *ngFor=\\\"let product of filteredProducts | async\\\" [value]=\\\"product.partId\\\">\\r\\n              {{product.partId}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input type=\\\"text\\\" placeholder=\\\"Order No\\\" aria-label=\\\"orderNo\\\" name=\\\"orderNo\\\" matInput [formControl]=\\\"orderControl\\\"\\r\\n            [matAutocomplete]=\\\"auto4\\\" [(ngModel)]=\\\"rawMaterial.orderId\\\">\\r\\n          <mat-autocomplete autoActiveFirstOption #auto4=\\\"matAutocomplete\\\" (optionSelected)=\\\"getMeltNoByOrderId(rawMaterial)\\\">\\r\\n            <mat-option *ngFor=\\\"let order of filteredOrders | async\\\" [value]=\\\"order.orderId\\\">\\r\\n              {{order.orderId}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input type=\\\"text\\\" placeholder=\\\"meltNo\\\" aria-label=\\\"meltNo\\\" name=\\\"meltNo\\\" matInput [formControl]=\\\"meltControl\\\"\\r\\n            [matAutocomplete]=\\\"auto3\\\" [(ngModel)]=\\\"rawMaterial.meltNo\\\">\\r\\n          <mat-autocomplete autoActiveFirstOption #auto3=\\\"matAutocomplete\\\" (optionSelected)=\\\"getSelectedReport(rawMaterial)\\\">\\r\\n            <mat-option *ngFor=\\\"let melt of filteredMelts | async\\\" [value]=\\\"melt.meltNo\\\">\\r\\n              {{melt.meltNo}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"From date\\\" name=\\\"FromDate\\\" [(ngModel)]=\\\"rawMaterial.fromDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker1></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End date\\\" name=\\\"toDate\\\" [(ngModel)]=\\\"rawMaterial.toDate\\\"\\r\\n            (ngModelChange)=\\\"getSelectedReport(rawMaterial)\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker2></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\">\\r\\n          <a style=\\\"color:white;\\\" href=\\\"http://52.26.246.107:3000/api/rawMaterialConsumptionReports/rawMaterialXlsx\\\" target=\\\"_block\\\">EXCEL</a>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\">\\r\\n          <a style=\\\"color:white;\\\" href=\\\"http://52.26.246.107:3000/api/rawMaterialConsumptionReports/rawMaterialPdf\\\" target=\\\"_block\\\">PDF</a>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<div class=\\\"mat-elevation-z8\\\" style=\\\"margin-left:20px; margin-top: 50px; margin-right: 20px; margin-bottom: 10px;\\\">\\r\\n  <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n    <!-- PartId Column -->\\r\\n    <ng-container matColumnDef=\\\"partId\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> PartId </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let rawMaterial\\\"> {{rawMaterial.partId}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- MeltNo Column -->\\r\\n    <ng-container matColumnDef=\\\"meltNo\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>MeltNo</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let rawMaterial\\\"> {{rawMaterial.meltNo}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- orderId Column -->\\r\\n    <ng-container matColumnDef=\\\"orderId\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>OrderId</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let rawMaterial\\\"> {{rawMaterial.orderId}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- meltDate Column -->\\r\\n    <ng-container matColumnDef=\\\"meltDate\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>MeltDate</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let rawMaterial\\\"> {{rawMaterial.meltDate | date:'MMM d, y'}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- itemName Column -->\\r\\n    <ng-container matColumnDef=\\\"itemName\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> ItemName </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let rawMaterial\\\"> {{rawMaterial.itemName}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- rawMaterialTotalWeight column -->\\r\\n    <ng-container matColumnDef=\\\"rawMaterialTotalWeight\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>RawMaterialTotWt</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let rawMaterial\\\"> {{rawMaterial.rawMaterialTotalWeight}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- consumablesTotalWeight Column -->\\r\\n    <ng-container matColumnDef=\\\"consumablesTotalWeight\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Cons.TotWeight </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let rawMaterial\\\"> {{rawMaterial.consumablesTotalWeight}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- perKgCost Column -->\\r\\n    <ng-container matColumnDef=\\\"perKgCost\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>PerKgCost </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let rawMaterial\\\"> {{rawMaterial.perKgCost}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let rawMaterial; columns: displayedColumns;\\\">\\r\\n    </mat-row>\\r\\n  </mat-table>\\r\\n\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%;\\n  text-align: center; }\\n\\nmat-header-cell {\\n  font-size: 16px;\\n  font: outline;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-weight: bold;\\n  color: #6200EE; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9yZXBvcnQvc3RhdGljLXJlcG9ydC9yYXctbWF0ZXJpYWwtcmVwb3J0L0U6XFxWcF9XU1xcZm91bmRyeS1jbGllbnQvc3JjXFxhcHBcXGZvdW5kcnlcXHJlcG9ydFxcc3RhdGljLXJlcG9ydFxccmF3LW1hdGVyaWFsLXJlcG9ydFxccmF3LW1hdGVyaWFsLXJlcG9ydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLGVBQWU7RUFDZixXQUFXO0VBQ1gsa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0UsZUFBZTtFQUNmLGFBQWE7RUFDYiw0Q0FBMkM7RUFDNUMsaUJBQWlCO0VBQ2pCLGNBQWEsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvcmVwb3J0L3N0YXRpYy1yZXBvcnQvcmF3LW1hdGVyaWFsLXJlcG9ydC9yYXctbWF0ZXJpYWwtcmVwb3J0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWF0LWZvcm0tZmllbGQge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICB3aWR0aDogMTAwJTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbm1hdC1oZWFkZXItY2VsbHtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgZm9udDogb3V0bGluZTtcclxuICBmb250LWZhbWlseTonVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xyXG4gZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiBjb2xvcjojNjIwMEVFO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { StaticReportService } from '../static-report.service';\r\nimport { RawMaterialReport } from './raw-material-report';\r\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { ProductionMonitoringService } from '../../../production-monitoring/production-monitoring.service';\r\nimport { Melt } from '../../../production-monitoring/melt';\r\nimport { OrderService } from '../../../order/order.service';\r\nimport { Order } from '../../../order/order';\r\nimport { ProductService } from '../../../product/product.service';\r\nimport { Product } from '../../../product/product';\r\nimport { OngoingMelts } from '../../../production-monitoring/ongoing-melts/ongoing-melts';\r\n@Component({\r\n  selector: 'app-raw-material-report',\r\n  templateUrl: './raw-material-report.component.html',\r\n  styleUrls: ['./raw-material-report.component.scss']\r\n})\r\nexport class RawMaterialReportComponent implements OnInit {\r\n  public rawMaterialReports: RawMaterialReport[];\r\n  public rawMaterialReports1: RawMaterialReport[];\r\n  public rawMaterial: RawMaterialReport;\r\n  public melts: Melt[];\r\n  public orders: Order[];\r\n  public products: Product[];\r\n  public ongoingmelts: OngoingMelts[];\r\n  displayedColumns = ['partId', 'meltNo', 'orderId','meltDate', 'rawMaterialTotalWeight', 'consumablesTotalWeight', 'perKgCost', 'itemName'];\r\n  dataSource;\r\n  filteredMelts: Observable<Melt[]>;\r\n  filteredOrders: Observable<Order[]>;\r\n  filteredProducts: Observable<Product[]>;\r\n  productControl = new FormControl;\r\n  meltControl = new FormControl;\r\n  orderControl = new FormControl;\r\n  Option = [{ _id: '', meltNo: '',moldingType:'',heatCode:'', meltStartDate: '', meltEndDate: '', totalMeltWeight: 0, status: '' }];\r\n  constructor(public staticReportService: StaticReportService, public productionService: ProductionMonitoringService,\r\n    public orderService: OrderService, public productService: ProductService) { }\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngOnInit() {\r\n    this.rawMaterial = new RawMaterialReport();\r\n    this.rawMaterialReport();\r\n    this.getFilterMelt();\r\n    this.getFilterOrder();\r\n    this.getFilterProduct();\r\n  }\r\n\r\n\r\n  rawMaterialReport() {\r\n    this.staticReportService.rawMaterialReport().subscribe(data => {\r\n      this.rawMaterialReports = data;\r\n      this.dataSource = new MatTableDataSource(this.rawMaterialReports);\r\n      this.dataSource.sort = this.sort;\r\n      this.dataSource.paginator = this.paginator;\r\n    }, error => {\r\n      console.log('error');\r\n    })\r\n  }\r\n\r\n\r\n  getFilterMelt() {\r\n    this.productionService.getAllMelt().subscribe((data) => {\r\n      this.melts = data;\r\n      console.log(this.melts);\r\n      this.filteredMelts = this.meltControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterMelt(state) : this.melts.slice())\r\n      );\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  getFilterOrder() {\r\n    this.orderService.getOrder().subscribe((data) => {\r\n      this.orders = data;\r\n      console.log('data1', this.orders);\r\n      this.filteredOrders = this.orderControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterOrder(state) : this.orders.slice())\r\n      );\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  getFilterProduct() {\r\n    this.productService.getProducts().subscribe((data) => {\r\n      this.products = data;\r\n      this.filteredProducts = this.productControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterProduct(state) : this.products.slice())\r\n      );\r\n    }, (error) => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  private _filterMelt(value: String): Melt[] {\r\n    const filerValue = value.toLowerCase();\r\n    return this.melts.filter(melts => melts.meltNo.toLowerCase().indexOf(filerValue) === 0);\r\n  }\r\n  private _filterOrder(value: number): Order[] {\r\n    const filerValue = value.toLocaleString();\r\n    return this.orders.filter(melts => melts.orderId.toLocaleString().indexOf(filerValue) === 0);\r\n  }\r\n  private _filterProduct(value: string): Product[] {\r\n    const filerValue = value.toLowerCase();\r\n    return this.products.filter(melts => melts.partId.toLowerCase().indexOf(filerValue) === 0);\r\n  }\r\n\r\n  getSelectedReport(rawMaterial: RawMaterialReport) {\r\n    console.log('rawMaterial',rawMaterial)\r\n    this.staticReportService.rawMaterialSelectedReports(rawMaterial).subscribe((data) => {\r\n      console.log('selected data', data);\r\n      this.rawMaterialReports1 = data;\r\n      this.dataSource = new MatTableDataSource(this.rawMaterialReports1);\r\n      this.dataSource.sort = this.sort;\r\n      this.dataSource.paginator = this.paginator;\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n\r\n  }\r\n\r\n  getMeltNoOrderIdBypartId(rawMaterial: RawMaterialReport) {\r\n    console.log('rawMaterial', rawMaterial);\r\n    this.productionService.getMeltNoOrderIdReportByPartId(rawMaterial).subscribe(data => {\r\n      this.orders = data;\r\n      this.ongoingmelts = data;\r\n      let i = 0;\r\n      this.ongoingmelts.forEach(res => {\r\n        //console.log(' res.meltId.meltNo', res.meltId.meltNo)\r\n        this.Option[i].meltNo = res.meltId.meltNo.toString();\r\n        console.log('this.Option[i].meltNo', this.Option[i].meltNo);\r\n        this.Option.push({ _id: '', meltNo: '',moldingType:'',heatCode:'', meltStartDate: '', meltEndDate: '', totalMeltWeight: 0, status: '' });\r\n        i++;\r\n      });\r\n      this.Option.pop();\r\n      this.melts = this.Option;\r\n      this.filteredMelts = this.meltControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterMelt(state) : this.melts.slice())\r\n      );\r\n      this.filteredOrders = this.orderControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterOrder(state) : this.orders.slice())\r\n      );\r\n      this.getSelectedReport(rawMaterial);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  getMeltNoByOrderId(rawMaterial: RawMaterialReport) {\r\n    this.productionService.getMeltNoOrderIdReportByPartId(rawMaterial).subscribe(data => {\r\n      this.ongoingmelts = data;\r\n      console.log(' this.ongoingmelts', this.ongoingmelts)\r\n      let i = 0;\r\n      this.ongoingmelts.forEach(res => {\r\n        //console.log(' res.meltId.meltNo', res.meltId.meltNo)\r\n        this.Option[i].meltNo = res.meltId.meltNo.toString();\r\n        console.log('this.Option[i].meltNo', this.Option[i].meltNo);\r\n        this.Option.push({ _id: '', meltNo: '',moldingType:'',heatCode:'', meltStartDate: '', meltEndDate: '', totalMeltWeight: 0, status: '' });\r\n        i++;\r\n      });\r\n      this.Option.pop();\r\n      this.melts = this.Option;\r\n      this.filteredMelts = this.meltControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterMelt(state) : this.melts.slice())\r\n      );\r\n      this.getSelectedReport(rawMaterial);\r\n    }, error =>{\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n","export class RawMaterialReport {\r\n  _id: String;\r\n  partId: String;\r\n  meltNo: String;\r\n  batchId: String;\r\n  orderId: number;\r\n  meltDate:String;\r\n  rawMaterialTotalWeight: number;\r\n  consumablesTotalWeight: number;\r\n  perKgCost: number;\r\n  itemName: String;\r\n  itemType: String;\r\n  totalCostRawMaterial: number;\r\n  totalCostConsumables: number;\r\n  fromDate:String;\r\n  toDate:String;\r\n}\r\n","module.exports = \"<mat-card class=\\\"example-card\\\" style=\\\"margin-left:20px; margin-top: 30px; margin-right: 20px;\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Filter</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <section class=\\\"example-section\\\" *ngFor=\\\"let item of items;let i=index\\\">\\r\\n          <mat-checkbox class=\\\"example-margin\\\" (change)=\\\"onChange($event,item.itemName)\\\">{{item.itemName}}</mat-checkbox>\\r\\n        </section>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <mat-select placeholder=\\\"ReportType\\\" aria-label=\\\"select\\\" name=\\\"reportType\\\" [(ngModel)]=\\\"reportType\\\">\\r\\n            <mat-option value=\\\"MONTHLY\\\">Monthly</mat-option>\\r\\n            <mat-option value=\\\"QUARTELY\\\">Quarts</mat-option>\\r\\n            <mat-option value=\\\"YEARLY\\\">Yearly</mat-option>\\r\\n            <mat-option value=\\\"CUSTOMIZE\\\">Customize</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"reportType == 'MONTHLY'\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <mat-select placeholder=\\\"year\\\" name=\\\"year\\\" [(ngModel)]=\\\"years\\\">\\r\\n            <mat-option *ngFor=\\\"let years of year\\\" [value]=\\\"years\\\">\\r\\n              {{years}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"reportType== 'CUSTOMIZE'\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"From date\\\" name=\\\"FromDate\\\" [(ngModel)]=\\\"fromDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker1></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"reportType== 'CUSTOMIZE'\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End date\\\" name=\\\"toDate\\\" [(ngModel)]=\\\"toDate\\\" >\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker2></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"searchRawMaterialSummaryReport()\\\">\\r\\n          <mat-icon>search</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\">\\r\\n          <a>EXCEL</a>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\">\\r\\n          <a>PDF</a>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<!-- Year wise-->\\r\\n<div *ngIf=\\\"report==false\\\">\\r\\n    <div class=\\\"mat-elevation-z8\\\" style=\\\"margin-bottom: 10px;margin-left: 20px;margin-right: 20px;margin-top: 50px\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"itemName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Item </th>\\r\\n          <td mat-cell *matCellDef=\\\"let report\\\"> {{report.itemName}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"year\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Year </th>\\r\\n          <td mat-cell *matCellDef=\\\"let report\\\"> {{report.year}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"weight\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\\r\\n          <td mat-cell *matCellDef=\\\"let report\\\"> {{report.weight}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\r\\n  </div>\\r\\n\\r\\n   <!--Monthly wise-->\\r\\n<div *ngIf=\\\"report==true\\\">\\r\\n    <div class=\\\"mat-elevation-z8\\\" style=\\\"margin-bottom: 10px;margin-left: 20px;margin-right: 20px;margin-top: 50px\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"month\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Month </th>\\r\\n          <td mat-cell *matCellDef=\\\"let report\\\"> {{report.month}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"itemName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Item </th>\\r\\n          <td mat-cell *matCellDef=\\\"let report\\\"> {{report.itemName}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"year\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Year </th>\\r\\n          <td mat-cell *matCellDef=\\\"let report\\\"> {{report.year}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"weight\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\\r\\n          <td mat-cell *matCellDef=\\\"let report\\\"> {{report.weight}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumn1\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumn1;\\\">\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\r\\n  </div>\\r\\n  <notifier-container></notifier-container>\\r\\n\"","module.exports = \".example-card {\\n  width: 100%;\\n  margin-top: 50px; }\\n\\n.example-full-width {\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 16px; }\\n\\nbutton {\\n  margin-left: 15px; }\\n\\ntable {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd {\\n  width: 25%;\\n  font-family: 'Times New Roman', Times, serif; }\\n\\nth {\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 20px;\\n  width: 25%;\\n  color: #6200EE; }\\n\\n.example-table-container {\\n  position: relative;\\n  overflow: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9yZXBvcnQvc3RhdGljLXJlcG9ydC9yYXctbWF0ZXJpYWwtc3VtbWFyeS1yZXBvcnQvRTpcXFZwX1dTXFxmb3VuZHJ5LWNsaWVudC9zcmNcXGFwcFxcZm91bmRyeVxccmVwb3J0XFxzdGF0aWMtcmVwb3J0XFxyYXctbWF0ZXJpYWwtc3VtbWFyeS1yZXBvcnRcXHJhdy1tYXRlcmlhbC1zdW1tYXJ5LXJlcG9ydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxnQkFBZ0IsRUFBQTs7QUFHbEI7RUFDRSxrQkFBa0I7RUFDbEIsNENBQTRDO0VBQzVDLGVBQWUsRUFBQTs7QUFFakI7RUFDQSxpQkFBaUIsRUFBQTs7QUFFakI7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxlQUFlO0VBQ2YsV0FBVyxFQUFBOztBQUdiO0VBQ0UsVUFBVTtFQUNWLDRDQUE0QyxFQUFBOztBQUU5QztFQUNJLDRDQUE0QztFQUM1QyxlQUFlO0VBQ2YsVUFBVTtFQUNWLGNBQWEsRUFBQTs7QUFFakI7RUFDRSxrQkFBa0I7RUFDbEIsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZm91bmRyeS9yZXBvcnQvc3RhdGljLXJlcG9ydC9yYXctbWF0ZXJpYWwtc3VtbWFyeS1yZXBvcnQvcmF3LW1hdGVyaWFsLXN1bW1hcnktcmVwb3J0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY2FyZHtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXJnaW4tdG9wOiA1MHB4O1xyXG5cclxufVxyXG4uZXhhbXBsZS1mdWxsLXdpZHRoe1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuYnV0dG9ue1xyXG5tYXJnaW4tbGVmdDogMTVweDtcclxufVxyXG50YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYXQtZm9ybS1maWVsZCB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG50ZHtcclxuICB3aWR0aDogMjUlO1xyXG4gIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xyXG59XHJcbnRoe1xyXG4gICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICB3aWR0aDogMjUlO1xyXG4gICAgY29sb3I6IzYyMDBFRTtcclxufVxyXG4uZXhhbXBsZS10YWJsZS1jb250YWluZXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzogYXV0bztcclxufVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\r\nimport { StaticReportService } from '../static-report.service';\r\nimport { RawMaterialSummaryReport } from './raw-material-summary-report';\r\nimport { CustomerService } from '../../../customer/customer.service';\r\nimport { Customer } from '../../../customer/customer';\r\nimport { Items } from '../../../items/items';\r\nimport { ItemsService } from '../../../items/items.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { NotifierService } from 'angular-notifier';\r\n@Component({\r\n  selector: 'app-raw-material-summary-report',\r\n  templateUrl: './raw-material-summary-report.component.html',\r\n  styleUrls: ['./raw-material-summary-report.component.scss']\r\n})\r\nexport class RawMaterialSummaryReportComponent implements OnInit {\r\n  public item: Items;\r\n  public items: Items[];\r\n  public rawMaterialSummaryReports: RawMaterialSummaryReport[];\r\n  public rawMatSummaryReport: RawMaterialSummaryReport;\r\n\r\n  filteredItems: Observable<Items[]>;\r\n  public selectedItem = [];\r\n  public year = [];\r\n  itemControl = new FormControl;\r\n  dataSource;\r\n  years;\r\n  fromDate;\r\n  toDate;\r\n  reportType;\r\n  public rawMaterialReport = [];\r\n  public report = false;\r\n  public notifier: NotifierService;\r\n  displayedColumns = ['itemName', 'weight', 'year'];\r\n  displayedColumns1 = ['month', 'itemName', 'weight', 'year'];\r\n  constructor(public staticReportService: StaticReportService, notifierService: NotifierService) {\r\n    this.notifier = notifierService;\r\n  }\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngOnInit() {\r\n    this.item = new Items();\r\n    this.rawMatSummaryReport = new RawMaterialSummaryReport();\r\n    this.rawMaterialSummaryReport();\r\n    this.getItemName();\r\n    this.getYears();\r\n  }\r\n\r\n  rawMaterialSummaryReport() {\r\n    this.staticReportService.rawMaterialSummaryReport().subscribe((data) => {\r\n      console.log('data', data);\r\n      this.rawMaterialSummaryReports = data;\r\n      this.dataSource = new MatTableDataSource(this.rawMaterialSummaryReports);\r\n      this.dataSource.sort = this.sort;\r\n      this.dataSource.paginator = this.paginator;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n\r\n  getItemName() {\r\n    this.staticReportService.getRawMaterialItems().subscribe((data) => {\r\n      this.items = data;\r\n      console.log('test', this.items);\r\n      this.filteredItems = this.itemControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterItem(state) : this.items.slice())\r\n      );\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n  private _filterItem(value: string): Items[] {\r\n    const filerValue = value.toLowerCase();\r\n    return this.items.filter(items => items.itemName.toLowerCase().indexOf(filerValue) === 0);\r\n  }\r\n\r\n  onChange(event, itemName) {\r\n    if (event.checked) {\r\n      this.selectedItem.push(itemName);\r\n\r\n    } else {\r\n      let i = 0;\r\n      this.selectedItem.forEach(res => {\r\n        if (res === itemName) {\r\n          this.selectedItem.splice(i, 1);\r\n        }\r\n        i++;\r\n      });\r\n    }\r\n  }\r\n\r\n  getYears() {\r\n    console.log('getYears');\r\n    this.staticReportService.getYears().subscribe((data) => {\r\n      this.year = data;\r\n      console.log('this.year', this.year);\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  searchRawMaterialSummaryReport() {\r\n    let option = [{ month: '', itemName: '', year: '', weight: '' }];\r\n    let option1 = [{ itemName: '', year: '', weight: '' }];\r\n    this.rawMatSummaryReport.years = this.years;\r\n    this.rawMatSummaryReport.fromDate = this.fromDate;\r\n    this.rawMatSummaryReport.toDate = this.toDate;\r\n    this.rawMatSummaryReport.itemName = this.selectedItem.toString();\r\n    this.rawMatSummaryReport.reportType = this.reportType;\r\n    this.staticReportService.getSelectedReport(this.rawMatSummaryReport).subscribe((data) => {\r\n      console.log('getSelectedReport', data);\r\n      this.rawMaterialReport = data;\r\n      if (this.reportType === 'MONTHLY' || this.reportType === 'CUSTOMIZE') {\r\n        this.report = true;\r\n      } else {\r\n        this.report = false;\r\n      }\r\n      if (this.selectedItem.length >= 1) {\r\n        let i = 0;\r\n        this.selectedItem.forEach(res => {\r\n          this.rawMaterialReport.forEach(response => {\r\n            if (response.itemName === res) {\r\n              if (this.reportType === 'MONTHLY' || this.reportType === 'CUSTOMIZE') {\r\n                option[i].month = response.month;\r\n                option[i].itemName = response.itemName;\r\n                option[i].weight = response.weight;\r\n                option[i].year = response.year;\r\n                option.push({ month: '', itemName: '', year: '', weight: '' });\r\n                i++;\r\n              } else if (this.reportType === 'YEARLY') {\r\n                option1[i].itemName = response.itemName;\r\n                option1[i].weight = response.weight;\r\n                option1[i].year = response.year;\r\n                option1.push({ itemName: '', year: '', weight: '' });\r\n                i++;\r\n              }\r\n            }\r\n\r\n          });\r\n        });\r\n        if (this.reportType === 'MONTHLY' || this.reportType === 'CUSTOMIZE') {\r\n          option.pop();\r\n          this.rawMaterialReport = option;\r\n        } else if (this.reportType === 'YEARLY') {\r\n          option1.pop();\r\n          this.rawMaterialReport = option1;\r\n        }\r\n      }\r\n\r\n      if (this.rawMaterialReport.length === 0) {\r\n        this.notifier.notify('warning', 'No data Available!');\r\n      }\r\n      this.dataSource = new MatTableDataSource(this.rawMaterialReport);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n}\r\n","export class RawMaterialSummaryReport{\r\n  meltDate:String;\r\n  meltNo:String;\r\n  weight:number;\r\n  itemName:String;\r\n  fromDate: String;\r\n  toDate: String;\r\n  years: String;\r\n  reportType: String;\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {StaticReportComponent} from './static-report.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: StaticReportComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class StaticReportRoutingModule {}\r\n","module.exports = \"<mat-tab-group style=\\\"margin-top:50px;\\\">\\r\\n  <mat-tab label=\\\"Melt Report\\\"><app-melt-report></app-melt-report></mat-tab>\\r\\n  <mat-tab label=\\\"Purchase Report\\\"><app-purchase-report></app-purchase-report></mat-tab>\\r\\n  <mat-tab label=\\\"Vendor Wise Purchase\\\"><app-vendor-wise-purchase-report></app-vendor-wise-purchase-report></mat-tab>\\r\\n  <mat-tab label=\\\"Raw Material Report\\\"><app-raw-material-report></app-raw-material-report></mat-tab>\\r\\n  <mat-tab label=\\\"Raw Material Summary Report\\\"><app-raw-material-summary-report></app-raw-material-summary-report> </mat-tab>\\r\\n  <mat-tab label=\\\"Delivery Completed Report\\\"><app-delivery-completed-report></app-delivery-completed-report></mat-tab>\\r\\n  <!--<mat-tab label=\\\"Delivery Pending Report\\\"><app-delivery-pending-report></app-delivery-pending-report></mat-tab>-->\\r\\n</mat-tab-group>\\r\\n  <!-- <div style=\\\"margin-top: 50px;\\\">\\r\\n    <div *ngIf=\\\"reportName=='melt'\\\">\\r\\n      <app-melt-report></app-melt-report>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"reportName=='order'\\\">\\r\\n      <app-melt-report></app-melt-report>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"reportName=='purchase'\\\">\\r\\n      <app-purchase-report></app-purchase-report>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"reportName=='rawmaterial'\\\">\\r\\n      <app-raw-material-report></app-raw-material-report>\\r\\n    </div>\\r\\n    <div *ngIf= \\\"reportName=='rawmaterialsummary'\\\">\\r\\n    <app-raw-material-summary-report></app-raw-material-summary-report>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"reportName=='completed'\\\">\\r\\n      <app-delivery-completed-report></app-delivery-completed-report>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"reportName=='pending'\\\">\\r\\n      <app-melt-report></app-melt-report>\\r\\n    </div>\\r\\n\\r\\n  </div> -->\\r\\n\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvcmVwb3J0L3N0YXRpYy1yZXBvcnQvc3RhdGljLXJlcG9ydC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-static-report',\r\n  templateUrl: './static-report.component.html',\r\n  styleUrls: ['./static-report.component.scss']\r\n})\r\nexport class StaticReportComponent implements OnInit {\r\n\r\n  public reportName;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StaticReportComponent } from './static-report.component';\r\nimport { StaticReportRoutingModule } from './static-report-routing.module';\r\nimport { PurchaseReportComponent } from './purchase-report/purchase-report.component';\r\nimport { OrderReportComponent } from './order-report/order-report.component';\r\nimport { RawMaterialReportComponent } from './raw-material-report/raw-material-report.component';\r\nimport { MaterialModule } from '../../../app.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MeltReportComponent } from './melt-report/melt-report.component';\r\nimport { DeliveryCompletedReportComponent } from './delivery-completed-report/delivery-completed-report.component';\r\nimport { DeliveryPendingReportComponent } from './delivery-pending-report/delivery-pending-report.component';\r\nimport { StaticReportService } from './static-report.service';\r\nimport { CustomerService } from '../../customer/customer.service';\r\nimport { ProductionMonitoringService } from '../../production-monitoring/production-monitoring.service';\r\nimport { from } from 'rxjs';\r\nimport { ItemsService } from '../../items/items.service';\r\nimport { NotifierOptions, NotifierModule } from 'angular-notifier';\r\nimport {RawMaterialSummaryReportComponent} from './raw-material-summary-report/raw-material-summary-report.component';\r\nimport { VendorService } from '../../vendor/vendor.service';\r\nimport { VendorWisePurchaseReportComponent } from './vendor-wise-purchase-report/vendor-wise-purchase-report.component';\r\nconst customNotifierOptions: NotifierOptions = {\r\n  position: {\r\n    horizontal: {\r\n      position: 'middle',\r\n      distance: 12\r\n    },\r\n    vertical: {\r\n      position: 'top',\r\n      distance: 50,\r\n      gap: 10\r\n    }\r\n  },\r\n  theme: 'material',\r\n  behaviour: {\r\n    autoHide: 1200,\r\n    onClick: 'hide',\r\n    onMouseover: 'pauseAutoHide',\r\n    showDismissButton: true,\r\n    stacking: 4\r\n  },\r\n  animations: {\r\n    enabled: true,\r\n    show: {\r\n      preset: 'slide',\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    hide: {\r\n      preset: 'fade',\r\n      speed: 300,\r\n      easing: 'ease',\r\n      offset: 50\r\n    },\r\n    shift: {\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    overlap: 10\r\n  }\r\n};\r\n@NgModule({\r\n  declarations: [StaticReportComponent, PurchaseReportComponent,\r\n    OrderReportComponent, RawMaterialReportComponent, MeltReportComponent,\r\n    DeliveryCompletedReportComponent, DeliveryPendingReportComponent, RawMaterialSummaryReportComponent, VendorWisePurchaseReportComponent],\r\n  imports: [\r\n    CommonModule, FormsModule, ReactiveFormsModule,\r\n    StaticReportRoutingModule, MaterialModule, NotifierModule.withConfig(customNotifierOptions)\r\n  ],\r\n  providers: [StaticReportService, CustomerService, ProductionMonitoringService, ItemsService,VendorService]\r\n})\r\nexport class StaticReportModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { RequestOptions, Headers, Http, Response } from '@angular/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { MeltReport } from './melt-report/melt-report';\r\nimport { DeliveryCompletedReport } from './delivery-completed-report/delivery-completed-report';\r\nimport { PurchaseReport } from './purchase-report/purchase-report';\r\nimport { RawMaterialReport } from './raw-material-report/raw-material-report';\r\nimport { RawMaterialSummaryReport } from './raw-material-summary-report/raw-material-summary-report';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StaticReportService {\r\n\r\n  public baseUrl: String = 'api';\r\n\r\n  public headers = new Headers({ 'Content-Type': 'application/json' });\r\n\r\n  public options = new RequestOptions({ headers: this.headers });\r\n\r\n  constructor(public http: Http) { }\r\n\r\n\r\n  /*Get all Melt Report*/\r\n\r\n  getMeltReports() {\r\n    return this.http.get(this.baseUrl + '/meltReports', this.options)\r\n      .pipe(map((response: Response) => response.json()),\r\n        catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n\r\n  rawMaterialReport() {\r\n    return this.http.get(this.baseUrl + '/rawMaterialConsumptionReports', this.options)\r\n      .pipe(map((response: Response) => response.json()),\r\n        catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n\r\n  meltSelectedReport(meltReport: MeltReport) {\r\n    return this.http.post(this.baseUrl + '/meltReports/selectedReports', JSON.stringify(meltReport), this.options)\r\n      .pipe(map((response: Response) => response.json()),\r\n        catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n  rawMaterialSummaryReport() {\r\n    return this.http.get(this.baseUrl + '/rawMaterialSummaryReports', this.options)\r\n      .pipe(map((response: Response) => response.json()),\r\n        catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n\r\n  getRawMaterialItems() {\r\n    return this.http.get(this.baseUrl + '/items/getRawMaterialItems', this.options)\r\n      .pipe(map((response: Response) => response.json()),\r\n        catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n  rawMaterialSelectedReports(rawMaterial: RawMaterialReport) {\r\n    return this.http.post(this.baseUrl + '/rawMaterialConsumptionReports/selectedReports', JSON.stringify(rawMaterial), this.options)\r\n      .pipe(map((response: Response) => response.json()),\r\n        catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n\r\n  getYears() {\r\n    return this.http.get(this.baseUrl + '/rawMaterialSummaryReports/getYears', this.options)\r\n      .pipe(map((response: Response) => response.json()),\r\n        catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n  getSelectedReport(rawMaterialSummaryReport: RawMaterialSummaryReport) {\r\n    return this.http.post(this.baseUrl + '/rawMaterialSummaryReports', JSON.stringify(rawMaterialSummaryReport), this.options)\r\n      .pipe(map((response: Response) => response.json()),\r\n        catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n\r\n\r\n  getAllDeliveryCompletedReport() {\r\n    return this.http.get(this.baseUrl + '/deliveryCompleteds', this.options)\r\n      .pipe(map((resposne: Response) => resposne.json()),\r\n        catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n\r\n\r\n  getDeliveryCompletedReport(deliveryReport: DeliveryCompletedReport) {\r\n    return this.http.post(this.baseUrl + '/deliveryCompleteds', JSON.stringify(deliveryReport), this.options)\r\n      .pipe(map((resposne: Response) => resposne.json()),\r\n        catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n\r\n  getMeltNo() {\r\n    return this.http.get(this.baseUrl + '/sc', this.options)\r\n      .pipe(map((resposne: Response) => resposne.json()),\r\n        catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n\r\n  /*purchseReports*/\r\n  searchPurchaseReport(purchaseReports: PurchaseReport) {\r\n    return this.http.post(this.baseUrl + '/purchaseReports', JSON.stringify(purchaseReports), this.options)\r\n      .pipe(map((response: Response) => response.json())\r\n        , catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n\r\n  getAllYears() {\r\n    return this.http.get(this.baseUrl + '/purchaseReports', this.options)\r\n      .pipe(map((response: Response) => response.json())\r\n        , catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n\r\n\r\n  getAllPurchaseList() {\r\n    return this.http.get(this.baseUrl + '/purchaseReports' + '/allReport', this.options)\r\n      .pipe(map((response: Response) => response.json())\r\n        , catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n\r\n  searchVendorWisePurchase(purchaseReports: PurchaseReport) {\r\n    return this.http.put(this.baseUrl + '/purchaseReports', JSON.stringify(purchaseReports), this.options)\r\n      .pipe(map((response: Response) => response.json())\r\n        , catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-card style=\\\"margin-left: 20px;margin-right: 20px;margin-top: 30px\\\">\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Vendor\\\" [(ngModel)]=\\\"vendorName\\\">\\r\\n            <mat-option *ngFor=\\\"let vendor of vendorList\\\" [value]=\\\"vendor.vendorName\\\">\\r\\n              {{vendor.vendorName}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Type\\\" [(ngModel)]=\\\"reportName\\\">\\r\\n            <mat-option value=\\\"MONTHLY\\\">Monthly</mat-option>\\r\\n            <!-- <mat-option value=\\\"QUARTS\\\">Quarts</mat-option> -->\\r\\n            <mat-option value=\\\"YEARLY\\\">Yearly</mat-option>\\r\\n            <mat-option value=\\\"CUSTOMIZE\\\">Customize</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"reportName=='MONTHLY'\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Year\\\" [(ngModel)]=\\\"years\\\">\\r\\n            <mat-option *ngFor=\\\"let years of year\\\" [value]=\\\"years\\\">\\r\\n              {{years}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"reportName=='CUSTOMIZE'\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"fromDate\\\" [matDatepicker]=\\\"picker\\\" name=\\\"fromDate\\\" [(ngModel)]=\\\"fromDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"reportName=='CUSTOMIZE'\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"toDate\\\" [matDatepicker]=\\\"picker1\\\" name=\\\"toDate\\\" [(ngModel)]=\\\"toDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker1></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"searchVendorWisePurchase()\\\">\\r\\n          <mat-icon>search</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<div class=\\\"mat-elevation-z8\\\" style=\\\"margin-bottom: 10px;margin-left: 20px;margin-right: 20px;margin-top: 50px\\\" *ngIf=\\\"report==undefined || report=='yearly'\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n    \\r\\n    <ng-container matColumnDef=\\\"vendorName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Vendor </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.vendorName}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"itemName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Item </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.itemName}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"year\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Year </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.year}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"weight\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.weight}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"totalAmount\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> TotalAmount </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.totalAmount}} </td>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n<!--Monthly wise-->\\r\\n<div class=\\\"mat-elevation-z8\\\" style=\\\"margin-bottom: 10px;margin-left: 20px;margin-right: 20px;margin-top: 50px\\\" *ngIf=\\\"report=='monthly'\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"monthly\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Month </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.monthly}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"vendorName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Vendor </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.vendorName}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"itemName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Item </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.itemName}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"year\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Year </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.year}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"weight\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.weight}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"totalAmount\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> TotalAmount </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.totalAmount}} </td>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumn1\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumn1;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n<!--Customize -->\\r\\n<div class=\\\"mat-elevation-z8\\\" style=\\\"margin-bottom: 10px;margin-left: 20px;margin-right: 20px;margin-top: 50px\\\" *ngIf=\\\"report=='customize'\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"orderDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Date </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.orderDate | date:'MMM d, y'}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"vendorName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Vendor </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.vendorName}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"itemName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Item </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.itemName}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"weight\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.weight}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"totalAmount\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> TotalAmount </th>\\r\\n      <td mat-cell *matCellDef=\\\"let report\\\"> {{report.totalAmount}} </td>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumn2\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumn2;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n<notifier-container></notifier-container>\"","module.exports = \".example-card {\\n  width: 30%;\\n  margin-top: 50px; }\\n\\n.example-full-width {\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 16px; }\\n\\nbutton {\\n  margin-left: 15px; }\\n\\ntable {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd {\\n  width: 25%;\\n  font-family: 'Times New Roman', Times, serif; }\\n\\nth {\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 20px;\\n  width: 25%;\\n  color: #6200EE; }\\n\\n.example-table-container {\\n  position: relative;\\n  overflow: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9yZXBvcnQvc3RhdGljLXJlcG9ydC92ZW5kb3Itd2lzZS1wdXJjaGFzZS1yZXBvcnQvRTpcXFZwX1dTXFxmb3VuZHJ5LWNsaWVudC9zcmNcXGFwcFxcZm91bmRyeVxccmVwb3J0XFxzdGF0aWMtcmVwb3J0XFx2ZW5kb3Itd2lzZS1wdXJjaGFzZS1yZXBvcnRcXHZlbmRvci13aXNlLXB1cmNoYXNlLXJlcG9ydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQVU7RUFDVixnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxrQkFBa0I7RUFDbEIsNENBQTRDO0VBQzVDLGVBQWUsRUFBQTs7QUFFbkI7RUFDQSxpQkFBaUIsRUFBQTs7QUFFakI7RUFDSSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxlQUFlO0VBQ2YsV0FBVyxFQUFBOztBQUdiO0VBQ0UsVUFBVTtFQUNWLDRDQUE0QyxFQUFBOztBQUU5QztFQUNJLDRDQUE0QztFQUM1QyxlQUFlO0VBQ2YsVUFBVTtFQUNWLGNBQWEsRUFBQTs7QUFFakI7RUFDRSxrQkFBa0I7RUFDbEIsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZm91bmRyeS9yZXBvcnQvc3RhdGljLXJlcG9ydC92ZW5kb3Itd2lzZS1wdXJjaGFzZS1yZXBvcnQvdmVuZG9yLXdpc2UtcHVyY2hhc2UtcmVwb3J0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY2FyZHtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG5cclxufVxyXG4uZXhhbXBsZS1mdWxsLXdpZHRoe1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuYnV0dG9ue1xyXG5tYXJnaW4tbGVmdDogMTVweDtcclxufVxyXG50YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcblxyXG4gIC5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcblxyXG4gIHRke1xyXG4gICAgd2lkdGg6IDI1JTtcclxuICAgIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xyXG4gIH1cclxuICB0aHtcclxuICAgICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgd2lkdGg6IDI1JTtcclxuICAgICAgY29sb3I6IzYyMDBFRTtcclxuICB9XHJcbiAgLmV4YW1wbGUtdGFibGUtY29udGFpbmVyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gIH1cclxuIl19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { VendorService } from 'src/app/foundry/vendor/vendor.service';\r\nimport { Vendor } from 'src/app/foundry/vendor/vendor';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { PurchaseReport } from '../purchase-report/purchase-report';\r\nimport { StaticReport } from '../static-report';\r\nimport { StaticReportService } from '../static-report.service';\r\nimport { NotifierService } from 'angular-notifier';\r\n\r\n@Component({\r\n  selector: 'app-vendor-wise-purchase-report',\r\n  templateUrl: './vendor-wise-purchase-report.component.html',\r\n  styleUrls: ['./vendor-wise-purchase-report.component.scss']\r\n})\r\nexport class VendorWisePurchaseReportComponent implements OnInit {\r\n  vendorName;\r\n  reportName;\r\n  public year = [];\r\n  years;\r\n  fromDate;\r\n  toDate;\r\n  dataSource;\r\n  public report;\r\n  public vendorList: Vendor[];\r\n  public purchaseReports = [];\r\n  private notifier: NotifierService;\r\n  public purchaseReport: PurchaseReport;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(public vendorService: VendorService, public staticReportService: StaticReportService, notifierService: NotifierService) {\r\n    this.notifier = notifierService;\r\n  }\r\n\r\n  displayedColumns: String[] = [ 'vendorName','itemName', 'year', 'weight', 'totalAmount'];\r\n  displayedColumn1: String[] = ['monthly','vendorName', 'itemName', 'year', 'weight', 'totalAmount'];\r\n  displayedColumn2: String[] = ['orderDate','vendorName', 'itemName', 'weight', 'totalAmount'];\r\n\r\n  ngOnInit() {\r\n    this.getAllVendor();\r\n    this.purchaseReport = new PurchaseReport();\r\n    this.getAllYears();\r\n    this.getAllPurchaseList();\r\n  }\r\n\r\n  getAllVendor() {\r\n    this.vendorService.getAllVendors().subscribe((data) => {\r\n      this.vendorList = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n  searchVendorWisePurchase() {\r\n    this.purchaseReport.vendorName = this.vendorName;\r\n    this.purchaseReport.reportType = this.reportName;\r\n    this.purchaseReport.year = this.years;\r\n    this.purchaseReport.fromDate = this.fromDate;\r\n    this.purchaseReport.toDate = this.toDate;\r\n    this.staticReportService.searchVendorWisePurchase(this.purchaseReport).subscribe((data) => {\r\n      this.purchaseReports = data;\r\n      if (this.reportName === 'YEARLY') {\r\n        this.report = 'yearly';\r\n      } else if (this.reportName === 'MONTHLY') {\r\n        this.report = 'monthly';\r\n      } else if (this.reportName === 'CUSTOMIZE') {\r\n        this.report = 'customize';\r\n      }\r\n      if (this.purchaseReports.length == 0) {\r\n        this.notifier.notify('warning', 'No data Available!');\r\n      }\r\n      this.dataSource = new MatTableDataSource(this.purchaseReports);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getAllPurchaseList() {\r\n    this.staticReportService.getAllPurchaseList().subscribe((data) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getAllYears() {\r\n    this.staticReportService.getAllYears().subscribe((data) => {\r\n      this.year = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}
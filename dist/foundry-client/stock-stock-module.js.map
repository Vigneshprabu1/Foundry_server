{"version":3,"sources":["webpack:///./src/app/foundry/stock/delivered/delivered.component.html","webpack:///./src/app/foundry/stock/delivered/delivered.component.scss","webpack:///./src/app/foundry/stock/delivered/delivered.component.ts","webpack:///./src/app/foundry/stock/mc-consumable-stock/mc-consumable-stock.component.html","webpack:///./src/app/foundry/stock/mc-consumable-stock/mc-consumable-stock.component.scss","webpack:///./src/app/foundry/stock/mc-consumable-stock/mc-consumable-stock.component.ts","webpack:///./src/app/foundry/stock/mc-consumable-stock/mc-consumable-stock.ts","webpack:///./src/app/foundry/stock/mc-consumable-temp-stock/mc-consumable-temp-stock.component.html","webpack:///./src/app/foundry/stock/mc-consumable-temp-stock/mc-consumable-temp-stock.component.scss","webpack:///./src/app/foundry/stock/mc-consumable-temp-stock/mc-consumable-temp-stock.component.ts","webpack:///./src/app/foundry/stock/mc-parts-stock/mc-parts-stock.component.html","webpack:///./src/app/foundry/stock/mc-parts-stock/mc-parts-stock.component.scss","webpack:///./src/app/foundry/stock/mc-parts-stock/mc-parts-stock.component.ts","webpack:///./src/app/foundry/stock/mc-parts-stock/mc-parts-stock.ts","webpack:///./src/app/foundry/stock/mc-parts-temp-stock/mc-parts-temp-stock.component.html","webpack:///./src/app/foundry/stock/mc-parts-temp-stock/mc-parts-temp-stock.component.scss","webpack:///./src/app/foundry/stock/mc-parts-temp-stock/mc-parts-temp-stock.component.ts","webpack:///./src/app/foundry/stock/sand-disposal/sand-dispatching/sand-dispatching.component.html","webpack:///./src/app/foundry/stock/sand-disposal/sand-dispatching/sand-dispatching.component.scss","webpack:///./src/app/foundry/stock/sand-disposal/sand-dispatching/sand-dispatching.component.ts","webpack:///./src/app/foundry/stock/sand-disposal/sand-dispatching/sand-dispatching.ts","webpack:///./src/app/foundry/stock/sand-disposal/sand-disposal-stock.ts","webpack:///./src/app/foundry/stock/sand-disposal/sand-disposal.component.html","webpack:///./src/app/foundry/stock/sand-disposal/sand-disposal.component.scss","webpack:///./src/app/foundry/stock/sand-disposal/sand-disposal.component.ts","webpack:///./src/app/foundry/stock/stock-routing.module.ts","webpack:///./src/app/foundry/stock/stock.component.html","webpack:///./src/app/foundry/stock/stock.component.scss","webpack:///./src/app/foundry/stock/stock.component.ts","webpack:///./src/app/foundry/stock/stock.module.ts","webpack:///./src/app/foundry/stock/stock.ts","webpack:///./src/app/foundry/stock/temp-stock/temp-stock.component.html","webpack:///./src/app/foundry/stock/temp-stock/temp-stock.component.scss","webpack:///./src/app/foundry/stock/temp-stock/temp-stock.component.ts"],"names":[],"mappings":"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","file":"stock-stock-module.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1 mat-dialog-title> Confirmation</h1>\\r\\n  <div mat-dialog-content>\\r\\n    <form class=\\\"example-form\\\" #exampleForm=\\\"ngForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Delivered Date\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"picker1\\\" name=\\\"lastOrder\\\"\\r\\n              [(ngModel)]=\\\"lastOrder\\\" required readonly>\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker1 ></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <label>Delivered Time:</label>\\r\\n          <kendo-timepicker placeholder=\\\"Delivered Time\\\" name=\\\"deliveryTime\\\" [(ngModel)]=\\\"value\\\" #dateModel=\\\"ngModel\\\"required></kendo-timepicker>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div mat-dialog-actions align=\\\"end\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!exampleForm.valid\\\" (click)=\\\"confirmation()\\\">Confirm</button>\\r\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"cancel()\\\">Close</button>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvc3RvY2svZGVsaXZlcmVkL2RlbGl2ZXJlZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Stock } from '../stock';\r\n\r\n@Component({\r\n  selector: 'app-delivered',\r\n  templateUrl: './delivered.component.html',\r\n  styleUrls: ['./delivered.component.scss']\r\n})\r\nexport class DeliveredComponent implements OnInit {\r\n  public lastOrder: String;\r\n  public deliveredTime: Date;\r\n  constructor(public matDialogRef: MatDialogRef<DeliveredComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n  public stock = [];\r\n  public value: Date = new Date();\r\n  maxDate = new Date();\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  confirmation() {\r\n    this.stock.push(this.lastOrder);\r\n    this.stock.push(this.value);\r\n    this.matDialogRef.close(this.stock);\r\n  }\r\n\r\n  cancel() {\r\n    this.matDialogRef.close();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <mat-card class=\\\"example-card\\\">\\r\\n      <mat-card-header>\\r\\n        <mat-card-title>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>Machinary Consumable Available Stock</mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n        </mat-card-title>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content>\\r\\n        <div class=\\\"example-table-container mat-elevation-z8\\\">\\r\\n          <table mat-table #sortCol2=\\\"matSort\\\" [dataSource]=\\\"dataSource2\\\" matSort>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"itemName\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>ItemName </th>\\r\\n              <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.itemName}}</td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"itemType\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>ItemType </th>\\r\\n              <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.itemType}}</td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"weight\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\\r\\n              <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.weight}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"unit\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Unit </th>\\r\\n              <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.unit}} </td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"minWeightReq\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> MinWeightReq </th>\\r\\n              <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.minWeightReq}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"minOrderWeight\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> MinOrderWeight </th>\\r\\n              <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.minOrderWeight}} </td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"maxOrderWeight\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> MaxOrderWeight </th>\\r\\n              <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.maxOrderWeight}}</td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"lastOrder\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> LastOrder </th>\\r\\n              <td mat-cell *matCellDef=\\\"let stock;let i=index\\\">{{stock.lastOrder | date:'d MMM'}} </td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"actions\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Reorder </th>\\r\\n              <mat-cell *matCellDef=\\\"let stock;let i=index\\\">\\r\\n                <button mat-icon-button color=\\\"accent\\\" matTooltip=\\\"Reorder\\\" (click)=\\\"reOrder(i,stock.purchaseId)\\\">\\r\\n                  <mat-icon>reorder</mat-icon>\\r\\n                </button>\\r\\n              </mat-cell>\\r\\n            </ng-container>\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\">\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n    </div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.example-table-container {\\n  position: relative;\\n  overflow: auto; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -20px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\n.example-card {\\n  width: 100%;\\n  height: 100%;\\n  margin-top: 50px; }\\n\\n.example-card2 {\\n  width: 100%;\\n  height: 100%; }\\n\\nth {\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9zdG9jay9tYy1jb25zdW1hYmxlLXN0b2NrL0U6XFxWcF9XU1xcZm91bmRyeS1jbGllbnQvc3JjXFxhcHBcXGZvdW5kcnlcXHN0b2NrXFxtYy1jb25zdW1hYmxlLXN0b2NrXFxtYy1jb25zdW1hYmxlLXN0b2NrLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVyxFQUFBOztBQUViO0VBQ0Usa0JBQWtCO0VBQ2xCLGNBQWMsRUFBQTs7QUFFaEI7RUFDRSxnQ0FBZ0M7RUFDaEMsNEJBQTRCO0VBQzVCLDZCQUE2QjtFQUM3Qix5QkFBeUI7RUFDekIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFlBQVk7RUFDWiwwQkFBMEIsRUFBQTs7QUFFNUI7RUFDRSxXQUFVO0VBQ1YsWUFBWTtFQUNaLGdCQUFnQixFQUFBOztBQUVsQjtFQUNFLFdBQVU7RUFDVixZQUFZLEVBQUE7O0FBRWQ7RUFDRSxrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvc3RvY2svbWMtY29uc3VtYWJsZS1zdG9jay9tYy1jb25zdW1hYmxlLXN0b2NrLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIC5leGFtcGxlLXRhYmxlLWNvbnRhaW5lciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuICB9XHJcbiAgLmV4YW1wbGUtY2FyZDF7XHJcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMTBweDtcclxuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDEwcHg7XHJcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNzMzNzg7XHJcbiAgICBwYWRkaW5nLXRvcDogMXB4O1xyXG4gICAgbWFyZ2luLXRvcDogLTQwcHg7XHJcbiAgICBtYXJnaW4tbGVmdDogLTIwcHg7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBoZWlnaHQ6IDM1cHg7XHJcbiAgICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICB9XHJcbiAgLmV4YW1wbGUtY2FyZHtcclxuICAgIHdpZHRoOjEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gIH1cclxuICAuZXhhbXBsZS1jYXJkMntcclxuICAgIHdpZHRoOjEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG4gIHRoe1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuIl19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource, MatSort, MatPaginator, MatDialog } from '@angular/material';\r\nimport { Router} from '@angular/router';\r\nimport { StockService } from '../stock.service';\r\nimport { McConsumableStock } from './mc-consumable-stock';\r\n\r\n\r\n@Component({\r\n  selector: 'app-mc-consumable-stock',\r\n  templateUrl: './mc-consumable-stock.component.html',\r\n  styleUrls: ['./mc-consumable-stock.component.scss']\r\n})\r\nexport class McConsumableStockComponent implements OnInit {\r\n\r\n  dataSource2;\r\n  public type;\r\n\r\n  public mcConsumableStock: McConsumableStock;\r\n  @ViewChild(MatPaginator) paginator2: MatPaginator;\r\n  @ViewChild(MatSort) sort2: MatSort;\r\n  displayedColumns2: String[] = ['itemName', 'itemType', 'weight', 'unit',\r\n  'minWeightReq', 'minOrderWeight', 'maxOrderWeight', 'lastOrder', 'actions'];\r\n\r\n  constructor(public stockService: StockService, public router: Router,\r\n    public matDialog: MatDialog) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\r\n      return false;\r\n    };\r\n  }\r\n  ngOnInit() {\r\n    this.getMcConsumableStockList();\r\n    this.mcConsumableStock=new McConsumableStock();\r\n  }\r\n\r\n  getMcConsumableStockList() {\r\n    this.stockService.getMcConsumableStockList().subscribe((data) => {\r\n      this.dataSource2 = new MatTableDataSource(data);\r\n      this.dataSource2.paginator = this.paginator2;\r\n      this.dataSource2.sort = this.sort2;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  reOrder(i: number, purchaseId: String) {\r\n    this.type = 'reOrder';\r\n    this.router.navigate(['/foundry/purchase/' + purchaseId + '/' + this.type], { skipLocationChange: true });\r\n  }\r\n}\r\n","export class McConsumableStock {\r\n    _id: String;\r\n    itemName: String;\r\n    itemType: String;\r\n    weight: number;\r\n    unit: String;\r\n    perKG: number;\r\n    totalAmount: number;\r\n    averageWeight: number;\r\n    minWeightReq: number;\r\n    minOrderWeight: number;\r\n    maxOrderWeight: number;\r\n    lastOrder: String;\r\n    deliveredTime: String;\r\n    purchaseId: String;\r\n}\r\n","module.exports = \"<!-- Pending Stock List -->\\r\\n<div class=\\\"container\\\">\\r\\n    <mat-card class=\\\"example-card\\\">\\r\\n      <mat-card-header>\\r\\n        <mat-card-title>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>Machinary Consumable Pending Stock</mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n        </mat-card-title>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content>\\r\\n        <div class=\\\"example-table-container mat-elevation-z8\\\">\\r\\n          <table mat-table #sortCol1=\\\"matSort\\\" [dataSource]=\\\"dataSource1\\\" matSort>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"itemName\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>ItemName </th>\\r\\n              <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.itemName}}</td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"weight\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\\r\\n              <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.weight}} </td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"unit\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Unit </th>\\r\\n              <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.unit}} </td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"vendorName\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> VendorName </th>\\r\\n              <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.vendorName}} </td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"invoiceNo\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> InvoiceNo </th>\\r\\n              <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.invoiceNo}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"deliveryTime\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> DeliveryTime </th>\\r\\n              <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.deliveryTime | date:'h:mm a'}}</td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"orderDate\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> OrderDate </th>\\r\\n              <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.orderDate| date:'d MMM'}} </td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"deliveryDate\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> DeliveryDate </th>\\r\\n              <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.deliveryDate | date:'d MMM'}} </td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"actions\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Delivered </th>\\r\\n              <mat-cell *matCellDef=\\\"let tempStock;let i=index\\\">\\r\\n                <button mat-icon-button color=\\\"accent\\\" matTooltip=\\\"Delivered\\\"\\r\\n                  (click)=\\\"updateStock(i,tempStock._id,tempStock.itemName,tempStock.itemType,tempStock.weight,tempStock.purchaseId,tempStock.unit,tempStock.totalAmount,tempStock.minWeightReq)\\\">\\r\\n                  <mat-icon>done_all</mat-icon>\\r\\n                </button>\\r\\n              </mat-cell>\\r\\n            </ng-container>\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns1\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns1;\\\">\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5,10, 25, 100]\\\"></mat-paginator>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\"","module.exports = \"table {\\n  width: 100%;\\n  font-family: 'Lora', serif; }\\n\\n.example-table-container {\\n  position: relative;\\n  overflow: auto; }\\n\\n.example-card {\\n  margin-top: 50px;\\n  width: 100%;\\n  height: 100%; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -20px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9zdG9jay9tYy1jb25zdW1hYmxlLXRlbXAtc3RvY2svRTpcXFZwX1dTXFxmb3VuZHJ5LWNsaWVudC9zcmNcXGFwcFxcZm91bmRyeVxcc3RvY2tcXG1jLWNvbnN1bWFibGUtdGVtcC1zdG9ja1xcbWMtY29uc3VtYWJsZS10ZW1wLXN0b2NrLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVztFQUNYLDBCQUEwQixFQUFBOztBQUU1QjtFQUNFLGtCQUFrQjtFQUNsQixjQUFjLEVBQUE7O0FBRWhCO0VBQ0UsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCxZQUFZLEVBQUE7O0FBRWhCO0VBQ0UsZ0NBQWdDO0VBQ2hDLDRCQUE0QjtFQUM1Qiw2QkFBNkI7RUFDN0IseUJBQXlCO0VBQ3pCLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixZQUFZO0VBQ1osMEJBQTBCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9mb3VuZHJ5L3N0b2NrL21jLWNvbnN1bWFibGUtdGVtcC1zdG9jay9tYy1jb25zdW1hYmxlLXRlbXAtc3RvY2suY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gIH1cclxuICAuZXhhbXBsZS10YWJsZS1jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgfVxyXG4gIC5leGFtcGxlLWNhcmR7XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG4uZXhhbXBsZS1jYXJkMXtcclxuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMTBweDtcclxuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxMHB4O1xyXG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmNzMzNzg7XHJcbiAgcGFkZGluZy10b3A6IDFweDtcclxuICBtYXJnaW4tdG9wOiAtNDBweDtcclxuICBtYXJnaW4tbGVmdDogLTIwcHg7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGhlaWdodDogMzVweDtcclxuICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxufVxyXG4iXX0= */\"","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { McConsumableStock } from '../mc-consumable-stock/mc-consumable-stock';\r\nimport { StockService } from '../stock.service';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialog } from '@angular/material';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Http } from '@angular/http';\r\nimport { DeliveredComponent } from '../delivered/delivered.component';\r\nimport { McConsumableStockComponent } from '../mc-consumable-stock/mc-consumable-stock.component';\r\n\r\n@Component({\r\n  selector: 'app-mc-consumable-temp-stock',\r\n  templateUrl: './mc-consumable-temp-stock.component.html',\r\n  styleUrls: ['./mc-consumable-temp-stock.component.scss'],\r\n  providers: [DatePipe]\r\n})\r\nexport class McConsumableTempStockComponent implements OnInit {\r\n\r\n  dataSource1;\r\n  public mcConsumableStock: McConsumableStock;\r\n  constructor(public stockService: StockService, public matDialog: MatDialog, public datepipe: DatePipe, private http: Http,\r\n    \r\n   ) { }\r\n  @ViewChild(MatPaginator) paginator1: MatPaginator;\r\n  @ViewChild(MatSort) sort1: MatSort;\r\n  displayedColumns1: String[] = ['itemName', 'weight', 'unit',\r\n    'vendorName', 'invoiceNo', 'orderDate', 'deliveryDate', 'deliveryTime', 'actions'];\r\n\r\n    ngOnInit() {\r\n      this.getMcConsumableTempStockList();\r\n      this.mcConsumableStock = new McConsumableStock();\r\n    }\r\n\r\n  getMcConsumableTempStockList() {\r\n    this.stockService.getMcConsumableTempStockList().subscribe((data) => {\r\n      this.dataSource1 = new MatTableDataSource(data);\r\n      this.dataSource1.paginator = this.paginator1;\r\n      this.dataSource1.sort = this.sort1;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  updateStock(i: number, _id: String, itemName: String, itemType: String,\r\n    weight: number, purchaseId: String, unit: String, totalAmount: number,minWeightReq:number) {\r\n    \r\n    this.mcConsumableStock.itemName = itemName;\r\n    this.mcConsumableStock.itemType = itemType;\r\n    this.mcConsumableStock.weight = weight;\r\n    this.mcConsumableStock.purchaseId = purchaseId;\r\n    this.mcConsumableStock._id = _id;\r\n    this.mcConsumableStock.unit = unit;\r\n    this.mcConsumableStock.totalAmount = totalAmount;\r\n    this.mcConsumableStock.minWeightReq=minWeightReq;\r\n    const matDialogRef = this.matDialog.open(DeliveredComponent, {\r\n    });\r\n    matDialogRef.afterClosed().subscribe(result => {\r\n      for (let i = 0; i < result.length; i++) {\r\n        this.mcConsumableStock.lastOrder = result[0];\r\n        this.mcConsumableStock.deliveredTime = result[1];\r\n      }\r\n      this.stockService.updateMCConsumableStock(this.mcConsumableStock).subscribe((data) => {\r\n        this.dataSource1 = new MatTableDataSource(data);\r\n        this.getMcConsumableTempStockList();\r\n        //this.mcConsumableStockComponent.getMcConsumableStockList();\r\n      }, (err) => {\r\n        console.log(err);\r\n      });\r\n      this.getMcConsumableTempStockList();\r\n      //this.mcConsumableStockComponent.getMcConsumableStockList();\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <mat-card class=\\\"example-card\\\">\\r\\n      <mat-card-header>\\r\\n        <mat-card-title>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>Machinary Parts Available Stock</mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n        </mat-card-title>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content>\\r\\n        <div class=\\\"example-table-container mat-elevation-z8\\\">\\r\\n          <table mat-table #sortCol2=\\\"matSort\\\" [dataSource]=\\\"dataSource2\\\" matSort>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"itemName\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>ItemName </th>\\r\\n              <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.itemName}}</td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"itemType\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>ItemType </th>\\r\\n              <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.itemType}}</td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"weight\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\\r\\n              <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.weight}} </td>\\r\\n            </ng-container>\\r\\n            \\r\\n            <ng-container matColumnDef=\\\"unit\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Unit </th>\\r\\n              <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.unit}} </td>\\r\\n            </ng-container>\\r\\n               \\r\\n            <ng-container matColumnDef=\\\"minWeightReq\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> MinWeightReq </th>\\r\\n              <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.minWeightReq}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"minOrderWeight\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> MinOrderWeight </th>\\r\\n              <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.minOrderWeight}} </td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"maxOrderWeight\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> MaxOrderWeight </th>\\r\\n              <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.maxOrderWeight}}</td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"lastOrder\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> LastOrder </th>\\r\\n              <td mat-cell *matCellDef=\\\"let stock;let i=index\\\">{{stock.lastOrder | date:'d MMM'}} </td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"actions\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Reorder </th>\\r\\n              <mat-cell *matCellDef=\\\"let stock;let i=index\\\">\\r\\n                <button mat-icon-button color=\\\"accent\\\" matTooltip=\\\"Reorder\\\" (click)=\\\"reOrder(i,stock.purchaseId)\\\">\\r\\n                  <mat-icon>reorder</mat-icon>\\r\\n                </button>\\r\\n              </mat-cell>\\r\\n            </ng-container>\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\">\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n    </div>\\r\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.example-table-container {\\n  position: relative;\\n  overflow: auto; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -20px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\n.example-card {\\n  width: 100%;\\n  height: 100%;\\n  margin-top: 50px; }\\n\\n.example-card2 {\\n  width: 100%;\\n  height: 100%; }\\n\\nth {\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9zdG9jay9tYy1wYXJ0cy1zdG9jay9FOlxcVnBfV1NcXGZvdW5kcnktY2xpZW50L3NyY1xcYXBwXFxmb3VuZHJ5XFxzdG9ja1xcbWMtcGFydHMtc3RvY2tcXG1jLXBhcnRzLXN0b2NrLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVyxFQUFBOztBQUViO0VBQ0Usa0JBQWtCO0VBQ2xCLGNBQWMsRUFBQTs7QUFFaEI7RUFDRSxnQ0FBZ0M7RUFDaEMsNEJBQTRCO0VBQzVCLDZCQUE2QjtFQUM3Qix5QkFBeUI7RUFDekIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFlBQVk7RUFDWiwwQkFBMEIsRUFBQTs7QUFFNUI7RUFDRSxXQUFVO0VBQ1YsWUFBWTtFQUNaLGdCQUFnQixFQUFBOztBQUVsQjtFQUNFLFdBQVU7RUFDVixZQUFZLEVBQUE7O0FBRWQ7RUFDRSxrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvc3RvY2svbWMtcGFydHMtc3RvY2svbWMtcGFydHMtc3RvY2suY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgLmV4YW1wbGUtdGFibGUtY29udGFpbmVyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gIH1cclxuICAuZXhhbXBsZS1jYXJkMXtcclxuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAxMHB4O1xyXG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMTBweDtcclxuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y3MzM3ODtcclxuICAgIHBhZGRpbmctdG9wOiAxcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAtNDBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAtMjBweDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGhlaWdodDogMzVweDtcclxuICAgIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gIH1cclxuICAuZXhhbXBsZS1jYXJke1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgfVxyXG4gIC5leGFtcGxlLWNhcmQye1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcbiAgdGh7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource, MatSort, MatPaginator, MatDialog } from '@angular/material';\r\nimport { Router} from '@angular/router';\r\nimport { StockService } from '../stock.service';\r\nimport { McPartsStock } from './mc-parts-stock';\r\n\r\n\r\n@Component({\r\n  selector: 'app-mc-parts-stock',\r\n  templateUrl: './mc-parts-stock.component.html',\r\n  styleUrls: ['./mc-parts-stock.component.scss']\r\n})\r\nexport class McPartsStockComponent implements OnInit {\r\n  dataSource2;\r\n  public type;\r\n\r\n  public mcPartsStock: McPartsStock;\r\n  @ViewChild(MatPaginator) paginator2: MatPaginator;\r\n  @ViewChild(MatSort) sort2: MatSort;\r\n  displayedColumns2: String[] = ['itemName', 'itemType', 'weight','unit', \r\n  'minWeightReq', 'minOrderWeight', 'maxOrderWeight', 'lastOrder', 'actions'];\r\n\r\n  constructor(public stockService: StockService, public router: Router,\r\n    public matDialog: MatDialog) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\r\n      return false;\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getMcPartsStockList();\r\n    this.mcPartsStock=new McPartsStock();\r\n  }\r\n\r\n  getMcPartsStockList() {\r\n    this.stockService.getMcPartsStockList().subscribe((data) => {\r\n      console.log('iiii',data)\r\n      this.dataSource2 = new MatTableDataSource(data);\r\n      this.dataSource2.paginator = this.paginator2;\r\n      this.dataSource2.sort = this.sort2;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n  reOrder(i: number, purchaseId: String) {\r\n    this.type = 'reOrder';\r\n    this.router.navigate(['/foundry/purchase/' + purchaseId + '/' + this.type], { skipLocationChange: true });\r\n  }\r\n}\r\n","export class McPartsStock {\r\n    _id: String;\r\n    itemName: String;\r\n    itemType: String;\r\n    weight: number;\r\n    unit: String;\r\n    perKG: number;\r\n    totalAmount: number;\r\n    averageWeight: number;\r\n    minWeightReq: number;\r\n    minOrderWeight: number;\r\n    maxOrderWeight: number;\r\n    lastOrder: String;\r\n    deliveredTime: String;\r\n    purchaseId: String;\r\n}\r\n","module.exports = \"<!-- Pending Stock List -->\\r\\n<div class=\\\"container\\\">\\r\\n    <mat-card class=\\\"example-card\\\">\\r\\n      <mat-card-header>\\r\\n        <mat-card-title>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>Machinary Parts Pending Stock</mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n        </mat-card-title>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content>\\r\\n        <div class=\\\"example-table-container mat-elevation-z8\\\">\\r\\n          <table mat-table #sortCol1=\\\"matSort\\\" [dataSource]=\\\"dataSource1\\\" matSort>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"itemName\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>ItemName </th>\\r\\n              <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.itemName}}</td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"weight\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\\r\\n              <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.weight}} </td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"unit\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Unit </th>\\r\\n              <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.unit}} </td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"vendorName\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> VendorName </th>\\r\\n              <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.vendorName}} </td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"invoiceNo\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> InvoiceNo </th>\\r\\n              <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.invoiceNo}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"deliveryTime\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> DeliveryTime </th>\\r\\n              <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.deliveryTime | date:'h:mm a'}}</td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"orderDate\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> OrderDate </th>\\r\\n              <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.orderDate| date:'d MMM'}} </td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"deliveryDate\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> DeliveryDate </th>\\r\\n              <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.deliveryDate | date:'d MMM'}} </td>\\r\\n            </ng-container>\\r\\n  \\r\\n            <ng-container matColumnDef=\\\"actions\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Delivered </th>\\r\\n              <mat-cell *matCellDef=\\\"let tempStock;let i=index\\\">\\r\\n                <button mat-icon-button color=\\\"accent\\\" matTooltip=\\\"Delivered\\\"\\r\\n                  (click)=\\\"updateStock(i,tempStock._id,tempStock.itemName,tempStock.itemType,tempStock.weight,tempStock.purchaseId,tempStock.unit,tempStock.totalAmount,tempStock.minWeightReq)\\\">\\r\\n                  <mat-icon>done_all</mat-icon>\\r\\n                </button>\\r\\n              </mat-cell>\\r\\n            </ng-container>\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns1\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns1;\\\">\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5,10, 25, 100]\\\"></mat-paginator>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\"","module.exports = \"table {\\n  width: 100%;\\n  font-family: 'Lora', serif; }\\n\\n.example-table-container {\\n  position: relative;\\n  overflow: auto; }\\n\\n.example-card {\\n  margin-top: 50px;\\n  width: 100%;\\n  height: 100%; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -20px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9zdG9jay9tYy1wYXJ0cy10ZW1wLXN0b2NrL0U6XFxWcF9XU1xcZm91bmRyeS1jbGllbnQvc3JjXFxhcHBcXGZvdW5kcnlcXHN0b2NrXFxtYy1wYXJ0cy10ZW1wLXN0b2NrXFxtYy1wYXJ0cy10ZW1wLXN0b2NrLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVztFQUNYLDBCQUEwQixFQUFBOztBQUU1QjtFQUNFLGtCQUFrQjtFQUNsQixjQUFjLEVBQUE7O0FBRWhCO0VBQ0UsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCxZQUFZLEVBQUE7O0FBRWhCO0VBQ0UsZ0NBQWdDO0VBQ2hDLDRCQUE0QjtFQUM1Qiw2QkFBNkI7RUFDN0IseUJBQXlCO0VBQ3pCLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixZQUFZO0VBQ1osMEJBQTBCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9mb3VuZHJ5L3N0b2NrL21jLXBhcnRzLXRlbXAtc3RvY2svbWMtcGFydHMtdGVtcC1zdG9jay5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgfVxyXG4gIC5leGFtcGxlLXRhYmxlLWNvbnRhaW5lciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuICB9XHJcbiAgLmV4YW1wbGUtY2FyZHtcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcbi5leGFtcGxlLWNhcmQxe1xyXG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAxMHB4O1xyXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDEwcHg7XHJcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDEwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3MzM3ODtcclxuICBwYWRkaW5nLXRvcDogMXB4O1xyXG4gIG1hcmdpbi10b3A6IC00MHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAtMjBweDtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgaGVpZ2h0OiAzNXB4O1xyXG4gIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { McConsumableStock } from '../mc-consumable-stock/mc-consumable-stock';\r\nimport { StockService } from '../stock.service';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialog } from '@angular/material';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Http } from '@angular/http';\r\nimport { McPartsStock } from '../mc-parts-stock/mc-parts-stock';\r\nimport { DeliveredComponent } from '../delivered/delivered.component';\r\nimport { McPartsStockComponent } from '../mc-parts-stock/mc-parts-stock.component';\r\nimport { StockComponent } from '../../dashboard/stock/stock.component';\r\n\r\n@Component({\r\n  selector: 'app-mc-parts-temp-stock',\r\n  templateUrl: './mc-parts-temp-stock.component.html',\r\n  styleUrls: ['./mc-parts-temp-stock.component.scss'],\r\n  providers: [DatePipe]\r\n})\r\nexport class McPartsTempStockComponent implements OnInit {\r\n  dataSource1;\r\n  public mcPartsStock: McPartsStock;\r\n  constructor(public stockService: StockService, public matDialog: MatDialog, public datepipe: DatePipe,\r\n     private http: Http\r\n   ) { }\r\n  @ViewChild(MatPaginator) paginator1: MatPaginator;\r\n  @ViewChild(MatSort) sort1: MatSort;\r\n  displayedColumns1: String[] = ['itemName', 'weight', 'unit',\r\n    'vendorName', 'invoiceNo', 'orderDate', 'deliveryDate', 'deliveryTime', 'actions'];\r\n\r\n    ngOnInit() {\r\n      this.getMcPartsTempStockList();\r\n      this.mcPartsStock = new McPartsStock();\r\n    }\r\n\r\n    getMcPartsTempStockList() {\r\n    this.stockService.getMcPartsTempStockList().subscribe((data) => {\r\n      this.dataSource1 = new MatTableDataSource(data);\r\n      this.dataSource1.paginator = this.paginator1;\r\n      this.dataSource1.sort = this.sort1;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n  updateStock(i: number, _id: String, itemName: String, itemType: String,\r\n    weight: number, purchaseId: String, unit: String, totalAmount: number,minWeightReq:number) {\r\n    this.mcPartsStock.itemName = itemName;\r\n    this.mcPartsStock.itemType = itemType;\r\n    this.mcPartsStock.weight = weight;\r\n    this.mcPartsStock.purchaseId = purchaseId;\r\n    this.mcPartsStock._id = _id;\r\n    this.mcPartsStock.unit = unit;\r\n    this.mcPartsStock.totalAmount = totalAmount;\r\n    this.mcPartsStock.minWeightReq=minWeightReq;\r\n    const matDialogRef = this.matDialog.open(DeliveredComponent, {\r\n    });\r\n    matDialogRef.afterClosed().subscribe(result => {\r\n\r\n      for (let i = 0; i < result.length; i++) {\r\n        this.mcPartsStock.lastOrder = result[0];\r\n        this.mcPartsStock.deliveredTime = result[1];\r\n      }\r\n      this.stockService.updateMcPartsStock(this.mcPartsStock).subscribe((data) => {\r\n        this.dataSource1 = new MatTableDataSource(data);\r\n        this.getMcPartsTempStockList();\r\n        //this.mcPartsStockComponent.getMcPartsStockList();\r\n      }, (err) => {\r\n        console.log(err);\r\n      });\r\n      this.getMcPartsTempStockList();\r\n     // this.mcPartsStockComponent.getMcPartsStockList();\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<form class=\\\"example-form\\\" #exampleForm=\\\"ngForm\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div *ngIf=\\\"edit == false\\\" class=\\\"col-sm-3\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"DisposalNo\\\" name=\\\"disposalNo\\\" [(ngModel)]=\\\"dispatching.disposalInvoiceNo\\\"\\r\\n          readonly>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"edit == true\\\" class=\\\"col-sm-2\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <mat-select placeholder=\\\"disposalNo\\\" name=\\\"disposalNo\\\" [(ngModel)]=\\\"disposalNo\\\">\\r\\n          <mat-option *ngFor=\\\"let disposal of disposals\\\" [value]=\\\"disposal\\\">\\r\\n            {{disposal}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"edit == true\\\" class=\\\"col-sm-1\\\">\\r\\n      <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"getSandDispatchingByDisposalNo()\\\">\\r\\n        <mat-icon>search</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <mat-select placeholder=\\\"VenName\\\" name=\\\"vendorName\\\" [(ngModel)]=\\\"dispatching.vendorName\\\">\\r\\n          <mat-option *ngFor=\\\"let vendor of vendors\\\" [value]=\\\"vendor.vendorName\\\">\\r\\n            {{vendor.vendorName}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"InvoiceNo\\\" name=\\\"invoiceNo\\\" [(ngModel)]=\\\"dispatching.invoiceNo\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput #input [matDatepicker]=\\\"picker1\\\" placeholder=\\\"InvoiceDate\\\" [(ngModel)]=\\\"dispatching.invoiceDate\\\"\\r\\n          name=\\\"invoiceDate\\\">\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #picker1></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <h5>WSDate</h5>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <h5>WSNo</h5>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <h5>ItemName</h5>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1\\\">\\r\\n      <h5>TotWt</h5>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1\\\">\\r\\n      <h5>Dis.Wt</h5>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1\\\">\\r\\n      <h5>Unit</h5>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1\\\">\\r\\n      <h5>IndCost</h5>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div *ngFor=\\\"let options of Option; let in=index;\\\" class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"itemNamelength[in]!==itemNamelength1[in]\\\" style=\\\"margin-top: 20px;\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput #input [matDatepicker]=\\\"picker2\\\" placeholder=\\\"WSDate\\\" [(ngModel)]=\\\"Option[in].waySlipDate\\\" name=\\\"waySlipDate\\\"\\r\\n          required>\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #picker2></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"itemNamelength[in]!==itemNamelength1[in]\\\" style=\\\"margin-top: 20px;\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput placeholder=\\\"WaySlipNo\\\" aria-label=\\\"waySlipNo\\\" [(ngModel)]=\\\"Option[in].waySlipNumber\\\" name=\\\"waySlipNo\\\"\\r\\n          required>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"itemNamelength[in]!==itemNamelength1[in]\\\" style=\\\"margin-top: 20px;\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <mat-select placeholder=\\\"ItemName\\\" name=\\\"itemName\\\" [(ngModel)]=\\\"Option[in].itemName\\\" (ngModelChange)=\\\"getTotalWeight(in,Option[in].itemName)\\\"\\r\\n          required>\\r\\n          <mat-option *ngFor=\\\"let sandDisposal of sandDisposals\\\" [value]=\\\"sandDisposal.itemName\\\">\\r\\n            {{sandDisposal.itemName}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1\\\" *ngIf=\\\"itemNamelength[in]!==itemNamelength1[in]\\\" style=\\\"margin-top: 20px\\\">\\r\\n      <h6>{{Option[in].itemWeight}}</h6>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1\\\" *ngIf=\\\"itemNamelength[in]!==itemNamelength1[in]\\\" style=\\\"margin-top: 20px;\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput placeholder=\\\"Dis.Wt\\\" aria-label=\\\"disposalWeight\\\" [(ngModel)]=\\\"Option[in].disposalWeight\\\" name=\\\"disposedWeight\\\"\\r\\n          required>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1\\\" *ngIf=\\\"itemNamelength[in]!==itemNamelength1[in]\\\" style=\\\"margin-top: 20px;\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <mat-select placeholder=\\\"Unit\\\" name=\\\"unit\\\" [(ngModel)]=\\\"Option[in].unit\\\" name=\\\"option[in].unit\\\" required>\\r\\n          <mat-option *ngFor=\\\"let unit of units\\\" [value]=\\\"unit.unitType\\\">\\r\\n            {{unit.unitType}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1\\\" *ngIf=\\\"itemNamelength[in]!==itemNamelength1[in]\\\" style=\\\"margin-top: 20px;\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput placeholder=\\\"Cost\\\" aria-label=\\\"cost\\\" [(ngModel)]=\\\"Option[in].cost\\\" (ngModelChange)=\\\"addCost()\\\"\\r\\n          name=\\\"cost\\\" required>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"itemNamelength[in]===itemNamelength1[in]\\\" style=\\\"margin-top: 20px;\\\">\\r\\n      <h6>{{Option[in].waySlipDate |date:'M/d/yy'}}</h6>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"itemNamelength[in]===itemNamelength1[in]\\\" style=\\\"margin-top: 20px;\\\">\\r\\n      <h6>{{Option[in].waySlipNumber}}</h6>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"itemNamelength[in]===itemNamelength1[in]\\\" style=\\\"margin-top: 20px;\\\">\\r\\n      <h6>{{Option[in].itemName}}</h6>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1\\\" *ngIf=\\\"itemNamelength[in]===itemNamelength1[in]\\\" style=\\\"margin-top: 20px;\\\">\\r\\n      <h6>{{Option[in].itemWeight}}</h6>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1\\\" *ngIf=\\\"itemNamelength[in]===itemNamelength1[in]\\\" style=\\\"margin-top: 20px;\\\">\\r\\n      <h6>{{Option[in].disposalWeight}}</h6>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1\\\" *ngIf=\\\"itemNamelength[in]===itemNamelength1[in]\\\" style=\\\"margin-top: 20px;\\\">\\r\\n      <h6>{{Option[in].unit}}</h6>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1\\\" *ngIf=\\\"itemNamelength[in]===itemNamelength1[in]\\\" style=\\\"margin-top: 20px;\\\">\\r\\n      <h6>{{Option[in].cost}}</h6>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\" style=\\\"margin-top: 10px;\\\">\\r\\n      <button mat-icon-button (click)=\\\"add(in)\\\">\\r\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n      </button>\\r\\n      <button mat-icon-button (click)=\\\"remove(in)\\\">\\r\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">delete</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n    <!-- <div class=\\\"col-sm-2\\\" style=\\\"margin-top: 20px;\\\">\\r\\n      <h6>{{Option[in].itemName}}</h6>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput placeholder=\\\"TotalCost\\\" aria-label=\\\"totalCost\\\" [(ngModel)]=\\\"Option[in].totalCost\\\"\\r\\n          name=\\\"totalCost\\\" required>\\r\\n      </mat-form-field>\\r\\n    </div> -->\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-3\\\"></div>\\r\\n    <div class=\\\"col-sm-3\\\"></div>\\r\\n    <div class=\\\"col-sm-1\\\"></div>\\r\\n    <div class=\\\"col-sm-2\\\" style=\\\"text-align:right\\\">\\r\\n      <h5>TotalCost:</h5>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1\\\" style=\\\"text-align:left\\\">{{dispatching.totalCost}}</div>\\r\\n    <div class=\\\"col-sm-2\\\"></div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2\\\"></div>\\r\\n    <div class=\\\"col-sm-2\\\"></div>\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <button style=\\\"margin-right: 10px\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"createInvoice()\\\">Create Invoice</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <button style=\\\"margin-right: 10px\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"editInvoice()\\\">Edit Invoice</button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <button style=\\\"margin-right: 10px\\\" mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!exampleForm.valid\\\" (click)=\\\"saveSandDispatching()\\\">Confirm</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<notifier-container></notifier-container>\\r\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%;\\n  text-align: center; }\\n\\ntd {\\n  width: 25%;\\n  text-align: center; }\\n\\nh5 {\\n  text-align: center;\\n  font-size: 20px;\\n  width: 25%;\\n  color: #6200EE; }\\n\\n.example-card {\\n  margin-top: 50px;\\n  width: 500px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9zdG9jay9zYW5kLWRpc3Bvc2FsL3NhbmQtZGlzcGF0Y2hpbmcvRTpcXFZwX1dTXFxmb3VuZHJ5LWNsaWVudC9zcmNcXGFwcFxcZm91bmRyeVxcc3RvY2tcXHNhbmQtZGlzcG9zYWxcXHNhbmQtZGlzcGF0Y2hpbmdcXHNhbmQtZGlzcGF0Y2hpbmcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxlQUFlO0VBQ2YsV0FBVztFQUNYLGtCQUFrQixFQUFBOztBQUdwQjtFQUNFLFVBQVU7RUFDVixrQkFBa0IsRUFBQTs7QUFHcEI7RUFDSSxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLFVBQVU7RUFDVixjQUFhLEVBQUE7O0FBR2pCO0VBQ0UsZ0JBQWdCO0VBQ2hCLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvc3RvY2svc2FuZC1kaXNwb3NhbC9zYW5kLWRpc3BhdGNoaW5nL3NhbmQtZGlzcGF0Y2hpbmcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYXQtZm9ybS1maWVsZCB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxudGR7XHJcbiAgd2lkdGg6IDI1JTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbmg1e1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgd2lkdGg6IDI1JTtcclxuICAgIGNvbG9yOiM2MjAwRUU7XHJcbn1cclxuXHJcbi5leGFtcGxlLWNhcmR7XHJcbiAgbWFyZ2luLXRvcDogNTBweDtcclxuICB3aWR0aDogNTAwcHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { SandDispatching } from '../sand-dispatching/sand-dispatching';\r\nimport { VendorService } from '../../../vendor/vendor.service';\r\nimport { Vendor } from '../../../vendor/vendor';\r\nimport { StockService } from '../../stock.service';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { MasterService } from '../../../master/master.service';\r\nimport { UnitMaster } from '../../../master/unit-master/unit-master';\r\nimport { WaySlipEntry } from './way-slip-entry';\r\nimport { ProductionMonitoringService } from 'src/app/foundry/production-monitoring/production-monitoring.service';\r\nimport { SandDisposalStock } from '../sand-disposal-stock';\r\n\r\n@Component({\r\n  selector: 'app-sand-dispatching',\r\n  templateUrl: './sand-dispatching.component.html',\r\n  styleUrls: ['./sand-dispatching.component.scss']\r\n})\r\nexport class SandDispatchingComponent implements OnInit {\r\n  public vendors: Vendor[];\r\n  public units: UnitMaster[];\r\n  public sandDisposals: SandDisposalStock[];\r\n  public dispatching: SandDispatching;\r\n  public waySlipEntry: WaySlipEntry;\r\n  public waySlipEntry1: WaySlipEntry[];\r\n  private notifier: NotifierService;\r\n  public itemNamelength = [];\r\n  public itemNamelength1 = [];\r\n  public edit: boolean;\r\n  public disposals = [];\r\n  disposalNo;\r\n  public cost: number;\r\n  Option = [\r\n    {\r\n      _id: '',\r\n      waySlipDate: '',\r\n      waySlipNumber: '',\r\n      itemName: '',\r\n      itemWeight: 0,\r\n      disposalWeight: 0,\r\n      unit: '',\r\n      cost: 0\r\n    }\r\n  ];\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SandDispatchingComponent>,\r\n    public masterService: MasterService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public vendorService: VendorService,\r\n    notifier: NotifierService,\r\n    public stockService: StockService,\r\n    public productionMonitoringService: ProductionMonitoringService\r\n  ) {\r\n    this.notifier = notifier;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.edit = false;\r\n    this.getLastSandDispatchDetails();\r\n    this.itemNamelength[0] = 0;\r\n    this.itemNamelength1[0] = 10;\r\n    this.dispatching = new SandDispatching();\r\n    this.getSandDisposalStock();\r\n    this.getVendor();\r\n    this.getUnits();\r\n  }\r\n\r\n  getLastSandDispatchDetails() {\r\n    console.log('test in');\r\n    this.productionMonitoringService.getLastSandDispatchDetails().subscribe( data1 => {\r\n        console.log('test', data1);\r\n        if (data1.length === 0) {\r\n          console.log('test if', data1);\r\n          this.getInvoiceNo();\r\n        } else {\r\n          console.log('test else', data1);\r\n          this.itemNamelength[0] = 10;\r\n          this.itemNamelength1[0] = 10;\r\n          this.dispatching = data1;\r\n          let i = 0;\r\n          data1.forEach(element => {\r\n            this.dispatching = element;\r\n            this.Option[i] = element.waySlipEntry;\r\n            i++;\r\n          });\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n  getSandDisposalStock() {\r\n    this.productionMonitoringService.getSandDisposalStock().subscribe(\r\n      data1 => {\r\n        this.sandDisposals = data1;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  getTotalWeight(i, itemName: string) {\r\n    this.sandDisposals.forEach(element => {\r\n      this.Option[i].itemWeight = Number(element.quantity);\r\n    });\r\n  }\r\n\r\n  getVendor() {\r\n    this.vendorService.getSandDisposalVendor().subscribe(\r\n      data => {\r\n        this.vendors = data;\r\n        console.log('this.vendors', this.vendors);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getUnits() {\r\n    this.masterService.getAllUnitMaster().subscribe(\r\n      data => {\r\n        this.units = data;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getInvoiceNo() {\r\n    this.stockService.getInvoiceNo().subscribe(\r\n      data => {\r\n        console.log(\r\n          ' this.dispatching.disposalInvoiceNo',\r\n          this.dispatching.invoiceNo\r\n        );\r\n        this.dispatching.disposalInvoiceNo = data;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getSandDispatchingByDisposalNo() {\r\n    console.log('disposalNo', this.disposalNo);\r\n    this.stockService.getSandDispatchingByDisposalNo(this.disposalNo).subscribe(\r\n      data => {\r\n        console.log('getInvoiceNo', data);\r\n        let i = 0;\r\n        data.forEach(element => {\r\n          this.dispatching = element;\r\n          this.Option[i] = element.waySlipEntry;\r\n          i++;\r\n        });\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  createInvoice() {\r\n    this.dispatching = new SandDispatching();\r\n    this.Option = [\r\n      {\r\n        _id: '',\r\n        waySlipDate: '',\r\n        waySlipNumber: '',\r\n        itemName: '',\r\n        itemWeight: 0,\r\n        disposalWeight: 0,\r\n        unit: '',\r\n        cost: 0\r\n      }\r\n    ];\r\n    this.itemNamelength[0] = 0;\r\n    this.itemNamelength1[0] = 10;\r\n    this.getInvoiceNo();\r\n  }\r\n\r\n  editInvoice() {\r\n    this.edit = true;\r\n    this.stockService.getAllDisposalNo().subscribe(\r\n      data => {\r\n        console.log('getInvoiceNo edit', data);\r\n        this.disposals = data;\r\n        this.dispatching = new SandDispatching();\r\n        this.Option = [\r\n          {\r\n            _id: '',\r\n            waySlipDate: '',\r\n            waySlipNumber: '',\r\n            itemName: '',\r\n            itemWeight: 0,\r\n            disposalWeight: 0,\r\n            unit: '',\r\n            cost: 0\r\n          }\r\n        ];\r\n        this.itemNamelength[0] = 0;\r\n        this.itemNamelength1[0] = 10;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  saveSandDispatching() {\r\n    this.dispatching.waySlipEntry = this.Option;\r\n    this.dispatching.createdBy = localStorage.getItem('user');\r\n    console.log('this.dispatching', this.dispatching);\r\n    if (this.dispatching._id === '' || this.dispatching._id === undefined) {\r\n      this.stockService.saveSandDispatching(this.dispatching).subscribe(\r\n        data1 => {\r\n          this.dialogRef.close();\r\n          this.notifier.notify('success', 'sand dispatch saved Successfully');\r\n        },\r\n        error => {\r\n          this.notifier.notify('error', 'Not Dispatched Successfully');\r\n        }\r\n      );\r\n    } else if (this.dispatching._id !== undefined) {\r\n      this.dispatching.modifiedBy = localStorage.getItem('user');\r\n      this.stockService.updateSandDispatching(this.dispatching).subscribe(\r\n        data1 => {\r\n          this.dialogRef.close();\r\n          this.notifier.notify(\r\n            'success',\r\n            'sand dispatch details updated Successfully'\r\n          );\r\n        },\r\n        error => {\r\n          this.notifier.notify('error', 'Not Dispatched Successfully');\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  add(i: number) {\r\n    this.itemNamelength[i] = 10;\r\n    this.itemNamelength1[i] = 10;\r\n    i = i + 1;\r\n    this.Option.push({\r\n      _id: '',\r\n      waySlipDate: '',\r\n      waySlipNumber: '',\r\n      itemName: '',\r\n      itemWeight: 0,\r\n      disposalWeight: 0,\r\n      unit: '',\r\n      cost: 0\r\n    });\r\n    this.itemNamelength[i] = 0;\r\n    this.itemNamelength1[i] = 10;\r\n    this.addCost();\r\n  }\r\n\r\n  remove(i: number) {\r\n    this.waySlipEntry = this.Option[i];\r\n    this.stockService.deleteWaySlip(this.waySlipEntry).subscribe(data => {\r\n      this.Option.splice(i, 1);\r\n      this.itemNamelength[i] = 0;\r\n      this.itemNamelength1[i] = 10;\r\n      this.addCost();\r\n    });\r\n  }\r\n\r\n  addCost() {\r\n    this.cost = 0;\r\n    this.Option.forEach(res => {\r\n      this.cost = Number(this.cost) + Number(res.cost);\r\n    });\r\n    this.dispatching.totalCost = this.cost;\r\n  }\r\n}\r\n","import { WaySlipEntry } from './way-slip-entry';\r\n\r\nexport class SandDispatching {\r\n  _id: string;\r\n  disposalInvoiceNo: string;\r\n  invoiceNo: string;\r\n  invoiceDate: string;\r\n  vendorName: string;\r\n  waySlipEntry: any;\r\n  totalCost: number;\r\n  createdBy: string;\r\n  modifiedBy: string;\r\n}\r\n","export class SandDisposalStock{\r\n_id:String;\r\ncreatedBy:string;\r\nmodifiedBy:string;\r\nitemName:string;\r\nquantity:string;\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <!-- <button mat-raised-button color=\\\"accent\\\" (click)=\\\"getSandDisposal()\\\">Sand Disposal</button>\\r\\n<div *ngIf=\\\"button=='true'\\\"> -->\\r\\n  <mat-card class=\\\"example-card\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>\\r\\n        <mat-card class=\\\"example-card1\\\">\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>Sand Disposal Details</mat-card-title>\\r\\n          </mat-card-header>\\r\\n        </mat-card>\\r\\n      </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <div class=\\\"example-table-container mat-elevation-z8\\\">\\r\\n        <table mat-table  [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n         <ng-container matColumnDef=\\\"position\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Num. </th>\\r\\n          <td mat-cell *matCellDef=\\\"let stock; let i = index\\\">{{i+1}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"itemName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>ItemName </th>\\r\\n            <td mat-cell *matCellDef=\\\"let stock\\\">{{stock.itemName}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"quantity\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Quantity </th>\\r\\n              <td mat-cell *matCellDef=\\\"let stock\\\">{{stock.quantity}} </td>\\r\\n         </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"action\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>\\r\\n              <button mat-icon-button color=\\\"accent\\\" matTooltip=\\\"Dispose\\\" (click)=\\\"openInvoiceWindow()\\\">\\r\\n                <mat-icon>send</mat-icon>\\r\\n              </button>\\r\\n            </th>\\r\\n            <td mat-cell *matCellDef=\\\"let stock\\\"></td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\r\\n                  <tr mat-row *matRowDef=\\\"let stock; columns: displayedColumns2;\\\">\\r\\n                </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -20px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Sofia', cursive; }\\n\\n.example-table-container {\\n  position: relative;\\n  overflow: auto; }\\n\\n.example-card {\\n  width: 100%;\\n  height: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9zdG9jay9zYW5kLWRpc3Bvc2FsL0U6XFxWcF9XU1xcZm91bmRyeS1jbGllbnQvc3JjXFxhcHBcXGZvdW5kcnlcXHN0b2NrXFxzYW5kLWRpc3Bvc2FsXFxzYW5kLWRpc3Bvc2FsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVyxFQUFBOztBQTBCZjtFQUNFLGdDQUFnQztFQUNoQyw0QkFBNEI7RUFDNUIsNkJBQTZCO0VBQzdCLHlCQUF5QjtFQUN6QixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osWUFBWTtFQUNaLDZCQUE2QixFQUFBOztBQUU3QjtFQUNFLGtCQUFrQjtFQUNsQixjQUFjLEVBQUE7O0FBRWhCO0VBQ0UsV0FBVztFQUNYLFlBQ0gsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvc3RvY2svc2FuZC1kaXNwb3NhbC9zYW5kLWRpc3Bvc2FsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuLy8gICAubWF0LWZvcm0tZmllbGQge1xyXG4vLyAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4vLyAgICAgd2lkdGg6IDEwMCU7XHJcbi8vICAgfVxyXG5cclxuLy8gICB0ZHtcclxuLy8gICAgIHdpZHRoOiAyNSU7XHJcbi8vICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbi8vICAgICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcclxuLy8gICB9XHJcblxyXG4vLyAgIHRoe1xyXG4vLyAgICAgICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcclxuLy8gICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4vLyAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbi8vICAgICAgIHdpZHRoOiAyNSU7XHJcbi8vICAgICAgIGNvbG9yOiM2MjAwRUU7XHJcbi8vICAgfVxyXG5cclxuLy8gLmV4YW1wbGUtY2FyZHtcclxuLy8gICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbi8vICAgICB3aWR0aDogNTAwcHg7XHJcbi8vIH1cclxuLmV4YW1wbGUtY2FyZDF7XHJcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDEwcHg7XHJcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMTBweDtcclxuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjczMzc4O1xyXG4gIHBhZGRpbmctdG9wOiAxcHg7XHJcbiAgbWFyZ2luLXRvcDogLTQwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IC0yMHB4O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBoZWlnaHQ6IDM1cHg7XHJcbiAgZm9udC1mYW1pbHk6ICdTb2ZpYScsIGN1cnNpdmU7XHJcbn1cclxuICAuZXhhbXBsZS10YWJsZS1jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgfVxyXG4gIC5leGFtcGxlLWNhcmR7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJSBcclxuIH0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ProductionMonitoringService } from '../../production-monitoring/production-monitoring.service';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { SandDisposalStock } from '../sand-disposal/sand-disposal-stock';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { SandDispatchingComponent } from './sand-dispatching/sand-dispatching.component';\r\n@Component({\r\n  selector: 'app-sand-disposal',\r\n  templateUrl: './sand-disposal.component.html',\r\n  styleUrls: ['./sand-disposal.component.scss']\r\n})\r\nexport class SandDisposalComponent implements OnInit {\r\n  public button = 'false';\r\n  public sandDisposal: SandDisposalStock;\r\n  dataSource;\r\n  Option = [{ _id: '', itemName: '', quantity: 0 }];\r\n  constructor(public productionMonitoringService: ProductionMonitoringService,\r\n    private dialog: MatDialog) { }\r\n  displayedColumns2: String[] = ['position', 'itemName', 'quantity', 'action'];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngOnInit() {\r\n    this.sandDisposal = new SandDisposalStock();\r\n    this.getSandDisposalStock();\r\n  }\r\n\r\n  getSandDisposalStock() {\r\n    this.productionMonitoringService.getSandDisposalStock().subscribe((data1) => {\r\n      this.dataSource = new MatTableDataSource(data1);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  addtoOption(j: number, id: string, itemName: string, quantity: number) {\r\n    let i;\r\n    i = 0;\r\n    this.Option[i]._id = id;\r\n    this.Option[i].itemName = itemName;\r\n    this.Option[i].quantity = quantity;\r\n    this.Option.push({ _id: '', itemName: '', quantity: 0 });\r\n    this.Option.pop();\r\n  }\r\n\r\n\r\n  openInvoiceWindow() {\r\n    const dialogRef = this.dialog.open(SandDispatchingComponent, {\r\n      data: { option: this.Option }\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getSandDisposalStock();\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport { StockComponent } from './stock.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: StockComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class StockRoutingModule {}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <mat-card class=\\\"example-card\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>\\r\\n        <mat-card class=\\\"example-card1\\\">\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>Available Stock</mat-card-title>\\r\\n          </mat-card-header>\\r\\n        </mat-card>\\r\\n      </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <div class=\\\"example-table-container mat-elevation-z8\\\">\\r\\n        <table mat-table #sortCol2=\\\"matSort\\\" [dataSource]=\\\"dataSource2\\\" matSort>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"itemName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>ItemName </th>\\r\\n            <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.itemName}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"itemType\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>ItemType </th>\\r\\n            <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.itemType}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"weight\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\\r\\n            <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.weight}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"unit\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Unit </th>\\r\\n            <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.unit}} </td>\\r\\n          </ng-container>\\r\\n<!-- \\r\\n          <ng-container matColumnDef=\\\"averageWeight\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> AvgWeight </th>\\r\\n            <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.averageWeight}} </td>\\r\\n          </ng-container> -->\\r\\n\\r\\n          <ng-container matColumnDef=\\\"minWeightReq\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> MinWeightReq </th>\\r\\n            <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.minWeightReq}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"minOrderWeight\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> MinOrderWeight </th>\\r\\n            <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.minOrderWeight}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"maxOrderWeight\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> MaxOrderWeight </th>\\r\\n            <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.maxOrderWeight}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"lastOrder\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> LastOrder </th>\\r\\n            <td mat-cell *matCellDef=\\\"let stock;let i=index\\\">{{stock.lastOrder | date:'d MMM'}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"actions\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Reorder </th>\\r\\n            <mat-cell *matCellDef=\\\"let stock;let i=index\\\">\\r\\n              <button mat-icon-button color=\\\"accent\\\" matTooltip=\\\"Reorder\\\" (click)=\\\"reOrder(i,stock.purchaseId)\\\">\\r\\n                <mat-icon>reorder</mat-icon>\\r\\n              </button>\\r\\n            </mat-cell>\\r\\n          </ng-container>\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\">\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n  <!-- temp-stock -->\\r\\n  <app-temp-stock></app-temp-stock>\\r\\n  <!-- Return And Rejection -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\" style=\\\"margin-top: 50px;\\\">\\r\\n      <mat-card class=\\\"example-card2\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>\\r\\n            <mat-card class=\\\"example-card1\\\">\\r\\n              <mat-card-header>\\r\\n                <mat-card-title>Return And Rejection</mat-card-title>\\r\\n              </mat-card-header>\\r\\n            </mat-card>\\r\\n          </mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"example-table-container mat-elevation-z8\\\">\\r\\n            <table mat-table #sortCol2=\\\"matSort\\\" [dataSource]=\\\"dataSource3\\\" matSort>\\r\\n\\r\\n              <ng-container matColumnDef=\\\"itemName\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>ItemName </th>\\r\\n                <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.itemName}}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container matColumnDef=\\\"weight\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Weight</th>\\r\\n                <td mat-cell *matCellDef=\\\"let stock\\\"> {{stock.weight}}</td>\\r\\n              </ng-container>\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns3\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns3;\\\">\\r\\n              </tr>\\r\\n            </table>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <!-- sand-disposal -->\\r\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\" style=\\\"margin-top: 50px;\\\">\\r\\n      <app-sand-disposal></app-sand-disposal>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12 col-md-6 col-sm-12\\\">\\r\\n      <app-mc-consumable-stock></app-mc-consumable-stock>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12 col-md-6 col-sm-12\\\">\\r\\n      <app-mc-consumable-temp-stock></app-mc-consumable-temp-stock>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12 col-md-6 col-sm-12\\\">\\r\\n      <app-mc-parts-stock></app-mc-parts-stock>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12 col-md-6 col-sm-12\\\">\\r\\n      <app-mc-parts-temp-stock></app-mc-parts-temp-stock>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<notifier-container></notifier-container>\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.example-table-container {\\n  position: relative;\\n  overflow: auto; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -20px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\n.example-card {\\n  width: 100%;\\n  height: 100%;\\n  margin-top: 50px; }\\n\\n.example-card2 {\\n  width: 100%;\\n  height: 100%; }\\n\\nth {\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9zdG9jay9FOlxcVnBfV1NcXGZvdW5kcnktY2xpZW50L3NyY1xcYXBwXFxmb3VuZHJ5XFxzdG9ja1xcc3RvY2suY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFXLEVBQUE7O0FBRWI7RUFDRSxrQkFBa0I7RUFDbEIsY0FBYyxFQUFBOztBQUVoQjtFQUNFLGdDQUFnQztFQUNoQyw0QkFBNEI7RUFDNUIsNkJBQTZCO0VBQzdCLHlCQUF5QjtFQUN6QixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osWUFBWTtFQUNaLDBCQUEwQixFQUFBOztBQUU1QjtFQUNFLFdBQVU7RUFDVixZQUFZO0VBQ1osZ0JBQWdCLEVBQUE7O0FBRWxCO0VBQ0UsV0FBVTtFQUNWLFlBQVksRUFBQTs7QUFFZDtFQUNFLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZm91bmRyeS9zdG9jay9zdG9jay5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICAuZXhhbXBsZS10YWJsZS1jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgfVxyXG4gIC5leGFtcGxlLWNhcmQxe1xyXG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDEwcHg7XHJcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxMHB4O1xyXG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDEwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjczMzc4O1xyXG4gICAgcGFkZGluZy10b3A6IDFweDtcclxuICAgIG1hcmdpbi10b3A6IC00MHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IC0yMHB4O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgaGVpZ2h0OiAzNXB4O1xyXG4gICAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgfVxyXG4gIC5leGFtcGxlLWNhcmR7XHJcbiAgICB3aWR0aDoxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgbWFyZ2luLXRvcDogNTBweDtcclxuICB9XHJcbiAgLmV4YW1wbGUtY2FyZDJ7XHJcbiAgICB3aWR0aDoxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuICB0aHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG5cclxuIl19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource, MatSort, MatPaginator, MatDialog } from '@angular/material';\r\nimport { StockService } from './stock.service';\r\nimport { Stock, ReturnAndRejection } from './stock';\r\nimport { Router} from '@angular/router';\r\nimport { ProductionMonitoringService } from '../production-monitoring/production-monitoring.service';\r\n\r\n@Component({\r\n  selector: 'app-stock',\r\n  templateUrl: './stock.component.html',\r\n  styleUrls: ['./stock.component.scss'],\r\n\r\n})\r\nexport class StockComponent implements OnInit {\r\n  dataSource1;\r\n  dataSource2;\r\n  dataSource3;\r\n  public type;\r\n\r\n  constructor(public stockService: StockService, public router: Router,\r\n    public matDialog: MatDialog, public productionMonitoringService: ProductionMonitoringService) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\r\n      return false;\r\n    };\r\n  }\r\n  public stock: Stock;\r\n  public return: ReturnAndRejection;\r\n  @ViewChild(MatPaginator) paginator1: MatPaginator;\r\n  @ViewChild(MatSort) sort1: MatSort;\r\n  @ViewChild(MatPaginator) paginator2: MatPaginator;\r\n  @ViewChild(MatSort) sort2: MatSort;\r\n\r\n  displayedColumns1: String[] = ['itemName', 'weight', 'unit', 'vendorName',\r\n    'invoiceNo', 'orderDate', 'deliveryDate', 'deliveryTime', 'actions'];\r\n  displayedColumns2: String[] = ['itemName', 'itemType', 'weight','unit', \r\n    'minWeightReq', 'minOrderWeight', 'maxOrderWeight', 'lastOrder', 'actions'];\r\n  displayedColumns3: String[] = ['itemName', 'weight'];\r\n\r\n  ngOnInit() {\r\n    this.getTempStockList();\r\n    this.getStockList();\r\n    this.getReturns();\r\n    this.stock = new Stock();\r\n    this.return = new ReturnAndRejection();\r\n  }  \r\n\r\n  getStockList() {\r\n    this.stockService.getStockList().subscribe((data) => {\r\n      this.dataSource2 = new MatTableDataSource(data);\r\n      this.dataSource2.paginator = this.paginator2;\r\n      this.dataSource2.sort = this.sort2;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getTempStockList() {\r\n    this.stockService.getPendingList().subscribe((data) => {\r\n      this.dataSource1 = new MatTableDataSource(data);\r\n      this.dataSource1.paginator = this.paginator1;\r\n      this.dataSource1.sort = this.sort1;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getReturns() {\r\n    this.stockService.getReturns().subscribe((data) => {\r\n      this.dataSource3 = new MatTableDataSource(data);\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  reOrder(i: number, purchaseId: String) {\r\n    this.type = 'reOrder';\r\n    this.router.navigate(['/foundry/purchase/' + purchaseId + '/' + this.type], { skipLocationChange: true });\r\n  }\r\n\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StockComponent } from './stock.component';\r\nimport { StockRoutingModule } from './stock-routing.module';\r\nimport { MaterialModule } from '../../app.module';\r\nimport { DeliveredComponent } from './delivered/delivered.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DateInputsModule } from '@progress/kendo-angular-dateinputs';\r\nimport { TempStockComponent } from './temp-stock/temp-stock.component';\r\nimport { ProductionMonitoringService } from '../production-monitoring/production-monitoring.service';\r\nimport { SandDisposalComponent } from './sand-disposal/sand-disposal.component';\r\nimport { SandDispatchingComponent } from './sand-disposal/sand-dispatching/sand-dispatching.component';\r\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\r\nimport { McConsumableStockComponent } from './mc-consumable-stock/mc-consumable-stock.component';\r\nimport { McPartsStockComponent } from './mc-parts-stock/mc-parts-stock.component';\r\nimport { McPartsTempStockComponent } from './mc-parts-temp-stock/mc-parts-temp-stock.component';\r\nimport { McConsumableTempStockComponent } from './mc-consumable-temp-stock/mc-consumable-temp-stock.component';\r\n\r\nconst customNotifierOptions: NotifierOptions = {\r\n  position: {\r\n    horizontal: {\r\n      position: 'middle',\r\n      distance: 12\r\n    },\r\n    vertical: {\r\n      position: 'top',\r\n      distance: 50,\r\n      gap: 10\r\n    }\r\n  },\r\n  theme: 'material',\r\n  behaviour: {\r\n    autoHide: 1000,\r\n    onClick: 'hide',\r\n    onMouseover: 'pauseAutoHide',\r\n    showDismissButton: true,\r\n    stacking: 4\r\n  },\r\n  animations: {\r\n    enabled: true,\r\n    show: {\r\n      preset: 'slide',\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    hide: {\r\n      preset: 'fade',\r\n      speed: 300,\r\n      easing: 'ease',\r\n      offset: 50\r\n    },\r\n    shift: {\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    overlap: 10\r\n  }\r\n};\r\n\r\n@NgModule({\r\n  declarations: [StockComponent, DeliveredComponent, TempStockComponent, SandDisposalComponent,  SandDispatchingComponent, McConsumableStockComponent, McPartsStockComponent, McPartsTempStockComponent, McConsumableTempStockComponent],\r\n  imports: [\r\n    CommonModule, StockRoutingModule,\r\n    MaterialModule, FormsModule, ReactiveFormsModule,\r\n    DateInputsModule, NotifierModule.withConfig(customNotifierOptions)\r\n  ],\r\n  entryComponents: [DeliveredComponent,SandDispatchingComponent],\r\n  providers: [ProductionMonitoringService]\r\n})\r\nexport class StockModule { }\r\n","export class Stock {\r\n  _id: String;\r\n  itemName: String;\r\n  itemType: String;\r\n  weight: number;\r\n  unit: String;\r\n  perKG: number;\r\n  totalAmount: number;\r\n  averageWeight: number;\r\n  minWeightReq: number;\r\n  minOrderWeight: number;\r\n  maxOrderWeight: number;\r\n  lastOrder: String;\r\n  deliveredTime: String;\r\n  purchaseId: String;\r\n\r\n}\r\nexport class ReturnAndRejection {\r\n  _id: String;\r\n  itemName: String;\r\n  returnWeight: number;\r\n  rejectionweight: number;\r\n}\r\n","module.exports = \"<!-- Pending Stock List -->\\r\\n<div class=\\\"container\\\">\\r\\n  <mat-card class=\\\"example-card\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>\\r\\n        <mat-card class=\\\"example-card1\\\">\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>Pending Stock</mat-card-title>\\r\\n          </mat-card-header>\\r\\n        </mat-card>\\r\\n      </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <div class=\\\"example-table-container mat-elevation-z8\\\">\\r\\n        <table mat-table #sortCol1=\\\"matSort\\\" [dataSource]=\\\"dataSource1\\\" matSort>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"itemName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>ItemName </th>\\r\\n            <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.itemName}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"weight\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\\r\\n            <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.weight}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"unit\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Unit </th>\\r\\n            <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.unit}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"vendorName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> VendorName </th>\\r\\n            <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.vendorName}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"invoiceNo\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> InvoiceNo </th>\\r\\n            <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.invoiceNo}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"deliveryTime\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> DeliveryTime </th>\\r\\n            <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.deliveryTime | date:'h:mm a'}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"orderDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> OrderDate </th>\\r\\n            <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.orderDate| date:'d MMM'}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"deliveryDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> DeliveryDate </th>\\r\\n            <td mat-cell *matCellDef=\\\"let tempStock\\\"> {{tempStock.deliveryDate | date:'d MMM'}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"actions\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Delivered </th>\\r\\n            <mat-cell *matCellDef=\\\"let tempStock;let i=index\\\">\\r\\n              <button mat-icon-button color=\\\"accent\\\" matTooltip=\\\"Delivered\\\"\\r\\n                (click)=\\\"updateStock(i,tempStock._id,tempStock.itemName,tempStock.itemType,tempStock.weight,tempStock.purchaseId,tempStock.unit,tempStock.totalAmount,tempStock.minWeightReq)\\\">\\r\\n                <mat-icon>done_all</mat-icon>\\r\\n              </button>\\r\\n            </mat-cell>\\r\\n          </ng-container>\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns1\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns1;\\\">\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n      <mat-paginator [pageSizeOptions]=\\\"[5,10, 25, 100]\\\"></mat-paginator>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</div>\"","module.exports = \"table {\\n  width: 100%;\\n  font-family: 'Lora', serif; }\\n\\n.example-table-container {\\n  position: relative;\\n  overflow: auto; }\\n\\n.example-card {\\n  margin-top: 50px;\\n  width: 100%;\\n  height: 100%; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -20px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9zdG9jay90ZW1wLXN0b2NrL0U6XFxWcF9XU1xcZm91bmRyeS1jbGllbnQvc3JjXFxhcHBcXGZvdW5kcnlcXHN0b2NrXFx0ZW1wLXN0b2NrXFx0ZW1wLXN0b2NrLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVztFQUNYLDBCQUEwQixFQUFBOztBQTRCNUI7RUFDRSxrQkFBa0I7RUFDbEIsY0FBYyxFQUFBOztBQU1oQjtFQUNFLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsWUFBWSxFQUFBOztBQUVoQjtFQUNFLGdDQUFnQztFQUNoQyw0QkFBNEI7RUFDNUIsNkJBQTZCO0VBQzdCLHlCQUF5QjtFQUN6QixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osWUFBWTtFQUNaLDBCQUEwQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZm91bmRyeS9zdG9jay90ZW1wLXN0b2NrL3RlbXAtc3RvY2suY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gIH1cclxuXHJcbiAgLy8gLm1hdC1mb3JtLWZpZWxkIHtcclxuICAvLyAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAvLyAgIHdpZHRoOiAxMDAlO1xyXG4gIC8vIH1cclxuXHJcbiAgLy8gdGR7XHJcbiAgLy8gICB3aWR0aDogMjUlO1xyXG4gIC8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIC8vICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiAgLy8gfVxyXG4gIC8vIHRoe1xyXG4gIC8vICAgICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcclxuICAvLyAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIC8vICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgLy8gICAgIHdpZHRoOiAyNSU7XHJcbiAgLy8gICAgIGNvbG9yOiM2MjAwRUU7XHJcbiAgLy8gfVxyXG5cclxuICAvLyAjc3RvY2t7XHJcbiAgLy8gICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gIC8vIH1cclxuICAvLyBtYXQtY2FyZC10aXRsZXtcclxuICAvLyAgIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xyXG4gIC8vICAgZm9udC1zaXplOiAyNnB4O1xyXG4gIC8vIH1cclxuICAuZXhhbXBsZS10YWJsZS1jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgfVxyXG5cclxuICAvLyAjcGVuZGluZ1N0b2Nre1xyXG4gIC8vICAgbWFyZ2luLXRvcDogNTBweDtcclxuICAvLyB9XHJcbiAgLmV4YW1wbGUtY2FyZHtcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcbi5leGFtcGxlLWNhcmQxe1xyXG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAxMHB4O1xyXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDEwcHg7XHJcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDEwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3MzM3ODtcclxuICBwYWRkaW5nLXRvcDogMXB4O1xyXG4gIG1hcmdpbi10b3A6IC00MHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAtMjBweDtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgaGVpZ2h0OiAzNXB4O1xyXG4gIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { StockService } from '../stock.service';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialog } from '@angular/material';\r\nimport { Stock } from '../stock';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DeliveredComponent } from '../delivered/delivered.component';\r\nimport { Http } from '@angular/http';\r\nimport { StockComponent } from '../stock.component';\r\n\r\n@Component({\r\n  selector: 'app-temp-stock',\r\n  templateUrl: './temp-stock.component.html',\r\n  styleUrls: ['./temp-stock.component.scss'],\r\n  providers: [DatePipe]\r\n})\r\nexport class TempStockComponent implements OnInit {\r\n  dataSource1;\r\n  public stock: Stock;\r\n  constructor(public stockService: StockService, public matDialog: MatDialog, public datepipe: DatePipe, private http: Http,\r\n    private stockComponent: StockComponent) { }\r\n  @ViewChild(MatPaginator) paginator1: MatPaginator;\r\n  @ViewChild(MatSort) sort1: MatSort;\r\n  displayedColumns1: String[] = ['itemName', 'weight', 'unit',\r\n    'vendorName', 'invoiceNo', 'orderDate', 'deliveryDate', 'deliveryTime', 'actions'];\r\n\r\n  ngOnInit() {\r\n    this.getTempStockList();\r\n    this.stock = new Stock();\r\n  }\r\n\r\n  getTempStockList() {\r\n    this.stockService.getPendingList().subscribe((data) => {\r\n      this.dataSource1 = new MatTableDataSource(data);\r\n      this.dataSource1.paginator = this.paginator1;\r\n      this.dataSource1.sort = this.sort1;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  updateStock(i: number, _id: String, itemName: String, itemType: String,\r\n    weight: number, purchaseId: String, unit: String, totalAmount: number,minWeightReq:number) {\r\n    this.stock.itemName = itemName;\r\n    this.stock.itemType = itemType;\r\n    this.stock.weight = weight;\r\n    this.stock.purchaseId = purchaseId;\r\n    this.stock._id = _id;\r\n    this.stock.unit = unit;\r\n    this.stock.totalAmount = totalAmount;\r\n    this.stock.minWeightReq=minWeightReq;\r\n    const matDialogRef = this.matDialog.open(DeliveredComponent, {\r\n    });\r\n    matDialogRef.afterClosed().subscribe(result => {\r\n\r\n      for (let i = 0; i < result.length; i++) {\r\n        this.stock.lastOrder = result[0];\r\n        this.stock.deliveredTime = result[1];\r\n      }\r\n      this.stockService.updateStock(this.stock).subscribe((data) => {\r\n        this.dataSource1 = new MatTableDataSource(data);\r\n        this.getTempStockList();\r\n        this.stockComponent.getStockList();\r\n      }, (err) => {\r\n        console.log(err);\r\n      });\r\n      this.getTempStockList();\r\n      this.stockComponent.getStockList();\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/app/foundry/rejection/rejection-routing.module.ts","webpack:///./src/app/foundry/rejection/rejection.component.html","webpack:///./src/app/foundry/rejection/rejection.component.scss","webpack:///./src/app/foundry/rejection/rejection.component.ts","webpack:///./src/app/foundry/rejection/rejection.module.ts","webpack:///./src/app/foundry/rejection/rejection.ts"],"names":[],"mappings":"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","file":"rejection-rejection-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RejectionComponent} from './rejection.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RejectionComponent,\r\n  }\r\n];\r\n  @NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class RejectionRoutingModule { }\r\n","module.exports = \"<form #formControl=\\\"ngForm\\\">\\r\\n  <mat-card class=\\\"card\\\" style=\\\"margin-top: 100px;margin-bottom: 100px;margin-left: 150px;margin-right: 100px;\\\">\\r\\n    <mat-card-header>\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-card-title>Rejection Details</mat-card-title>\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n      </div>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-2\\\"></div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input type=\\\"text\\\" placeholder=\\\"CustomerName\\\" appStringValidation=\\\"words\\\" aria-label=\\\"CustomerName\\\" name=\\\"CustomerName\\\" matInput\\r\\n              [formControl]=\\\"customerControl\\\" [matAutocomplete]=\\\"auto1\\\" [(ngModel)]=\\\"rejection.customerName\\\" [maxlength]=\\\"20\\\" required>\\r\\n            <mat-autocomplete autoActiveFirstOption #auto1=\\\"matAutocomplete\\\"\\r\\n              (optionSelected)=\\\"getPartIdByCustomerName(rejection.customerName)\\\">\\r\\n              <mat-option *ngFor=\\\"let customer of filteredCustomers | async\\\" [value]=\\\"customer.customerName\\\">\\r\\n                {{customer.customerName}}\\r\\n              </mat-option>\\r\\n            </mat-autocomplete>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input type=\\\"text\\\" placeholder=\\\"partId\\\" aria-label=\\\"partId\\\" name=\\\"partId\\\" matInput\\r\\n              [formControl]=\\\"productControl\\\" [matAutocomplete]=\\\"auto2\\\" [(ngModel)]=\\\"rejection.partId\\\" [maxlength]=\\\"25\\\" required>\\r\\n            <mat-autocomplete autoActiveFirstOption #auto2=\\\"matAutocomplete\\\"\\r\\n              (optionSelected)=\\\"getMeltNoByPartId(rejection)\\\">\\r\\n              <mat-option *ngFor=\\\"let product of filteredProducts | async\\\" [value]=\\\"product.partId\\\">\\r\\n                {{product.partId}}\\r\\n              </mat-option>\\r\\n            </mat-autocomplete>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-2\\\"></div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input type=\\\"text\\\" placeholder=\\\"meltNo\\\" aria-label=\\\"meltNo\\\" name=\\\"meltNo\\\" matInput\\r\\n              [formControl]=\\\"meltControl\\\" [matAutocomplete]=\\\"auto3\\\" appStringValidation=\\\"integer\\\" [(ngModel)]=\\\"rejection.meltNo\\\" [maxlength]=\\\"10\\\" required>\\r\\n            <mat-autocomplete autoActiveFirstOption #auto3=\\\"matAutocomplete\\\"\\r\\n              (optionSelected)=\\\"getBatchId(rejection.meltNo)\\\">\\r\\n              <mat-option *ngFor=\\\"let melt of filteredMelts | async\\\" [value]=\\\"melt.meltNo\\\">\\r\\n                {{melt.meltNo}}\\r\\n              </mat-option>\\r\\n            </mat-autocomplete>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input type=\\\"text\\\" placeholder=\\\"batchId\\\" aria-label=\\\"batchId\\\" name=\\\"batchId\\\" matInput [maxlength]=\\\"10\\\"\\r\\n              [matAutocomplete]=\\\"auto4\\\" [(ngModel)]=\\\"rejection.batchId\\\" required>\\r\\n            <mat-autocomplete autoActiveFirstOption #auto4=\\\"matAutocomplete\\\"\\r\\n              (optionSelected)=\\\"getPartWeight(rejection.batchId)\\\">\\r\\n              <mat-option *ngFor=\\\"let batch of filteredBatchs | async\\\" [value]=\\\"batch.batchId\\\">\\r\\n                {{batch.batchId}}\\r\\n              </mat-option>\\r\\n            </mat-autocomplete>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-2\\\"></div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input type=\\\"text\\\" placeholder=\\\"quantity\\\" aria-label=\\\"quantity\\\" appNumberValidation name=\\\"quantity\\\" matInput [maxlength]=\\\"10\\\"\\r\\n              [(ngModel)]=\\\"rejection.quantity\\\" (ngModelChange)=\\\"calTotalWeight(rejection.quantity,rejection.partWeight)\\\"\\r\\n              required>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input type=\\\"text\\\" placeholder=\\\"partWeight\\\" aria-label=\\\"partWeight\\\" appNumberValidation name=\\\"partWeight\\\" matInput [maxlength]=\\\"10\\\"\\r\\n              [(ngModel)]=\\\"rejection.partWeight\\\" required>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-2\\\"></div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          TotalWeight:{{rejection.totalWeight}}\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <mat-select placeholder=\\\"ReasonForRejection\\\" name=\\\"reason\\\" [(ngModel)]=\\\"rejection.reasonForRej\\\">\\r\\n              <mat-option value=\\\"SandDrop\\\">Sand Drop</mat-option>\\r\\n              <mat-option value=\\\"Crack\\\">Crack</mat-option>\\r\\n              <mat-option value=\\\"ColdMetal\\\">Cold Metal</mat-option>\\r\\n              <mat-option value=\\\"MoldBroken\\\">Mold Broken</mat-option>\\r\\n              <mat-option value=\\\"ShortPour\\\">Short Pour</mat-option>\\r\\n              <mat-option value=\\\"HighHardness\\\">High Hardness</mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n          <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!formControl.valid\\\"\\r\\n            (click)=\\\"saveRejectionDetails(formControl)\\\">Save</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\"\\r\\n            (click)=\\\"cancel(formControl)\\\">Reset</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n  <notifier-container></notifier-container>\\r\\n\"","module.exports = \".example-full-width {\\n  width: 100%; }\\n\\nbutton {\\n  margin-right: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9yZWplY3Rpb24vRTpcXFZwX1dTXFxmb3VuZHJ5LWNsaWVudC9zcmNcXGFwcFxcZm91bmRyeVxccmVqZWN0aW9uXFxyZWplY3Rpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7O0FBRWI7RUFDRSxrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvcmVqZWN0aW9uL3JlamVjdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWZ1bGwtd2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbmJ1dHRvbntcclxuICBtYXJnaW4tcmlnaHQ6IDE1cHg7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Rejection } from './rejection';\r\nimport { ProductionMonitoringService } from '../production-monitoring/production-monitoring.service';\r\nimport { CustomerService } from '../customer/customer.service';\r\nimport { Customer } from '../customer/customer';\r\nimport { Product } from '../product/product';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith, map } from 'rxjs/operators';\r\nimport { FormControl, NgForm } from '@angular/forms';\r\nimport { OngoingMelts } from '../production-monitoring/ongoing-melts/ongoing-melts';\r\nimport { Melt } from '../production-monitoring/melt';\r\nimport { MeltReport } from '../report/static-report/melt-report/melt-report';\r\nimport { NotifierService } from 'angular-notifier';\r\n@Component({\r\n  selector: 'app-rejection',\r\n  templateUrl: './rejection.component.html',\r\n  styleUrls: ['./rejection.component.scss']\r\n})\r\nexport class RejectionComponent implements OnInit {\r\n  public rejection: Rejection;\r\n  private notifier: NotifierService;\r\n  public ongoingmelts: OngoingMelts[];\r\n  public customers: Customer[];\r\n  public products: Product[];\r\n  public melts: Melt[];\r\n  public meltReport: MeltReport[];\r\n  filteredBatchs: Observable<MeltReport[]>;\r\n  batchControl = new FormControl;\r\n  filteredMelts: Observable<Melt[]>;\r\n  meltControl = new FormControl;\r\n  filteredProducts: Observable<Product[]>;\r\n  productControl = new FormControl;\r\n  filteredCustomers: Observable<Customer[]>;\r\n  customerControl = new FormControl;\r\n  Option = [{ _id: '', meltNo: '', moldingType: '',heatCode:'', meltStartDate: '', meltEndDate: '', totalMeltWeight: 0, status: '' }];\r\n  public quantity :number;\r\n  constructor(public productionService: ProductionMonitoringService, public customerService: CustomerService,notifier: NotifierService) {\r\n    this.notifier = notifier;\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.rejection = new Rejection();\r\n    this.getCustomer();\r\n  }\r\n\r\n  getCustomer() {\r\n    this.customerService.getCustomers().subscribe((data) => {\r\n      this.customers = data;\r\n      this.filteredCustomers = this.customerControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterCustomer(state) : this.customers.slice())\r\n      );\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  private _filterCustomer(value: string): Customer[] {\r\n    const filerValue = value.toLowerCase();\r\n    return this.customers.filter(melts => melts.customerName.toLowerCase().indexOf(filerValue) === 0);\r\n  }\r\n\r\n  private _filterProduct(value: string): Product[] {\r\n    const filerValue = value.toLowerCase();\r\n    return this.products.filter(melts => melts.partId.toLowerCase().indexOf(filerValue) === 0);\r\n  }\r\n\r\n  private _filterMelt(value: String): Melt[] {\r\n    const filerValue = value.toLowerCase();\r\n    return this.melts.filter(melts => melts.meltNo.toLowerCase().indexOf(filerValue) === 0);\r\n  }\r\n\r\n  private _filterBatch(value: String): MeltReport[] {\r\n    const filerValue = value.toLowerCase();\r\n    return this.meltReport.filter(melts => melts.batchId.toLowerCase().indexOf(filerValue) === 0);\r\n  }\r\n\r\n  getPartIdByCustomerName(customerName: String) {\r\n    this.productionService.getPartIdByCustomerName(customerName).subscribe(data => {\r\n      this.products = data;\r\n      this.filteredProducts = this.productControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterProduct(state) : this.products.slice())\r\n      );\r\n    })\r\n  }\r\n\r\n\r\n  getMeltNoByPartId(rejection: Rejection) {\r\n    this.productionService.getMeltNoByPartId(rejection).subscribe((data) => {\r\n      this.ongoingmelts = data;\r\n      let i = 0;\r\n      this.ongoingmelts.forEach(res => {\r\n        //console.log(' res.meltId.meltNo', res.meltId.meltNo)\r\n        this.Option[i].meltNo = res.meltId.meltNo.toString();\r\n        this.Option.push({ _id: '', meltNo: '', moldingType: '',heatCode:'', meltStartDate: '', meltEndDate: '', totalMeltWeight: 0, status: '' });\r\n        i++;\r\n      });\r\n      this.Option.pop();\r\n      this.melts = this.Option;\r\n      this.filteredMelts = this.meltControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterMelt(state) : this.melts.slice())\r\n      );\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n\r\n  }\r\n\r\n  getBatchId(meltNo: String) {\r\n    this.productionService.getBatchId(meltNo).subscribe((data) => {\r\n      this.meltReport = data;\r\n      this.filteredBatchs = this.batchControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterBatch(state) : this.meltReport.slice())\r\n      );\r\n    })\r\n  }\r\n\r\n  getPartWeight(batchId: String) {\r\n    this.quantity =0;\r\n    let i = 0;\r\n    this.meltReport.forEach(res => {\r\n      this.meltReport[i].partWeight = res.partWeight;\r\n      this.meltReport[i].quantity = res.quantity;\r\n      this.meltReport[i].batchId = res.batchId;\r\n      if (batchId == res.batchId) {\r\n        this.quantity = res.quantity;\r\n        this.rejection.partWeight = res.partWeight;\r\n      }\r\n    })\r\n  }\r\n\r\n  calTotalWeight(quantity: number, partWeight: number) {\r\n    if(quantity > this.quantity){\r\n      this.notifier.notify('error','Produced Qty is less than given Qty');\r\n      this.rejection.quantity =0;\r\n    }\r\n    this.rejection.totalWeight = Number(quantity) * Number(partWeight);\r\n  }\r\n\r\n  saveRejectionDetails(formControl:NgForm) {\r\n    this.rejection.createdBy = localStorage.getItem('user');\r\n    this.productionService.saveRejection(this.rejection).subscribe((data) => {\r\n      this.notifier.notify('success','Saved Successfully');\r\n      this.rejection.customerName='';\r\n      this.rejection.meltNo ='';\r\n      this.rejection.partId ='';\r\n      formControl.resetForm();\r\n    }, error => {\r\n      console.log(error);\r\n      this.notifier.notify('error','Not Save');\r\n    })\r\n  }\r\n\r\n  cancel(formControl:NgForm){\r\n    formControl.resetForm();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RejectionRoutingModule} from './rejection-routing.module';\r\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {MaterialModule} from '../../app.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RejectionComponent} from './rejection.component';\r\nimport { CustomerService } from '../customer/customer.service';\r\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\r\nimport { FoundryModule } from '../foundry.module';\r\nconst customNotifierOptions: NotifierOptions = {\r\n  position: {\r\n    horizontal: {\r\n      position: 'middle',\r\n      distance: 12\r\n    },\r\n    vertical: {\r\n      position: 'top',\r\n      distance: 50,\r\n      gap: 10\r\n    }\r\n  },\r\n  theme: 'material',\r\n  behaviour: {\r\n    autoHide: 1000,\r\n    onClick: 'hide',\r\n    onMouseover: 'pauseAutoHide',\r\n    showDismissButton: true,\r\n    stacking: 4\r\n  },\r\n  animations: {\r\n    enabled: true,\r\n    show: {\r\n      preset: 'slide',\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    hide: {\r\n      preset: 'fade',\r\n      speed: 300,\r\n      easing: 'ease',\r\n      offset: 50\r\n    },\r\n    shift: {\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    overlap: 10\r\n  }\r\n};\r\n\r\n@NgModule({\r\n  declarations: [ RejectionComponent],\r\n  imports: [\r\n    CommonModule,RejectionRoutingModule,MaterialModule,HttpClientModule,HttpModule,NotifierModule.withConfig(customNotifierOptions),\r\n    FormsModule,ReactiveFormsModule,FoundryModule\r\n  ],\r\n  providers:[CustomerService],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n\r\n})\r\nexport class RejectionModule { }\r\n","export class Rejection{\r\n  _id:String;\r\n  customerName:String;\r\n  partId:String;\r\n  meltNo:String;\r\n  batchId:String;\r\n  quantity:number;\r\n  partWeight:number;\r\n  totalWeight:number;\r\n  reasonForRej:String;\r\n  createdBy:String;\r\n}\r\n"],"sourceRoot":""}
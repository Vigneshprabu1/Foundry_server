{"version":3,"sources":["webpack:///./src/app/foundry/order/costing/costing.component.html","webpack:///./src/app/foundry/order/costing/costing.component.scss","webpack:///./src/app/foundry/order/costing/costing.component.ts","webpack:///./src/app/foundry/order/new-order/new-order.component.html","webpack:///./src/app/foundry/order/new-order/new-order.component.scss","webpack:///./src/app/foundry/order/new-order/new-order.component.ts","webpack:///./src/app/foundry/order/order-routing.module.ts","webpack:///./src/app/foundry/order/order.component.html","webpack:///./src/app/foundry/order/order.component.scss","webpack:///./src/app/foundry/order/order.component.ts","webpack:///./src/app/foundry/order/order.module.ts"],"names":[],"mappings":"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","file":"order-order-module.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1 mat-dialog-title>Costing Details</h1>\\r\\n  <div mat-dialog-content>\\r\\n    <form>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"product Name\\\" name=\\\"productName\\\" [(ngModel)]=\\\"order.product.productName\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Part Type\\\" name=\\\"partType\\\" [(ngModel)]=\\\"order.product.partType\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Mold Type\\\" name=\\\"moldType\\\" [(ngModel)]=\\\"order.product.moldType\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Part Weight\\\" name=\\\"partWeight\\\" [(ngModel)]=\\\"order.product.partWeight\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Part Cost\\\" name=\\\"partCost\\\" [(ngModel)]=\\\"order.product.partCost\\\" (ngModelChange)=\\\"costCal(order.product.partCost)\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Quantity\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"order.product.quantity\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Total Weight\\\" name=\\\"totalWeight\\\" [(ngModel)]=\\\"order.product.totalWeight\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Total Cost\\\" name=\\\"totalCost\\\" [(ngModel)]=\\\"order.product.totalCost\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\"></div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Delivery Date\\\" name=\\\"deliveryDate\\\" [(ngModel)]=\\\"order.deliveryDate\\\"  data-date-format='YYYY-MM-DD'/>\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #picker ></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div mat-dialog-actions>\\r\\n    <button mat-raised-button color=\\\"accent\\\" style=\\\"float: right\\\" (click)=\\\"orders()\\\">\\r\\n      Place Order\\r\\n    </button>\\r\\n    <button mat-raised-button color=\\\"accent\\\" style=\\\"float: right\\\" (click)=\\\"onNoClick()\\\">Close</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".container {\\n  width: 800px; }\\n\\n.example-full-width {\\n  width: 100%;\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9vcmRlci9jb3N0aW5nL0U6XFxWcF9XU1xcZm91bmRyeS1jbGllbnQvc3JjXFxhcHBcXGZvdW5kcnlcXG9yZGVyXFxjb3N0aW5nXFxjb3N0aW5nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWSxFQUFBOztBQUVkO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtFQUNsQiw0Q0FBNEMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvb3JkZXIvY29zdGluZy9jb3N0aW5nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lcntcclxuICB3aWR0aDogODAwcHg7XHJcbn1cclxuLmV4YW1wbGUtZnVsbC13aWR0aCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {Product} from '../../product/product';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport {Order} from '../order';\r\nimport {OrderService} from '../order.service';\r\n@Component({\r\n  selector: 'app-costing',\r\n  templateUrl: './costing.component.html',\r\n  styleUrls: ['./costing.component.scss']\r\n})\r\nexport class CostingComponent implements OnInit {\r\n  public order: Order;\r\n  constructor(public dialogRef: MatDialogRef<CostingComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private orderService: OrderService) { }\r\n\r\n  ngOnInit() {\r\n    this.order = this.data.order;\r\n  }\r\n\r\n  costCal(partCost: number) {\r\n    this.order.product.totalCost = partCost * this.order.quantity;\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  orders() {\r\n    this.order.orderDate = new Date();\r\n    this.orderService.saveOrder(this.order).subscribe((data) => {\r\n        console.log(data.product);\r\n        this.dialogRef.close(data.product);\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1 mat-dialog-title>New Part Id</h1>\\r\\n  <div mat-dialog-content>\\r\\n    <form>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput placeholder=\\\"part Id\\\" name=\\\"partId\\\" [(ngModel)]=\\\"partId\\\" />\\r\\n      </mat-form-field>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div mat-dialog-actions>\\r\\n    <button mat-raised-button color=\\\"accent\\\" style=\\\"float: right\\\" (click)=\\\"confirm()\\\">\\r\\n      Submit\\r\\n    </button>\\r\\n    <button mat-raised-button color=\\\"accent\\\" style=\\\"float: right\\\" (click)=\\\"onNoClick()\\\">Close</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".example-full-width {\\n  width: 100%;\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9vcmRlci9uZXctb3JkZXIvRTpcXFZwX1dTXFxmb3VuZHJ5LWNsaWVudC9zcmNcXGFwcFxcZm91bmRyeVxcb3JkZXJcXG5ldy1vcmRlclxcbmV3LW9yZGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtFQUNsQiw0Q0FBNEMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvb3JkZXIvbmV3LW9yZGVyL25ldy1vcmRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuLmV4YW1wbGUtZnVsbC13aWR0aCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {Product} from '../../product/product';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-new-order',\r\n  templateUrl: './new-order.component.html',\r\n  styleUrls: ['./new-order.component.scss']\r\n})\r\nexport class NewOrderComponent implements OnInit {\r\n\r\n  public partId;\r\n  constructor(public dialogRef: MatDialogRef<NewOrderComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  confirm() {\r\n    this.dialogRef.close(this.partId);\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {OrderComponent} from './order.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrderComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrderRoutingModule {}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <form #formControl=\\\"ngForm\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-8 col-md-12 col-sm-12\\\" style=\\\"margin-top: 30px;\\\">\\r\\n        <mat-card class=\\\"example-card\\\">\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>\\r\\n              <mat-card class=\\\"example-card1\\\">\\r\\n                <mat-card-header>\\r\\n                  <mat-card-title>Product Details</mat-card-title>\\r\\n                </mat-card-header>\\r\\n              </mat-card>\\r\\n            </mat-card-title>\\r\\n          </mat-card-header>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input type=\\\"text\\\" placeholder=\\\"Customer Name\\\" appStringValidation=\\\"words\\\" aria-label=\\\"State\\\"\\r\\n                  [maxlength]=\\\"25\\\" name=\\\"customerName\\\" [(ngModel)]=\\\"order.customer.customerName\\\" matInput [formControl]=\\\"customerCtrl\\\"\\r\\n                  [matAutocomplete]=\\\"auto\\\" required />\\r\\n                <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectCustomer($event.option.value)\\\">\\r\\n                  <mat-option *ngFor=\\\"let state of customerStates | async\\\" [value]=\\\"state.customerName\\\">\\r\\n                    <span>{{ state.customerName }}</span>\\r\\n                  </mat-option>\\r\\n                </mat-autocomplete>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Product Name\\\" aria-label=\\\"State\\\" [maxlength]=\\\"25\\\" name=\\\"productName\\\"\\r\\n                  [(ngModel)]=\\\"order.product.productName\\\" [matAutocomplete]=\\\"auto1\\\" [formControl]=\\\"productCtrl\\\"\\r\\n                  required />\\r\\n                <mat-autocomplete autoActiveFirstOption #auto1=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectproduct($event.option.value)\\\">\\r\\n                  <mat-option *ngFor=\\\"let state of productStates | async\\\" [value]=\\\"state.productName\\\">\\r\\n                    <span>{{ state.productName }}</span>\\r\\n                  </mat-option>\\r\\n                </mat-autocomplete>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Part Type\\\" aria-label=\\\"State\\\" [maxlength]=\\\"20\\\" name=\\\"partType\\\" [(ngModel)]=\\\"order.product.partType\\\"\\r\\n                  [matAutocomplete]=\\\"auto2\\\" [formControl]=\\\"partTypeCtrl\\\" />\\r\\n                <mat-autocomplete autoActiveFirstOption #auto2=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectPartType()\\\">\\r\\n                  <mat-option *ngFor=\\\"let state of partTypeStates | async\\\" [value]=\\\"state.partType\\\">\\r\\n                    <span>{{ state.partType }}</span>\\r\\n                  </mat-option>\\r\\n                </mat-autocomplete>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Part Sub Type\\\" aria-label=\\\"State\\\" [maxlength]=\\\"20\\\" name=\\\"partSubType\\\"\\r\\n                  [(ngModel)]=\\\"order.product.partSubType\\\" [matAutocomplete]=\\\"auto3\\\" [formControl]=\\\"partSubTypeCtrl\\\" />\\r\\n                <mat-autocomplete autoActiveFirstOption #auto3=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectPartSubType()\\\">\\r\\n                  <mat-option *ngFor=\\\"let state of partSubTypeStates | async\\\" [value]=\\\"state.partSubType\\\">\\r\\n                    <span>{{ state.partSubType }}</span>\\r\\n                  </mat-option>\\r\\n                </mat-autocomplete>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input type=\\\"text\\\" placeholder=\\\"Part Id\\\" aria-label=\\\"State\\\" [maxlength]=\\\"25\\\" name=\\\"partId\\\" [(ngModel)]=\\\"order.product.partId\\\"\\r\\n                  matInput [formControl]=\\\"partIdCtrl\\\" [matAutocomplete]=\\\"auto4\\\" required />\\r\\n                <mat-autocomplete autoActiveFirstOption #auto4=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectpartId($event.option.value)\\\">\\r\\n                  <mat-option *ngFor=\\\"let state of partIdStates | async\\\" [value]=\\\"state.partId\\\">\\r\\n                    <span>{{ state.partId }}</span>\\r\\n                  </mat-option>\\r\\n                </mat-autocomplete>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-4 col-md-12 col-sm-12\\\" style=\\\"margin-top: 30px;\\\">\\r\\n        <mat-card id=\\\"image\\\">\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>\\r\\n              <mat-card class=\\\"example-card1\\\">\\r\\n                <mat-card-header>\\r\\n                  <mat-card-title>Image</mat-card-title>\\r\\n                </mat-card-header>\\r\\n              </mat-card>\\r\\n            </mat-card-title>\\r\\n          </mat-card-header>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"!order.product._id\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n              <canvas #mycanvas width=\\\"80\\\" height=\\\"80\\\"></canvas>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n              <canvas #mycanvas2 width=\\\"80\\\" height=\\\"80\\\"></canvas>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"order.product._id\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n              <img src=\\\"http://52.26.246.107:3000/api/uploads/{{order.product.patternImage}}\\\" width=\\\"150\\\" height=\\\"100\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n              <img src=\\\"http://52.26.246.107:3000/api/uploads/{{order.product.MethodImage}}\\\" width=\\\"150\\\" height=\\\"100\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-4 col-md-12 col-sm-12\\\">\\r\\n              <input type=\\\"file\\\" class=\\\"btn\\\" id=\\\"imageShow\\\" placeholder=\\\"Pattern Image\\\" (change)=\\\"preview1($event)\\\"\\r\\n                accept=\\\"image/*\\\" multiple />\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-4 col-md-12 col-sm-12\\\">\\r\\n              <input type=\\\"file\\\" id=\\\"imageShow\\\" placeholder=\\\"Pattern Image\\\" (change)=\\\"preview2($event)\\\" accept=\\\"image/*\\\"\\r\\n                multiple />\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-8 col-md-12 col-sm-12\\\" style=\\\"margin-top: 40px;\\\">\\r\\n        <mat-card id=\\\"pattern\\\">\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>\\r\\n              <mat-card class=\\\"example-card1\\\">\\r\\n                <mat-card-header>\\r\\n                  <mat-card-title>Pattern Classification</mat-card-title>\\r\\n                </mat-card-header>\\r\\n              </mat-card>\\r\\n            </mat-card-title>\\r\\n          </mat-card-header>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <mat-select placeholder=\\\"Mold Type\\\" name=\\\"moldType\\\" [(ngModel)]=\\\"order.product.moldType\\\" required>\\r\\n                  <mat-option *ngFor=\\\"let masters of master\\\" [value]=\\\"masters.moldType\\\">{{masters.moldType}}</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Mold Weight (kg)\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"moldWeight\\\"\\r\\n                  [(ngModel)]=\\\"order.product.moldWeight\\\" (ngModelChange)=\\\"newProduct()\\\" required />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Cast Weight (kg)\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"castWeight\\\"\\r\\n                  [(ngModel)]=\\\"order.product.partWeight\\\" (ngModelChange)=\\\"newProduct()\\\" required />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"No Of cores (nos)\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"noOfCores\\\"\\r\\n                  [(ngModel)]=\\\"order.product.noOfCores\\\" (ngModelChange)=\\\"newProduct()\\\" required />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Core Weight (kg)\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"coreWeight\\\"\\r\\n                  [(ngModel)]=\\\"order.product.coreWeight\\\" (ngModelChange)=\\\"newProduct()\\\" required />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Min Wall Thickness (mm)\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"minWallThickness\\\"\\r\\n                  [(ngModel)]=\\\"order.product.minWallThickness\\\" (ngModelChange)=\\\"newProduct()\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Max Wall Thickness (mm)\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"maxWallThickness\\\"\\r\\n                  [(ngModel)]=\\\"order.product.maxWallThickness\\\" (ngModelChange)=\\\"newProduct()\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"No of Cavity (nos)\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"noOfCavity\\\"\\r\\n                  [(ngModel)]=\\\"order.product.noOfCavity\\\" (ngModelChange)=\\\"newProduct()\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"CoreHolesOfDiameter(mm)\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"coleHoleDiameters\\\"\\r\\n                  [(ngModel)]=\\\"order.product.coleHoleDiameters\\\" (ngModelChange)=\\\"newProduct()\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <mat-select placeholder=\\\"Shape Complexity\\\" name=\\\"shapecomplexity\\\" [(ngModel)]=\\\"order.product.shapecomplexity\\\"\\r\\n                  (ngModelChange)=\\\"newProduct()\\\">\\r\\n                  <mat-option value=\\\"1\\\">1</mat-option>\\r\\n                  <mat-option value=\\\"2\\\">2</mat-option>\\r\\n                  <mat-option value=\\\"3\\\">3</mat-option>\\r\\n                  <mat-option value=\\\"4\\\">4</mat-option>\\r\\n                  <mat-option value=\\\"5\\\">5</mat-option>\\r\\n                  <mat-option value=\\\"6\\\">6</mat-option>\\r\\n                  <mat-option value=\\\"7\\\">7</mat-option>\\r\\n                  <mat-option value=\\\"8\\\">8</mat-option>\\r\\n                  <mat-option value=\\\"9\\\">9</mat-option>\\r\\n                  <mat-option value=\\\"10\\\">10</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Surface Roughness (mm)\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"surfaceRoughness\\\"\\r\\n                  [(ngModel)]=\\\"order.product.surfaceRoughness\\\" (ngModelChange)=\\\"newProduct()\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Tolerance (wt)\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"talerance\\\"\\r\\n                  [(ngModel)]=\\\"order.product.tolerance\\\" (ngModelChange)=\\\"newProduct()\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Max Cast Length (mm)\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"maxCostLength\\\"\\r\\n                  [(ngModel)]=\\\"order.product.maxCostLength\\\" (ngModelChange)=\\\"newProduct()\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Material Grade\\\" [maxlength]=\\\"10\\\" name=\\\"materialGrade\\\" [(ngModel)]=\\\"order.product.materialGrade\\\"\\r\\n                  (ngModelChange)=\\\"newProduct()\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-4 col-md-12 col-sm-12\\\" style=\\\"margin-top: 40px;\\\">\\r\\n        <mat-card>\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>\\r\\n              <mat-card class=\\\"example-card1\\\">\\r\\n                <mat-card-header>\\r\\n                  <mat-card-title>Production details</mat-card-title>\\r\\n                </mat-card-header>\\r\\n              </mat-card>\\r\\n            </mat-card-title>\\r\\n          </mat-card-header>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Quantity\\\" name=\\\"quantity\\\" [maxlength]=\\\"10\\\" appNumberValidation [(ngModel)]=\\\"order.quantity\\\"\\r\\n                  required />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Delivery Date\\\" [min]=\\\"minDate\\\" name=\\\"deliveryDate\\\"\\r\\n                  [(ngModel)]=\\\"order.deliveryDate\\\" required readonly />\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #picker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <mat-select placeholder=\\\"Painting Type\\\" name=\\\"paintingType\\\" [(ngModel)]=\\\"order.paintingType\\\" required>\\r\\n                  <mat-option *ngFor=\\\"let paint of paintingMaster\\\" [value]=\\\"paint.paintingType\\\">{{paint.paintingType}}</mat-option>\\r\\n                  <mat-option value=\\\"NO\\\">No</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-8 col-md-12 col-sm-12\\\" style=\\\"margin-top: 40px;\\\">\\r\\n        <mat-card id=\\\"methoding\\\">\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>\\r\\n              <mat-card class=\\\"example-card1\\\">\\r\\n                <mat-card-header>\\r\\n                  <mat-card-title>Methoding Details</mat-card-title>\\r\\n                </mat-card-header>\\r\\n              </mat-card>\\r\\n            </mat-card-title>\\r\\n          </mat-card-header>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Runner Width\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"runnerWidth\\\"\\r\\n                  [(ngModel)]=\\\"order.product.runnerWidth\\\" (ngModelChange)=\\\"newProduct()\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Runner Diameter\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"runnerDiameter\\\"\\r\\n                  [(ngModel)]=\\\"order.product.runnerDiameter\\\" (ngModelChange)=\\\"newProduct()\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"No Of Gates (nos)\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"noOfGates\\\"\\r\\n                  [(ngModel)]=\\\"order.product.noOfGates\\\" (ngModelChange)=\\\"newProduct()\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Raiser Height\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"raiserHeight\\\"\\r\\n                  [(ngModel)]=\\\"order.product.raiserHeight\\\" (ngModelChange)=\\\"newProduct()\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Raiser Diameter\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"raiserDiameter\\\"\\r\\n                  [(ngModel)]=\\\"order.product.raiserDiameter\\\" (ngModelChange)=\\\"newProduct()\\\" />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n              <button mat-raised-button color=\\\"accent\\\" matTooltip=\\\"Cost Calculation\\\" style=\\\"margin-top: 20px;\\\" (click)=\\\"costEstimations()\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\">\\r\\n                Cost Calculation\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-4 col-md-12 col-sm-12\\\" style=\\\"margin-top: 40px;\\\">\\r\\n        <div *ngIf=\\\"this.costEstimation == true\\\">\\r\\n          <mat-card id=\\\"cost\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>\\r\\n                <mat-card class=\\\"example-card1\\\">\\r\\n                  <mat-card-header>\\r\\n                    <mat-card-title>Costing Details</mat-card-title>\\r\\n                  </mat-card-header>\\r\\n                </mat-card>\\r\\n              </mat-card-title>\\r\\n            </mat-card-header>\\r\\n            <mat-card-content>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <h1>Approx Cost is Rs:</h1>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\"></div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <h6>Type Of Sand Moundling:{{order.product.moldType}} </h6>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <h6>Approx Consumables Cost:</h6>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <button mat-raised-button color=\\\"accent\\\" matTooltip=\\\"Place Order\\\" style=\\\"float: right\\\" (click)=\\\"orders(formControl)\\\">\\r\\n                    Place Order\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n<notifier-container></notifier-container>\\r\\n\"","module.exports = \"h3 {\\n  margin-top: 30px;\\n  font-size: 20px;\\n  font-family: 'Lora', serif;\\n  text-align: center;\\n  color: #f50057; }\\n\\n.example-full-width {\\n  width: 100%;\\n  text-align: center;\\n  font-family: 'Lora', serif; }\\n\\nh6 {\\n  font-size: 18px;\\n  font-family: 'Lora', serif;\\n  text-align: left; }\\n\\nh1 {\\n  font-size: 25px;\\n  font-family: 'Lora', serif;\\n  text-align: left; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -20px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9vcmRlci9FOlxcVnBfV1NcXGZvdW5kcnktY2xpZW50L3NyY1xcYXBwXFxmb3VuZHJ5XFxvcmRlclxcb3JkZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLDBCQUEwQjtFQUMxQixrQkFBa0I7RUFDbEIsY0FBYSxFQUFBOztBQUdmO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtFQUNsQiwwQkFBMEIsRUFBQTs7QUFLNUI7RUFDRSxlQUFlO0VBQ2YsMEJBQTBCO0VBQzFCLGdCQUFnQixFQUFBOztBQUVsQjtFQUNFLGVBQWU7RUFDZiwwQkFBMEI7RUFDMUIsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsZ0NBQWdDO0VBQ2hDLDRCQUE0QjtFQUM1Qiw2QkFBNkI7RUFDN0IseUJBQXlCO0VBQ3pCLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixZQUFZO0VBQ1osMEJBQTBCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9mb3VuZHJ5L29yZGVyL29yZGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDN7XHJcbiAgbWFyZ2luLXRvcDogMzBweDtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGNvbG9yOiNmNTAwNTc7XHJcbn1cclxuXHJcbi5leGFtcGxlLWZ1bGwtd2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxufVxyXG5cclxuXHJcblxyXG5oNntcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5oMXtcclxuICBmb250LXNpemU6IDI1cHg7XHJcbiAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5cclxuLmV4YW1wbGUtY2FyZDF7XHJcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDEwcHg7XHJcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMTBweDtcclxuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjczMzc4O1xyXG4gIHBhZGRpbmctdG9wOiAxcHg7XHJcbiAgbWFyZ2luLXRvcDogLTQwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IC0yMHB4O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBoZWlnaHQ6IDM1cHg7XHJcbiAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbn1cclxuXHJcbiJdfQ== */\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { FormControl, NgForm } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Product } from '../product/product';\r\nimport { Customer } from '../customer/customer';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { CostingComponent } from './costing/costing.component';\r\nimport { Order } from './order';\r\nimport { CustomerService } from '../customer/customer.service';\r\nimport { ProductService } from '../product/product.service';\r\nimport { OrderService } from './order.service';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { NewOrderComponent } from './new-order/new-order.component';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { MasterService } from '../master/master.service';\r\nimport { Master } from '../master/master';\r\nimport { ProductionMasterService } from '../master/production-master/production-master.service';\r\nimport { PaintingMaster } from '../master/production-master/painting-master/painting-master';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ValidationService } from '../validation/validation-service';\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.scss']\r\n})\r\n\r\n\r\nexport class OrderComponent implements OnInit, OnDestroy {\r\n\r\n  public customer: Customer[];\r\n  public products: Product[];\r\n  public product: Product;\r\n  public master: Master[];\r\n  public paintingMaster: PaintingMaster[];\r\n  filesToUpload: Array<File> = [];\r\n  changePartId = false;\r\n  date = new Date();\r\n  public url;\r\n  context: CanvasRenderingContext2D;\r\n  public costEstimation = false;\r\n  public type;\r\n  navigationSubscription;\r\n  @ViewChild('mycanvas') mycanvas;\r\n  @ViewChild('mycanvas2') mycanvas2;\r\n  userForm: any;\r\n  customerCtrl = new FormControl();\r\n  customerStates: Observable<Customer[]>;\r\n  productCtrl = new FormControl();\r\n  productStates: Observable<Product[]>;\r\n  partIdCtrl = new FormControl();\r\n  partIdStates: Observable<Product[]>;\r\n  partTypeCtrl = new FormControl();\r\n  partTypeStates: Observable<Product[]>;\r\n  partSubTypeCtrl = new FormControl();\r\n  partSubTypeStates: Observable<Product[]>;\r\n  private notifier: NotifierService;\r\n  public currentUser;\r\n  public partId;\r\n  minDate = new Date();\r\n\r\n  order: Order = {\r\n    _id: '',\r\n    customer: { _id: '', customerName: '', mobileNo: '', emailId: '', address: '', createdBy: '', modifiedBy: '' },\r\n    product: {\r\n      _id: '', productName: '', partType: '', partSubType: '', partId: '', partWeight: undefined, patternImage: '', MethodImage: '',\r\n      moldType: '', moldWeight: undefined, coreWeight: undefined, castWeight: undefined, maxWallThickness: '', minWallThickness: '',\r\n      noOfCavity: undefined, noOfCores: undefined, coleHoleDiameters: '', shapecomplexity: undefined, surfaceRoughness: '',\r\n      tolerance: undefined, maxCostLength: '', materialGrade: '', runnerWidth: '', runnerDiameter: '', noOfGates: undefined,\r\n      raiserHeight: '', raiserDiameter: '', partCost: undefined, quantity: undefined, totalWeight: undefined, totalCost: undefined,\r\n       createdBy: '', modifiedBy: ''\r\n    }, quantity: undefined, paintingType: '', deliveryDate: undefined, orderDate: undefined, orderId: 0, createdBy: '', modifiedBy: ''\r\n  };\r\n\r\n  constructor(private productService: ProductService, private dialog: MatDialog, private productionMasterService: ProductionMasterService,\r\n    private customerService: CustomerService, private orderService: OrderService, private formBuilder: FormBuilder,\r\n    notifier: NotifierService, private router: Router, private masterService: MasterService) {\r\n\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      // If it is a NavigationEnd event re-initalise the component\r\n      if (e instanceof NavigationEnd) {\r\n        this.initialiseInvites();\r\n      }\r\n    });\r\n    this.notifier = notifier;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = localStorage.getItem('user');\r\n    this.getCustomer();\r\n    this.getOrderproduct();\r\n    this.getMoldType();\r\n    this.getPaintingType();\r\n  }\r\n  initialiseInvites() {\r\n    // Set default values and re-fetch any data you need.\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.navigationSubscription) {\r\n      this.navigationSubscription.unsubscribe();\r\n    }\r\n  }\r\n  getCustomer() {\r\n    this.customerService.getCustomers().subscribe(customer => {\r\n      this.customer = customer;\r\n      this.customerStates = this.customerCtrl.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(state => state ? this._filterCustomer(state) : this.customer.slice())\r\n        );\r\n    });\r\n  }\r\n\r\n  getMoldType() {\r\n    this.masterService.getMoldingMaster().subscribe((data) => {\r\n      this.master = data;\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  getPaintingType() {\r\n    this.type = 'Painting';\r\n    this.productionMasterService.getMachineDetailsByType(this.type).subscribe((data) => {\r\n      this.paintingMaster = data;\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  private _filterCustomer(value: String): Customer[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.customer.filter(state => state.customerName.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n  getOrderproduct() {\r\n    this.productService.getProducts().subscribe((product) => {\r\n      this.products = product;\r\n      this.productStates = this.productCtrl.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(state => state ? this._filterproduct(state) : this.products.slice())\r\n        );\r\n      this.partIdStates = this.partIdCtrl.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(state => state ? this._filterpartId(state) : this.products.slice())\r\n        );\r\n    });\r\n  }\r\n\r\n  private _filterproduct(value: String): Product[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.products.filter(state => state.productName.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n  private _filterpartId(value: String): Product[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.products.filter(state => state.partId.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n  private _filterpartType(value: String): Product[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.products.filter(state => state.productName.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n  private _filterpartSubType(value: String): Product[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.products.filter(state => state.partId.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n  preview1(e: any): void {\r\n    this.filesToUpload = <Array<File>>e.target.files;\r\n    const canvas = this.mycanvas.nativeElement;\r\n    const context = canvas.getContext('2d');\r\n    context.clearRect(0, 0, 80, 80);\r\n    const render = new FileReader();\r\n    render.onload = function (event: any) {\r\n      const img = new Image();\r\n      img.onload = function () {\r\n        canvas.width = img.width * 0.2;\r\n        canvas.height = img.height * 0.2;\r\n        context.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n      };\r\n      img.src = event.target.result;\r\n    };\r\n    render.readAsDataURL(e.target.files[0]);\r\n  }\r\n\r\n  preview2(e: any): void {\r\n    this.filesToUpload = <Array<File>>e.target.files;\r\n    const canvas = this.mycanvas2.nativeElement;\r\n    const context = canvas.getContext('2d');\r\n    context.clearRect(0, 0, 80, 80);\r\n    const render = new FileReader();\r\n    render.onload = function (event: any) {\r\n      const img = new Image();\r\n      img.onload = function () {\r\n        canvas.width = img.width * 0.2;\r\n        canvas.height = img.height * 0.2;\r\n        context.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n      };\r\n      img.src = event.target.result;\r\n    };\r\n    render.readAsDataURL(e.target.files[0]);\r\n  }\r\n\r\n  selectproduct(productName: String) {\r\n    this.productService.getProductName(productName).subscribe((data) => {\r\n      this.products = data;\r\n      this.partIdStates = this.partIdCtrl.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(state => state ? this._filterpartId(state) : this.products.slice())\r\n        );\r\n      this.partTypeStates = this.partIdCtrl.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(state => state ? this._filterpartType(state) : this.products.slice())\r\n        );\r\n      this.partSubTypeStates = this.partIdCtrl.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(state => state ? this._filterpartSubType(state) : this.products.slice())\r\n        );\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  selectPartType() {\r\n    this.productService.getPartType(this.order.product).subscribe((data) => {\r\n      this.products = data;\r\n      console.log('part type', this.products);\r\n      this.partIdStates = this.partIdCtrl.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(state => state ? this._filterpartId(state) : this.products.slice())\r\n        );\r\n      this.partSubTypeStates = this.partIdCtrl.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(state => state ? this._filterpartSubType(state) : this.products.slice())\r\n        );\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  selectPartSubType() {\r\n    this.productService.getPartSubType(this.order.product).subscribe((data) => {\r\n      this.products = data;\r\n      console.log('part sub type', this.products);\r\n      this.partIdStates = this.partIdCtrl.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(state => state ? this._filterpartId(state) : this.products.slice())\r\n        );\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  selectpartId(partId: String) {\r\n    this.products.forEach(res => {\r\n      if (partId === res.partId) {\r\n        this.order.product = res;\r\n        this.partId = res.partId;\r\n      }\r\n    });\r\n  }\r\n\r\n  selectCustomer(customerName: String) {\r\n    this.customer.forEach(res => {\r\n      if (customerName === res.customerName) {\r\n        this.order.customer = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  newProduct() {\r\n    this.changePartId = true;\r\n  }\r\n\r\n  orders(f: NgForm): void {\r\n    console.log(this.order);\r\n    this.costcalculation();\r\n    this.checkPartId(f);\r\n  }\r\n  costcalculation() {\r\n    const totalWeight = this.order.product.partWeight * this.order.quantity;\r\n    this.order.product.totalWeight = totalWeight;\r\n    this.order.product.quantity = this.order.quantity;\r\n    this.order.product.totalCost = this.order.product.partCost * this.order.quantity;\r\n  }\r\n\r\n  checkPartId(f: NgForm) {\r\n    if (this.changePartId === true && this.order.product._id && this.partId === this.order.product.partId) {\r\n      const dialogRef = this.dialog.open(NewOrderComponent, {\r\n        data: {}\r\n      });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (this.partId !== result) {\r\n          this.order.product._id = '';\r\n        }\r\n        this.confirmOrder(f);\r\n      });\r\n    } else if (this.partId !== this.order.product.partId && this.order.product._id) {\r\n      this.order.product._id = '';\r\n      this.confirmOrder(f);\r\n    } else {\r\n      console.log('No Change');\r\n      this.confirmOrder(f);\r\n    }\r\n  }\r\n\r\n  confirmOrder(f: NgForm) {\r\n    this.order.product.createdBy = this.currentUser;\r\n    this.order.customer.createdBy = this.currentUser;\r\n    this.order.createdBy = this.currentUser;\r\n    const formData: any = new FormData();\r\n    const files: Array<File> = this.filesToUpload;\r\n    for (let i = 0; i < files.length; i++) {\r\n      formData.append('uploads[]', files[i], files[i]['name']);\r\n    }\r\n    const productId = this.order.product._id;\r\n    const dialogRef = this.dialog.open(CostingComponent, {\r\n      data: { order: this.order }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.notifier.notify('success', 'Order Successfully');\r\n      if (result) {\r\n\r\n        this.costEstimation = false;\r\n      }\r\n      if (productId === result) {\r\n      } else {\r\n        this.orderService.uploadImage(formData, result).subscribe((res) => {\r\n          console.log(res);\r\n        }, (error) => {\r\n          console.log(error);\r\n        });\r\n      }\r\n      this.getCustomer();\r\n      this.getOrderproduct();\r\n      this.order.customer.customerName = '';\r\n      this.order.product.partId = '';\r\n      this.order.product.productName = '';\r\n      this.order.product.partType = '';\r\n      this.order.product.partSubType = '';\r\n      this.order.product.partCost = 0;\r\n      this.order.product.totalCost = 0;\r\n      f.resetForm();\r\n    });\r\n  }\r\n\r\n  costEstimations() {\r\n    this.costEstimation = true;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OrderComponent } from './order.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {OrderRoutingModule} from './order-routing.module';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MaterialModule} from '../../app.module';\r\nimport { CostingComponent } from './costing/costing.component';\r\nimport {OrderService} from './order.service';\r\nimport {HttpModule} from '@angular/http';\r\nimport {CustomerService} from '../customer/customer.service';\r\nimport {ProductService} from '../product/product.service';\r\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\r\nimport { NewOrderComponent } from './new-order/new-order.component';\r\nimport {NgbTimepickerModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {MasterService} from '../master/master.service';\r\nimport { FoundryModule } from '../foundry.module';\r\nimport {ProductionMasterService} from '../master/production-master/production-master.service';\r\nconst customNotifierOptions: NotifierOptions = {\r\n  position: {\r\n    horizontal: {\r\n      position: 'middle',\r\n      distance: 12\r\n    },\r\n    vertical: {\r\n      position: 'top',\r\n      distance: 50,\r\n      gap: 10\r\n    }\r\n  },\r\n  theme: 'material',\r\n  behaviour: {\r\n    autoHide: 1000,\r\n    onClick: 'hide',\r\n    onMouseover: 'pauseAutoHide',\r\n    showDismissButton: true,\r\n    stacking: 4\r\n  },\r\n  animations: {\r\n    enabled: true,\r\n    show: {\r\n      preset: 'slide',\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    hide: {\r\n      preset: 'fade',\r\n      speed: 300,\r\n      easing: 'ease',\r\n      offset: 50\r\n    },\r\n    shift: {\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    overlap: 10\r\n  }\r\n};\r\n\r\n@NgModule({\r\n  declarations: [OrderComponent, CostingComponent, NewOrderComponent],\r\n  imports: [\r\n    CommonModule, OrderRoutingModule, NgbTimepickerModule,\r\n    FormsModule, ReactiveFormsModule, MaterialModule, FoundryModule,\r\n    HttpClientModule, HttpModule, NotifierModule.withConfig(customNotifierOptions)\r\n  ],\r\n  entryComponents: [\r\n    CostingComponent, NewOrderComponent\r\n  ],\r\n  providers: [OrderService, CustomerService, ProductService, MasterService, ProductionMasterService]\r\n})\r\nexport class OrderModule { }\r\n"],"sourceRoot":""}
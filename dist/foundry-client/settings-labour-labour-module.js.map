{"version":3,"sources":["webpack:///./src/app/foundry/settings/labour/labour-routing.module.ts","webpack:///./src/app/foundry/settings/labour/labour.component.html","webpack:///./src/app/foundry/settings/labour/labour.component.scss","webpack:///./src/app/foundry/settings/labour/labour.component.ts","webpack:///./src/app/foundry/settings/labour/labour.module.ts","webpack:///./src/app/foundry/settings/labour/labour.service.ts","webpack:///./src/app/foundry/settings/labour/labour.ts","webpack:///./src/app/foundry/settings/labour/lpg.ts"],"names":[],"mappings":"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","file":"settings-labour-labour-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LabourComponent} from '../labour/labour.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LabourComponent,\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LabourRoutingModule { }\r\n","module.exports = \"<mat-card class=\\\"card\\\" style=\\\"margin-top: 20px;margin-left: 150px;margin-right: 100px;\\\">\\r\\n  <mat-card-header>\\r\\n    <div class=\\\"row\\\">\\r\\n      <mat-card-title>Labour Master</mat-card-title>\\r\\n      <div class=\\\"col-sm-4\\\"></div>\\r\\n    </div>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-3\\\">\\r\\n        <h5>Activity Name</h5>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-3\\\">\\r\\n        <h5>LabourEmploymentType</h5>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"labour.labourEmpType == 'CONTRACT'\\\" class=\\\"col-sm-3\\\">\\r\\n        <h5>WorkingType</h5>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"labour.workingType == 'KG'\\\" class=\\\"col-sm-3\\\">\\r\\n        <h5>Rate/Kg</h5>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"labour.workingType == 'HOUR'\\\" class=\\\"col-sm-2\\\">\\r\\n        <h5>Rate/Hour</h5>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"labour.workingType == 'HOUR'\\\" class=\\\"col-sm-1\\\">\\r\\n          <h5>OtHour</h5>\\r\\n        </div>\\r\\n      <div *ngIf=\\\"labour.labourEmpType == 'PERMENANT'\\\" class=\\\"col-sm-3\\\">\\r\\n        <h5>EmployeeName</h5>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <mat-select placeholder=\\\"Activity Name\\\" name=\\\"activityname\\\" [(ngModel)]=\\\"labour.activityName\\\">\\r\\n            <mat-option value=\\\"MOULDING-HM\\\">Moulding-HM</mat-option>\\r\\n            <mat-option value=\\\"MOULDING-MM\\\">Moulding-MM</mat-option>\\r\\n            <mat-option value=\\\"MELTING\\\">Melting</mat-option>\\r\\n            <mat-option value=\\\"KNOCKOUT\\\">Knockout</mat-option>\\r\\n            <mat-option value=\\\"SHOTBLASTING\\\">ShotBlasting</mat-option>\\r\\n            <mat-option value=\\\"FETTLING\\\">Fettling</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <mat-select placeholder=\\\"EmploymentType\\\" name=\\\"employmentType\\\" [(ngModel)]=\\\"labour.labourEmpType\\\">\\r\\n            <mat-option value=\\\"CONTRACT\\\">Contract</mat-option>\\r\\n            <mat-option value=\\\"PERMENANT\\\">Permanant</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"labour.labourEmpType == 'CONTRACT'\\\" class=\\\"col-sm-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <mat-select placeholder=\\\"workingType\\\" name=\\\"workingType\\\" [(ngModel)]=\\\"labour.workingType\\\">\\r\\n            <mat-option value=\\\"KG\\\">kg</mat-option>\\r\\n            <mat-option value=\\\"HOUR\\\">hour</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"labour.workingType == 'KG'\\\" class=\\\"col-sm-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput type=\\\"text\\\" placeholder=\\\"Rate/Kg\\\" name=\\\"contract/kg\\\" [(ngModel)]=\\\"labour.ratePerKg\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"labour.workingType == 'HOUR'\\\" class=\\\"col-sm-2\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput type=\\\"text\\\" placeholder=\\\"Rate/Hour\\\" name=\\\"contract/hour\\\" [(ngModel)]=\\\"labour.ratePerHour\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"labour.workingType == 'HOUR'\\\" class=\\\"col-sm-1\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput type=\\\"text\\\" placeholder=\\\"OtHour\\\" name=\\\"contract/hour\\\" [(ngModel)]=\\\"labour.otHour\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      <div *ngIf=\\\"labour.labourEmpType == 'PERMENANT'\\\" class=\\\"col-sm-3\\\">\\r\\n        <div *ngFor=\\\"let options of Option; let in=index;\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput type=\\\"text\\\" placeholder=\\\"EmployeeName\\\" name=\\\"employeeName\\\" [(ngModel)]=\\\"Option[in].employeeName\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"labour.labourEmpType == 'PERMENANT'\\\" class=\\\"col-sm-3\\\">\\r\\n          <button mat-icon-button (click)=\\\"add(in)\\\">\\r\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\"></div>\\r\\n      <div class=\\\"col-sm-4\\\"></div>\\r\\n      <div class=\\\"col-sm-2\\\"></div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"saveLabour()\\\">Save</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<mat-card class=\\\"card\\\" style=\\\"margin-top: 20px;margin-left: 150px;margin-right: 100px;\\\">\\r\\n  <mat-card-header>\\r\\n    <div class=\\\"row\\\">\\r\\n      <mat-card-title>LPG Master</mat-card-title>\\r\\n      <div class=\\\"col-sm-4\\\"></div>\\r\\n    </div>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <h5>Activity Name</h5>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <h5>Hours</h5>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <mat-select placeholder=\\\"Activity Name\\\" name=\\\"activityname\\\" [(ngModel)]=\\\"lpg.activityName\\\">\\r\\n            <mat-option value=\\\"MELTING\\\">Melting</mat-option>\\r\\n            <mat-option value=\\\"SHOTBLASTING\\\">ShotBlasting</mat-option>\\r\\n            <mat-option value=\\\"FETTLING\\\">Fettling</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput type=\\\"text\\\" placeholder=\\\"hour\\\" name=\\\"hour\\\" [(ngModel)]=\\\"lpg.hour\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n          <button mat-raised-button color=\\\"accent\\\" (click)=\\\"saveLpg()\\\">Save</button>\\r\\n       </div>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<notifier-container></notifier-container>\\r\\n\"","module.exports = \".example-full-width {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9zZXR0aW5ncy9sYWJvdXIvRTpcXFZwX1dTXFxmb3VuZHJ5LWNsaWVudC9zcmNcXGFwcFxcZm91bmRyeVxcc2V0dGluZ3NcXGxhYm91clxcbGFib3VyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZm91bmRyeS9zZXR0aW5ncy9sYWJvdXIvbGFib3VyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtZnVsbC13aWR0aHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { LabourService } from '../labour/labour.service';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { Labour } from './labour';\r\nimport { Lpg } from './lpg';\r\n@Component({\r\n  selector: 'app-labour',\r\n  templateUrl: './labour.component.html',\r\n  styleUrls: ['./labour.component.scss']\r\n})\r\nexport class LabourComponent implements OnInit {\r\n  public labours: Labour[];\r\n  public labour: Labour;\r\n  private notifier: NotifierService;\r\n  public lpg:Lpg;\r\n\r\n  // displayedColumns: string[] = ['activityName', '', 'weight', 'symbol'];\r\n  Option = [{ employeeName: '' }];\r\n\r\n  constructor(public labourService: LabourService,notifierService: NotifierService) {\r\n    this.notifier = notifierService;\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.labour = new Labour();\r\n    this.lpg = new Lpg();\r\n    this.getLabours();\r\n\r\n  }\r\n\r\n  getLabours() {\r\n    this.labourService.getLabours().subscribe((data) => {\r\n      console.log('labour', data);\r\n      this.labours = data;\r\n    }, error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  saveLabour() {\r\n    console.log('this.Option.length',this.Option.length);\r\n    if(this.Option.length != 1){\r\n      this.Option.forEach(res =>{\r\n        this.labour.employeeName.push({\r\n        employeeName:res.employeeName\r\n      })\r\n    })\r\n    }\r\n    console.log('this.labour', this.labour);\r\n    this.labour.createdBy = localStorage.getItem('user');\r\n    this.labourService.saveLabour(this.labour).subscribe((data) => {\r\n      this.notifier.notify('success', 'Saved Successfully');\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  add(i: number) {\r\n    i = i + 1;\r\n    this.Option.push({ employeeName: '' });\r\n  }\r\n\r\n  saveLpg(){\r\n    this.lpg.createdBy = localStorage.getItem('user');\r\n    this.labourService.saveLpg(this.lpg).subscribe((data) =>{\r\n      console.log('lpg',data);\r\n    },error =>{\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LabourComponent } from './labour.component';\r\nimport { LabourRoutingModule} from './labour-routing.module';\r\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {MaterialModule} from '../../../app.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\r\n\r\nconst customNotifierOptions: NotifierOptions = {\r\n  position: {\r\n    horizontal: {\r\n      position: 'middle',\r\n      distance: 12\r\n    },\r\n    vertical: {\r\n      position: 'top',\r\n      distance: 50,\r\n      gap: 10\r\n    }\r\n  },\r\n  theme: 'material',\r\n  behaviour: {\r\n    autoHide: 1000,\r\n    onClick: 'hide',\r\n    onMouseover: 'pauseAutoHide',\r\n    showDismissButton: true,\r\n    stacking: 4\r\n  },\r\n  animations: {\r\n    enabled: true,\r\n    show: {\r\n      preset: 'slide',\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    hide: {\r\n      preset: 'fade',\r\n      speed: 300,\r\n      easing: 'ease',\r\n      offset: 50\r\n    },\r\n    shift: {\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    overlap: 10\r\n  }\r\n};\r\n\r\n@NgModule({\r\n  declarations: [LabourComponent],\r\n  imports: [\r\n    CommonModule,LabourRoutingModule,HttpClientModule,HttpModule,MaterialModule,\r\n    FormsModule,ReactiveFormsModule,NotifierModule.withConfig(customNotifierOptions)\r\n  ],\r\n  schemas:[CUSTOM_ELEMENTS_SCHEMA],\r\n\r\n})\r\nexport class LabourModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { RequestOptions, Headers, Http, Response } from '@angular/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { Labour } from './labour';\r\nimport { Lpg } from './lpg';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LabourService {\r\n\r\n  public baseUrl: String = 'api';\r\n\r\n  public headers = new Headers({ 'Content-Type': 'application/json' });\r\n\r\n  public options = new RequestOptions({ headers: this.headers });\r\n\r\n  constructor(public http: Http) { }\r\n\r\n  getLabours(){\r\n    return this.http.get(this.baseUrl +'/labours',this.options)\r\n    .pipe(map((response:Response) => response.json()),\r\n    catchError((error:any) =>{\r\n      return Observable.throw(error);\r\n    }))\r\n  }\r\n\r\n  saveLabour(labour:Labour) {\r\n    return this.http.post(this.baseUrl +'/labours',JSON.stringify(labour), this.options)\r\n    .pipe(map((response:Response) => response.json()),\r\n    catchError((error:any) =>{\r\n      return Observable.throw(error);\r\n    }))\r\n  }\r\n\r\n  updateLabour(labour:Labour){\r\n    return this.http.patch(this.baseUrl +'/labours',JSON.stringify(labour), this.options)\r\n    .pipe(map((response:Response) => response.json()),\r\n    catchError((error:any) =>{\r\n      return Observable.throw(error);\r\n    }))\r\n  }\r\n\r\n  saveLpg(lpg:Lpg){\r\n    return this.http.post(this.baseUrl +'/labours/lpg',JSON.stringify(lpg), this.options)\r\n    .pipe(map((response:Response) => response.json()),\r\n    catchError((error:any) =>{\r\n      return Observable.throw(error);\r\n    }))\r\n  }\r\n}\r\n","export class Labour {\r\n  _id:String;\r\n  activityName:String;\r\n  labourEmpType:String;\r\n  workingType:String;\r\n  ratePerKg :number;\r\n  ratePerHour:number;\r\n  otHour:number;\r\n  employeeName=[];\r\n  createdBy:String;\r\n  modifiedBy:String;\r\n\r\n}\r\n","export class Lpg{\r\n_id:String;\r\nactivityName:String;\r\nhour:number;\r\ncreatedBy:String;\r\n}\r\n"],"sourceRoot":""}
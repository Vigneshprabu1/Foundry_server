{"version":3,"sources":["webpack:///./src/app/foundry/settings/database/database-routing.module.ts","webpack:///./src/app/foundry/settings/database/database.component.html","webpack:///./src/app/foundry/settings/database/database.component.scss","webpack:///./src/app/foundry/settings/database/database.component.ts","webpack:///./src/app/foundry/settings/database/database.module.ts","webpack:///./src/app/foundry/settings/database/database.service.ts","webpack:///./src/app/foundry/settings/database/database.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAuC;AACc;AACI;AAEzD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAiB;KAC7B;CACF,CAAC;AAMF;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QAJjC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;ACflC,mtBAAmtB,qBAAqB,6JAA6J,4DAA4D,uDAAuD,yBAAyB,qvBAAqvB,sBAAsB,8nCAA8nC,sBAAsB,qKAAqK,qFAAqF,2DAA2D,2BAA2B,6I;;;;;;;;;;;ACAhwG,mCAAmC,iBAAiB,EAAE,qBAAqB,uBAAuB,cAAc,eAAe,gBAAgB,iBAAiB,EAAE,kBAAkB,uBAAuB,aAAa,gBAAgB,EAAE,QAAQ,iDAAiD,oBAAoB,EAAE,+CAA+C,mhC;;;;;;;;;;;;;;;;;;;ACAtT;AACZ;AACe;AAErD,IAAM,SAAS,GAAe;IAC5B,EAAE,cAAc,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE;IAC3F,EAAE,cAAc,EAAE,gBAAgB,EAAE,eAAe,EAAE,gBAAgB,EAAE,eAAe,EAAE,gBAAgB,EAAE;IAC1G,EAAE,cAAc,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE;IAC3F,EAAE,cAAc,EAAE,OAAO,EAAE,eAAe,EAAE,OAAO,EAAE,eAAe,EAAE,OAAO,EAAE;IAC/E,EAAE,cAAc,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE;IAC3F,EAAE,cAAc,EAAE,UAAU,EAAE,eAAe,EAAE,UAAU,EAAE,eAAe,EAAE,UAAU,EAAE;IACxF,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,aAAa,EAAE,eAAe,EAAE,aAAa,EAAE;IACjG,EAAE,cAAc,EAAE,OAAO,EAAE,eAAe,EAAE,OAAO,EAAE,eAAe,EAAE,OAAO,EAAE;IAC/E,EAAE,cAAc,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE;IAC3F,EAAE,cAAc,EAAE,cAAc,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,EAAE,cAAc,EAAE;IACpG,EAAE,cAAc,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE;IAClF,EAAE,cAAc,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE;IAC3F,EAAE,cAAc,EAAE,UAAU,EAAE,eAAe,EAAE,UAAU,EAAE,eAAe,EAAE,UAAU,EAAE;IACxF,EAAE,cAAc,EAAE,iBAAiB,EAAE,eAAe,EAAE,iBAAiB,EAAE,eAAe,EAAE,iBAAiB,EAAE;IAC7G,EAAE,cAAc,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE;IAC3F;QACE,cAAc,EAAE,+BAA+B,EAAE,eAAe,EAAE,+BAA+B;QACjG,eAAe,EAAE,+BAA+B;KACjD;IACD,EAAE,cAAc,EAAE,2BAA2B,EAAE,eAAe,EAAE,2BAA2B;QAC1F,eAAe,EAAE,2BAA2B,EAAE;IAC/C,EAAE,cAAc,EAAE,cAAc,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,EAAE,cAAc,EAAE;IACpG,EAAE,cAAc,EAAE,qBAAqB,EAAE,eAAe,EAAE,qBAAqB,EAAE,eAAe,EAAE,qBAAqB,EAAE;IACzH,EAAE,cAAc,EAAE,YAAY,EAAE,eAAe,EAAE,YAAY,EAAE,eAAe,EAAE,YAAY,EAAE;IAC9F,EAAE,cAAc,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE;IACvG,EAAE,cAAc,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE;IAClF,EAAE,cAAc,EAAE,iBAAiB,EAAE,eAAe,EAAE,iBAAiB,EAAE,eAAe,EAAE,iBAAiB,EAAE;IAC7G,EAAE,cAAc,EAAE,OAAO,EAAE,eAAe,EAAE,OAAO,EAAE,eAAe,EAAE,OAAO,EAAE;IAC/E,EAAE,cAAc,EAAE,SAAS,EAAE,eAAe,EAAE,SAAS,EAAE,eAAe,EAAE,SAAS,EAAE;IACrF,EAAE,cAAc,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE;IAClF,EAAC,cAAc,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAC;IACzF,EAAC,cAAc,EAAE,qBAAqB,EAAE,eAAe,EAAE,qBAAqB,EAAE,eAAe,EAAE,qBAAqB,EAAC;IACvH,EAAC,cAAc,EAAE,iBAAiB,EAAE,eAAe,EAAE,iBAAiB,EAAE,eAAe,EAAE,iBAAiB,EAAC;IAC3G,EAAC,cAAc,EAAE,iBAAiB,EAAE,eAAe,EAAE,iBAAiB,EAAE,eAAe,EAAE,iBAAiB,EAAC;IAC3G,EAAC,cAAc,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,EAAC;IACrG,EAAC,cAAc,EAAE,YAAY,EAAE,eAAe,EAAE,YAAY,EAAE,eAAe,EAAE,YAAY,EAAC;IAC5F,EAAC,cAAc,EAAE,yBAAyB,EAAE,eAAe,EAAE,yBAAyB,EAAE,eAAe,EAAE,yBAAyB,EAAC;IACnI,EAAC,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,aAAa,EAAE,eAAe,EAAE,aAAa,EAAC;IAC/F,EAAC,cAAc,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAC;CACjF,CAAC;AAQF;IAQE,2BAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAF7C,SAAI,GAAG,KAAK,CAAC;IAEoC,CAAC;IAEzD,oCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,kDAAQ,EAAE,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,kDAAQ,EAAE,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,IAAI,kDAAQ,EAAE,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAE9B,CAAC;IAED,sCAAU,GAAV,UAAW,KAAK;QACd,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IACjC,CAAC;IAED,4CAAgB,GAAhB;QACE,IAAM,KAAK,GAAS,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QAC5C,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACxF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EAAE,UAAC,KAAK;YACP,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAMC;QALC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iBAAO;YAC7B,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC;YAC9C,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACL,CAAC;IAtCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,6HAAwC;;SAEzC,CAAC;+EASqC,iEAAe;OARzC,iBAAiB,CAuC7B;IAAD,wBAAC;CAAA;AAvC6B;;;;;;;;;;;;;;;;;;;;;;;;ACpDW;AACM;AACU;AACN;AACa;AACA;AACb;AAYnD;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAX1B,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,qEAAiB,CAAC;YACjC,OAAO,EAAE;gBACP,4DAAY,EAAE,0DAAc;gBAC5B,0DAAW,EAAE,kEAAmB;gBAC/B,8EAAqB;aACvB;YACD,SAAS,EAAE;gBACT,iEAAe;aAChB;SACF,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;AClBgB;AAI6B;AACE;AAK1E;IAIE,yBAAmB,IAAU,EAAS,KAAiB;QAApC,SAAI,GAAJ,IAAI,CAAM;QAAS,UAAK,GAAL,KAAK,CAAY;QAHhD,YAAO,GAAW,MAAM,CAAC;QACzB,YAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAC9D,YAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IACJ,CAAC;IAG5D,wCAAc,GAAd,UAAe,KAAW,EAAE,cAAsB;QAChD,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;QACjC,IAAM,GAAG,GAAG,IAAI,gEAAW,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,GAAG,wBAAwB,GAAG,cAAc,EAAE,QAAQ,EAAE;YACtG,cAAc,EAAE,IAAI;YACpB,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,wCAAc,GAAd,UAAe,cAAc;QAC3B,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,aAAa,GAAG,cAAc,CAAC,CAAC;IACtE,CAAC;IAtBU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAKyB,kDAAI,EAAgB,+DAAU;OAJ5C,eAAe,CAuB3B;IAAD,sBAAC;CAAA;AAvB2B;;;;;;;;;;;;;ACV5B;AAAA;AAAA;IAAA;IAIA,CAAC;IAAD,eAAC;AAAD,CAAC","file":"settings-database-database-module.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport { DatabaseComponent } from './database.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DatabaseComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DatabaseRoutingModule {}\r\n","module.exports = \"<div class=\\\"grid-container\\\">\\r\\n  <h1 class=\\\"mat-h1\\\">DATABASE IMPORT AND EXPORT</h1>\\r\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"200px\\\">\\r\\n    <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\r\\n      <mat-card class=\\\"dashboard-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>\\r\\n            EXPORT WITH COLUMN\\r\\n          </mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-select placeholder=\\\"Collection Name\\\" [(ngModel)]=\\\"database.collectionName\\\">\\r\\n              <mat-option *ngFor=\\\"let data of databases1\\\" [value]=\\\"data.collectionName\\\">\\r\\n                {{data.collectionName}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n          <button mat-raised-button style=\\\"margin-left:200px;\\\" color=\\\"accent\\\">\\r\\n            <a style=\\\"color: white;\\\" href=\\\"http://localhost:3000/api/databases/Export/{{database.collectionName}}\\\">Export</a>\\r\\n          </button>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\r\\n      <mat-card class=\\\"dashboard-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>\\r\\n            IMPORT\\r\\n          </mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Collection Name\\\" [(ngModel)]=\\\"database2.collectionName2\\\">\\r\\n                  <mat-option *ngFor=\\\"let data of databases1\\\" [value]=\\\"data.collectionName2\\\">\\r\\n                    {{data.collectionName2}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <input type=\\\"file\\\" (change)=\\\"fileUpload($event)\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <button mat-raised-button  color=\\\"accent\\\" (click)=\\\"importCollection()\\\">\\r\\n                Import\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\r\\n        <mat-card class=\\\"dashboard-card\\\">\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>\\r\\n              EXPORT WITH DATA\\r\\n            </mat-card-title>\\r\\n          </mat-card-header>\\r\\n          <mat-card-content class=\\\"dashboard-card-content\\\">\\r\\n            <mat-form-field>\\r\\n              <mat-select placeholder=\\\"Collection Name\\\" [(ngModel)]=\\\"database3.collectionName3\\\">\\r\\n                <mat-option *ngFor=\\\"let data of databases1\\\" [value]=\\\"data.collectionName3\\\">\\r\\n                  {{data.collectionName3}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <button mat-raised-button style=\\\"margin-left:200px;\\\" color=\\\"accent\\\" (click)=\\\"download()\\\">\\r\\n              <a style=\\\"color: white;\\\" href=\\\"http://localhost:3000/api/databases/ExportData/{{database3.collectionName3}}\\\">Export</a></button>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n      </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","module.exports = \".grid-container {\\n  margin: 20px; }\\n\\n.dashboard-card {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px; }\\n\\n.more-button {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px; }\\n\\ntd {\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 18px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9zZXR0aW5ncy9kYXRhYmFzZS9FOlxcVnBfV1NcXGZvdW5kcnktY2xpZW50L3NyY1xcYXBwXFxmb3VuZHJ5XFxzZXR0aW5nc1xcZGF0YWJhc2VcXGRhdGFiYXNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWSxFQUFBOztBQUdkO0VBQ0Usa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxVQUFVO0VBQ1YsV0FBVztFQUNYLFlBQVksRUFBQTs7QUFHZDtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsV0FBVyxFQUFBOztBQUliO0VBQ0UsNENBQTRDO0VBQzVDLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvc2V0dGluZ3MvZGF0YWJhc2UvZGF0YWJhc2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZ3JpZC1jb250YWluZXIge1xyXG4gIG1hcmdpbjogMjBweDtcclxufVxyXG5cclxuLmRhc2hib2FyZC1jYXJkIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAxNXB4O1xyXG4gIGxlZnQ6IDE1cHg7XHJcbiAgcmlnaHQ6IDE1cHg7XHJcbiAgYm90dG9tOiAxNXB4O1xyXG59XHJcblxyXG4ubW9yZS1idXR0b24ge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDVweDtcclxuICByaWdodDogMTBweDtcclxufVxyXG5cclxuXHJcbnRkIHtcclxuICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Database } from './database';\r\nimport { DatabaseService } from './database.service';\r\n\r\nconst databases: Database[] = [\r\n  { collectionName: 'customers', collectionName2: 'customers', collectionName3: 'customers' },\r\n  { collectionName: 'completedmelts', collectionName2: 'completedmelts', collectionName3: 'completedmelts' },\r\n  { collectionName: 'fettlings', collectionName2: 'fettlings', collectionName3: 'fettlings' },\r\n  { collectionName: 'items', collectionName2: 'items', collectionName3: 'items' },\r\n  { collectionName: 'knockouts', collectionName2: 'knockouts', collectionName3: 'knockouts' },\r\n  { collectionName: 'meltings', collectionName2: 'meltings', collectionName3: 'meltings' },\r\n  { collectionName: 'meltreports', collectionName2: 'meltreports', collectionName3: 'meltreports' },\r\n  { collectionName: 'melts', collectionName2: 'melts', collectionName3: 'melts' },\r\n  { collectionName: 'mouldings', collectionName2: 'mouldings', collectionName3: 'mouldings' },\r\n  { collectionName: 'ongoingmelts', collectionName2: 'ongoingmelts', collectionName3: 'ongoingmelts' },\r\n  { collectionName: 'orders', collectionName2: 'orders', collectionName3: 'orders' },\r\n  { collectionName: 'paintings', collectionName2: 'paintings', collectionName3: 'paintings' },\r\n  { collectionName: 'products', collectionName2: 'products', collectionName3: 'products' },\r\n  { collectionName: 'purchasereports', collectionName2: 'purchasereports', collectionName3: 'purchasereports' },\r\n  { collectionName: 'purchases', collectionName2: 'purchases', collectionName3: 'purchases' },\r\n  {\r\n    collectionName: 'rawmaterialconsumptionreports', collectionName2: 'rawmaterialconsumptionreports',\r\n    collectionName3: 'rawmaterialconsumptionreports'\r\n  },\r\n  { collectionName: 'rawmaterialsummaryreports', collectionName2: 'rawmaterialsummaryreports',\r\n   collectionName3: 'rawmaterialsummaryreports' },\r\n  { collectionName: 'rawmaterials', collectionName2: 'rawmaterials', collectionName3: 'rawmaterials' },\r\n  { collectionName: 'returnandrejections', collectionName2: 'returnandrejections', collectionName3: 'returnandrejections' },\r\n  { collectionName: 'rejections', collectionName2: 'rejections', collectionName3: 'rejections' },\r\n  { collectionName: 'schedulemelts', collectionName2: 'schedulemelts', collectionName3: 'schedulemelts' },\r\n  { collectionName: 'stocks', collectionName2: 'stocks', collectionName3: 'stocks' },\r\n  { collectionName: 'unschedulemelts', collectionName2: 'unschedulemelts', collectionName3: 'unschedulemelts' },\r\n  { collectionName: 'users', collectionName2: 'users', collectionName3: 'users' },\r\n  { collectionName: 'vendors', collectionName2: 'vendors', collectionName3: 'vendors' },\r\n  { collectionName: 'yields', collectionName2: 'yields', collectionName3: 'yields' },\r\n  {collectionName: 'employees', collectionName2: 'employees', collectionName3: 'employees'},\r\n  {collectionName: 'shotblastingmasters', collectionName2: 'shotblastingmasters', collectionName3: 'shotblastingmasters'},\r\n  {collectionName: 'fettlingmasters', collectionName2: 'fettlingmasters', collectionName3: 'fettlingmasters'},\r\n  {collectionName: 'paintingmasters', collectionName2: 'paintingmasters', collectionName3: 'paintingmasters'},\r\n  {collectionName: 'labourmasters', collectionName2: 'labourmasters', collectionName3: 'labourmasters'},\r\n  {collectionName: 'lpgmasters', collectionName2: 'lpgmasters', collectionName3: 'lpgmasters'},\r\n  {collectionName: 'rawmaterialcompositions', collectionName2: 'rawmaterialcompositions', collectionName3: 'rawmaterialcompositions'},\r\n  {collectionName: 'departments', collectionName2: 'departments', collectionName3: 'departments'},\r\n  {collectionName: 'shifts', collectionName2: 'shifts', collectionName3: 'shifts'}\r\n];\r\n\r\n\r\n@Component({\r\n  selector: 'app-database',\r\n  templateUrl: './database.component.html',\r\n  styleUrls: ['./database.component.scss']\r\n})\r\nexport class DatabaseComponent implements OnInit {\r\n\r\n  public databases1: Database[];\r\n  public database: Database;\r\n  public database2: Database;\r\n  public database3: Database;\r\n  public data = false;\r\n  public file: FileList;\r\n  constructor(private databaseService: DatabaseService) { }\r\n\r\n  ngOnInit() {\r\n    this.database = new Database();\r\n    this.database2 = new Database();\r\n    this.database3 = new Database();\r\n    this.databases1 = databases;\r\n    \r\n  }\r\n\r\n  fileUpload(event) {\r\n    this.file = event.target.files;\r\n  }\r\n\r\n  importCollection() {\r\n    const files: File = this.file.item(0);\r\n    console.log(this.database2.collectionName2);\r\n    this.databaseService.databaseimport(files, this.database2.collectionName2).subscribe((data) => {\r\n      console.log(data);\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  download() {\r\n    console.log('test');\r\n    this.databases1.forEach(element => {\r\n      console.log('test1', element.collectionName3);\r\n      this.databaseService.dataFullExport(element.collectionName3);\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DatabaseComponent } from './database.component';\r\nimport {MaterialModule} from '../../../app.module';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {DatabaseRoutingModule} from './database-routing.module';\r\nimport {DatabaseService} from './database.service';\r\n@NgModule({\r\n  declarations: [DatabaseComponent],\r\n  imports: [\r\n    CommonModule, MaterialModule,\r\n    FormsModule, ReactiveFormsModule,\r\n     DatabaseRoutingModule\r\n  ],\r\n  providers: [\r\n    DatabaseService\r\n  ]\r\n})\r\nexport class DatabaseModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { HttpClient, HttpEvent, HttpRequest } from '@angular/common/http';\r\nimport { pipe } from '@angular/core/src/render3';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DatabaseService {\r\n  public baseURL: String = '/api';\r\n  public headers = new Headers({ 'Content-type': 'application/json' });\r\n  public options = new RequestOptions({ headers: this.headers });\r\n  constructor(public http: Http, public https: HttpClient) { }\r\n\r\n\r\n  databaseimport(files: File, collectionName: String): Observable<HttpEvent<{}>> {\r\n    const formData = new FormData();\r\n    formData.append('file', files);\r\n    console.log('formData',formData);\r\n    const req = new HttpRequest('POST', this.baseURL + '/databases/ImportData/' + collectionName, formData, {\r\n      reportProgress: true,\r\n      responseType: 'text'\r\n    });\r\n\r\n    return this.https.request(req);\r\n  }\r\n\r\n  dataFullExport(collectionName) {\r\n    console.log('test2', collectionName);\r\n    return this.http.get(this.baseURL + '/databases/' + collectionName);\r\n  }\r\n}\r\n","export class Database {\r\n  collectionName: string;\r\n  collectionName2: string;\r\n  collectionName3: string;\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/app/foundry/master/production-master/core-master/core-master.component.html","webpack:///./src/app/foundry/master/production-master/core-master/core-master.component.scss","webpack:///./src/app/foundry/master/production-master/core-master/core-master.component.ts","webpack:///./src/app/foundry/master/production-master/core-master/core-master.ts","webpack:///./src/app/foundry/master/production-master/department/department.component.html","webpack:///./src/app/foundry/master/production-master/department/department.component.scss","webpack:///./src/app/foundry/master/production-master/department/department.component.ts","webpack:///./src/app/foundry/master/production-master/department/department.ts","webpack:///./src/app/foundry/master/production-master/fettling-master/fettling-master.component.html","webpack:///./src/app/foundry/master/production-master/fettling-master/fettling-master.component.scss","webpack:///./src/app/foundry/master/production-master/fettling-master/fettling-master.component.ts","webpack:///./src/app/foundry/master/production-master/fettling-master/fettling-master.ts","webpack:///./src/app/foundry/master/production-master/labour-master/labour-master.component.html","webpack:///./src/app/foundry/master/production-master/labour-master/labour-master.component.scss","webpack:///./src/app/foundry/master/production-master/labour-master/labour-master.component.ts","webpack:///./src/app/foundry/master/production-master/labour-master/labour-master.ts","webpack:///./src/app/foundry/master/production-master/lpg-master/lpg-master.component.html","webpack:///./src/app/foundry/master/production-master/lpg-master/lpg-master.component.scss","webpack:///./src/app/foundry/master/production-master/lpg-master/lpg-master.component.ts","webpack:///./src/app/foundry/master/production-master/lpg-master/lpg-master.ts","webpack:///./src/app/foundry/master/production-master/machine-details/machine-details.component.html","webpack:///./src/app/foundry/master/production-master/machine-details/machine-details.component.scss","webpack:///./src/app/foundry/master/production-master/machine-details/machine-details.component.ts","webpack:///./src/app/foundry/master/production-master/machine-details/machine-details.ts","webpack:///./src/app/foundry/master/production-master/painting-master/painting-master.component.html","webpack:///./src/app/foundry/master/production-master/painting-master/painting-master.component.scss","webpack:///./src/app/foundry/master/production-master/painting-master/painting-master.component.ts","webpack:///./src/app/foundry/master/production-master/painting-master/painting-master.ts","webpack:///./src/app/foundry/master/production-master/production-master-routing.module.ts","webpack:///./src/app/foundry/master/production-master/production-master.component.html","webpack:///./src/app/foundry/master/production-master/production-master.component.scss","webpack:///./src/app/foundry/master/production-master/production-master.component.ts","webpack:///./src/app/foundry/master/production-master/production-master.module.ts","webpack:///./src/app/foundry/master/production-master/raw-material-pre-data/raw-material-pre-data.component.html","webpack:///./src/app/foundry/master/production-master/raw-material-pre-data/raw-material-pre-data.component.scss","webpack:///./src/app/foundry/master/production-master/raw-material-pre-data/raw-material-pre-data.component.ts","webpack:///./src/app/foundry/master/production-master/raw-material-pre-data/raw-material-pre-data.ts","webpack:///./src/app/foundry/master/production-master/salary/salary.component.html","webpack:///./src/app/foundry/master/production-master/salary/salary.component.scss","webpack:///./src/app/foundry/master/production-master/salary/salary.component.ts","webpack:///./src/app/foundry/master/production-master/salary/salary.ts","webpack:///./src/app/foundry/master/production-master/sand-disposal-master/sand-disposal-master.component.html","webpack:///./src/app/foundry/master/production-master/sand-disposal-master/sand-disposal-master.component.scss","webpack:///./src/app/foundry/master/production-master/sand-disposal-master/sand-disposal-master.component.ts","webpack:///./src/app/foundry/master/production-master/sand-disposal-master/sand-disposal-master.ts","webpack:///./src/app/foundry/master/production-master/shift/shift.component.html","webpack:///./src/app/foundry/master/production-master/shift/shift.component.scss","webpack:///./src/app/foundry/master/production-master/shift/shift.component.ts","webpack:///./src/app/foundry/master/production-master/shift/shift.ts","webpack:///./src/app/foundry/master/production-master/shot-blasting-master/shot-blasting-master.component.html","webpack:///./src/app/foundry/master/production-master/shot-blasting-master/shot-blasting-master.component.scss","webpack:///./src/app/foundry/master/production-master/shot-blasting-master/shot-blasting-master.component.ts","webpack:///./src/app/foundry/master/production-master/shot-blasting-master/shot-blasting-master.ts"],"names":[],"mappings":"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","file":"master-production-master-production-master-module.js","sourcesContent":["module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n      <mat-card class=\\\"example-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>Core Master</mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content [style.overflow]=\\\"'auto'\\\" [style.height.px]=\\\"'340'\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-striped\\\" striped=\\\"true\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th scope=\\\"col\\\">No</th>\\r\\n                  <th matTooltip=\\\"Core Type\\\" scope=\\\"col\\\">Core Type</th>\\r\\n                  <th matTooltip=\\\"Mold Type\\\" scope=\\\"col\\\">Mold Type</th>\\r\\n                  <th matTooltip=\\\"Core Status\\\" scope=\\\"col\\\">Status</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let core of coreMasters;let i=index;\\\">\\r\\n                  <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                  <td>{{core.coreType}}</td>\\r\\n                  <td>{{core.moldType}}</td>\\r\\n                  <td>{{core.status}}</td>\\r\\n                  <td>\\r\\n                    <button mat-icon-button matTooltip=\\\"Edit Core Master\\\" color=\\\"accent\\\" (click)=\\\"editCoreMaster(i,core._id,core.coreType,core.moldType,core.status)\\\">\\r\\n                      <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <!-- <button mat-icon-button matTooltip=\\\"Delete Core Master\\\" color=\\\"accent\\\" (click)=\\\"deleteCoreMaster(i,core._id)\\\">\\r\\n                      <mat-icon>delete</mat-icon>\\r\\n                    </button> -->\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n      <mat-card class=\\\"example-card2\\\">\\r\\n        <mat-card-header>\\r\\n          <h6>Core Master</h6>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <form #exampleForm=\\\"ngForm\\\" [formGroup]=\\\"coreForm\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"coreMaster._id === undefined\\\">\\r\\n                  <mat-select placeholder=\\\"Core Type\\\" name=\\\"coreType\\\" formControlName=\\\"coreType\\\" [(ngModel)]=\\\"coreMaster.coreType\\\" required>\\r\\n                    <mat-option *ngFor=\\\"let item of items\\\" [value]=\\\"item.itemName\\\">\\r\\n                      {{item.itemName}}\\r\\n                    </mat-option>\\r\\n                  </mat-select>\\r\\n                  <mat-error>\\r\\n                      <control-messages [control]=\\\"coreForm.controls.coreType\\\"></control-messages>\\r\\n                  </mat-error>\\r\\n                </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"coreMaster._id !== undefined\\\">\\r\\n              <input matInput placeholder=\\\"CoreType\\\" name=\\\"coreType\\\" formControlName=\\\"coreType\\\" [(ngModel)]=\\\"coreMaster.coreType\\\" readonly>\\r\\n              <mat-error>\\r\\n                <control-messages [control]=\\\"coreForm.controls.coreType\\\"></control-messages>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"coreMaster._id === undefined\\\">\\r\\n              <mat-select placeholder=\\\"Mold Type\\\" formControlName=\\\"moldType\\\" name=\\\"moldType\\\" [(ngModel)]=\\\"coreMaster.moldType\\\"  (ngModelChange)=\\\"coreValidation()\\\">\\r\\n                <mat-option *ngFor=\\\"let masters of masterList\\\" [value]=\\\"masters.moldType\\\">\\r\\n                  {{masters.moldType}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error>\\r\\n                <control-messages [control]=\\\"coreForm.controls.moldType\\\"></control-messages>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"coreMaster._id !== undefined\\\">\\r\\n                <input matInput placeholder=\\\"Mold Type\\\" name=\\\"moldType\\\" formControlName=\\\"moldType\\\" [(ngModel)]=\\\"coreMaster.moldType\\\" readonly>\\r\\n                <mat-error>\\r\\n                  <control-messages [control]=\\\"coreForm.controls.coreType\\\"></control-messages>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <mat-select placeholder=\\\"Status\\\" formControlName=\\\"status\\\" appStringValidation=\\\"words\\\"  name=\\\"status\\\" [(ngModel)]=\\\"coreMaster.status\\\"\\r\\n              required>\\r\\n              <mat-option value=\\\"Active\\\">Active</mat-option>\\r\\n              <mat-option value=\\\"Inactive\\\">InActive</mat-option>\\r\\n            </mat-select>\\r\\n              <mat-error>\\r\\n                <control-messages [control]=\\\"coreForm.controls.status\\\"></control-messages>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </form>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n            <button mat-raised-button color=\\\"accent\\\" style=\\\"float: right;\\\" (click)=\\\"cancel(exampleForm)\\\">Reset</button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" style=\\\"float: right;\\\" [disabled]=\\\"!coreForm.valid\\\" (click)=\\\"saveCoreMaster(exampleForm)\\\">Save</button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".example-card2 {\\n  margin-top: 50px;\\n  margin-left: 150px;\\n  max-width: 350px;\\n  height: 320px; }\\n\\n.example-card {\\n  margin-top: 50px; }\\n\\nmat-form-field {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 18px;\\n  width: 100%; }\\n\\nh6 {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-weight: bold;\\n  font-size: 18px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 16px; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-left: 0px;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -40px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\ntr {\\n  padding-top: 1px; }\\n\\nmat-icon {\\n  font-size: 18px;\\n  margin-top: 1px; }\\n\\ntable tbody tr td {\\n  padding: 0px !important;\\n  vertical-align: inherit !important; }\\n\\nth {\\n  font-family: 'Lora', serif;\\n  font-size: 14px;\\n  color: #f73378; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9tYXN0ZXIvcHJvZHVjdGlvbi1tYXN0ZXIvY29yZS1tYXN0ZXIvRTpcXFZwX1dTXFxmb3VuZHJ5LWNsaWVudC9zcmNcXGFwcFxcZm91bmRyeVxcbWFzdGVyXFxwcm9kdWN0aW9uLW1hc3RlclxcY29yZS1tYXN0ZXJcXGNvcmUtbWFzdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsYUFBYSxFQUFBOztBQUdmO0VBQ0EsZ0JBQWdCLEVBQUE7O0FBRWhCO0VBQ0Usa0JBQWtCO0VBQ2xCLDBCQUEwQjtFQUMxQixlQUFlO0VBQ2YsV0FBVyxFQUFBOztBQUViO0VBQ0Usa0JBQWtCO0VBQ2xCLDBCQUEwQjtFQUMxQixpQkFBaUI7RUFDakIsZUFBZTtFQUNmLFdBQVcsRUFBQTs7QUFFYjtFQUNFLGtCQUFrQjtFQUNsQiwwQkFBMEI7RUFDMUIsZUFBZSxFQUFBOztBQUVqQjtFQUNBLGdDQUFnQztFQUNoQyw0QkFBNEI7RUFDNUIsNkJBQTZCO0VBQzdCLHlCQUF5QjtFQUN6QixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFlBQVk7RUFDWiwwQkFBMEIsRUFBQTs7QUFFMUI7RUFDQSxnQkFBZ0IsRUFBQTs7QUFFaEI7RUFDRSxlQUFlO0VBQ2YsZUFBZSxFQUFBOztBQUVqQjtFQUNBLHVCQUF1QjtFQUN2QixrQ0FBa0MsRUFBQTs7QUFFbEM7RUFDRSwwQkFBMEI7RUFDeEIsZUFBZTtFQUNmLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvbWFzdGVyL3Byb2R1Y3Rpb24tbWFzdGVyL2NvcmUtbWFzdGVyL2NvcmUtbWFzdGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY2FyZDJ7XHJcbiAgbWFyZ2luLXRvcDogNTBweDtcclxuICBtYXJnaW4tbGVmdDogMTUwcHg7XHJcbiAgbWF4LXdpZHRoOiAzNTBweDtcclxuICBoZWlnaHQ6IDMyMHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1jYXJke1xyXG5tYXJnaW4tdG9wOiA1MHB4O1xyXG59XHJcbm1hdC1mb3JtLWZpZWxke1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuaDZ7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4uZXhhbXBsZS1mdWxsLXdpZHRoe1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuLmV4YW1wbGUtY2FyZDF7XHJcbmJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAxMHB4O1xyXG5ib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxMHB4O1xyXG5ib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTBweDtcclxuYmFja2dyb3VuZC1jb2xvcjogI2Y3MzM3ODtcclxucGFkZGluZy1sZWZ0OiAwcHg7XHJcbnBhZGRpbmctdG9wOiAxcHg7XHJcbm1hcmdpbi10b3A6IC00MHB4O1xyXG5tYXJnaW4tbGVmdDogLTQwcHg7XHJcbmNvbG9yOiB3aGl0ZTtcclxuaGVpZ2h0OiAzNXB4O1xyXG5mb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxufVxyXG50cntcclxucGFkZGluZy10b3A6IDFweDtcclxufVxyXG5tYXQtaWNvbntcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgbWFyZ2luLXRvcDogMXB4O1xyXG4gIH1cclxudGFibGUgdGJvZHkgdHIgdGR7XHJcbnBhZGRpbmc6IDBweCAhaW1wb3J0YW50O1xyXG52ZXJ0aWNhbC1hbGlnbjogaW5oZXJpdCAhaW1wb3J0YW50O1xyXG59XHJcbnRoe1xyXG4gIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgY29sb3I6ICNmNzMzNzg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProductionMasterService } from '../production-master.service';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { CoreMaster } from './core-master';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MasterService } from '../../master.service';\r\nimport { MoldingMaster } from '../../molding-master/molding-master';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ValidationService } from '../../../validation/validation-service';\r\nimport { Items } from '../../../items/items';\r\nimport { ItemsService } from '../../../items/items.service';\r\n@Component({\r\n  selector: 'app-core-master',\r\n  templateUrl: './core-master.component.html',\r\n  styleUrls: ['./core-master.component.scss']\r\n})\r\nexport class CoreMasterComponent implements OnInit {\r\n  coreForm: any;\r\n  public coreMasters: CoreMaster[];\r\n  public coreMaster: CoreMaster;\r\n  public items: Items[];\r\n  masterList: MoldingMaster[];\r\n  private notifier: NotifierService;\r\n  constructor(public productionMasterService: ProductionMasterService, notifierService: NotifierService,\r\n    public masterService: MasterService, private formBuilder: FormBuilder, public itemService: ItemsService ) {\r\n    this.notifier = notifierService;\r\n    this.coreForm = this.formBuilder.group({\r\n      'coreType': ['', [Validators.required, ValidationService.nameValidation]],\r\n      'moldType': ['', [Validators.required, ValidationService.nameValidation]],\r\n      'status': ['', [Validators.required, ValidationService.nameValidation]],\r\n    });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.coreMaster = new CoreMaster();\r\n    this.getCoreMaster();\r\n    this.getMouldingMaster();\r\n    this.getItemNames();\r\n  }\r\n\r\n  /**get all core details */\r\n  getCoreMaster() {\r\n    this.productionMasterService.getCoreMaster().subscribe((data) => {\r\n      this.coreMasters = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getItemNames() {\r\n    let itemType;\r\n    let itemCategory;\r\n    itemType = 'Consumable';\r\n    itemCategory = 'Core';\r\n    this.itemService.getItemsByItemType(itemType, itemCategory).subscribe((data) => {\r\n      this.items = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getMouldingMaster() {\r\n    this.masterService.getMoldingMaster().subscribe(data => {\r\n      this.masterList = data;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  coreValidation() {\r\n    if (this.coreMaster._id === undefined) {\r\n      this.coreMasters.forEach(res => {\r\n        if (res.coreType === this.coreMaster.coreType && res.moldType === this.coreMaster.moldType) {\r\n          this.coreMaster.coreType = '';\r\n          this.coreMaster.moldType = '';\r\n          this.notifier.notify('error', 'Core Tye and Mold Type already Exists');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**save the sand disposal details */\r\n  saveCoreMaster(exampleForm: NgForm) {\r\n    if (this.coreMaster._id === undefined || this.coreMaster._id === '') {\r\n      this.coreMaster.createdBy = localStorage.getItem('user');\r\n      this.productionMasterService.saveCoreMaster(this.coreMaster).subscribe((data) => {\r\n        this.notifier.notify('success', 'Saved Successfully');\r\n        this.getCoreMaster();\r\n        exampleForm.resetForm();\r\n      }, (err) => {\r\n        this.notifier.notify('error', 'Not Save');\r\n      });\r\n    } else {\r\n      this.coreMaster.modifiedBy = localStorage.getItem('user');\r\n      this.productionMasterService.updateCoreMaster(this.coreMaster).subscribe((data) => {\r\n        this.notifier.notify('success', 'Updated Successfully');\r\n        this.getCoreMaster();\r\n        this.coreMaster._id = undefined;\r\n        exampleForm.resetForm();\r\n      }, (err) => {\r\n        this.notifier.notify('error', 'Not Update');\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  /** edit Core details*/\r\n  editCoreMaster(i: number, _id: string, coreType: string, moldType: string, status: string) {\r\n    this.coreMaster._id = _id;\r\n    this.coreMaster.coreType = coreType;\r\n    this.coreMaster.moldType = moldType;\r\n    this.coreMaster.status = status;\r\n  }\r\n\r\n  /* delete Core details */\r\n  deleteCoreMaster(i: Number, _id: string) {\r\n    this.coreMaster._id = _id;\r\n    this.coreMaster.modifiedBy = localStorage.getItem('user');\r\n    this.productionMasterService.deleteCoreMaster(this.coreMaster).subscribe((data) => {\r\n      this.notifier.notify('success', 'Deleted Successfully');\r\n      this.getCoreMaster();\r\n      this.coreMaster._id = '';\r\n    }, (err) => {\r\n      this.notifier.notify('error', 'Not Delete');\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.getCoreMaster();\r\n  }\r\n\r\n  cancel(exampleForm: NgForm) {\r\n    this.coreMaster._id = undefined;\r\n    exampleForm.resetForm();\r\n  }\r\n}\r\n","export class CoreMaster {\r\n  _id: string;\r\n  coreType: string;\r\n  moldType: string;\r\n  status: string;\r\n  createdBy: string;\r\n  modifiedBy: string;\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n      <mat-card class=\\\"example-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>Department</mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content [style.overflow]=\\\"'auto'\\\" [style.height.px]=\\\"'440'\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-striped\\\" striped=\\\"true\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th scope=\\\"col\\\">No</th>\\r\\n                  <th matTooltip=\\\"Activity\\\" scope=\\\"col\\\">Activity</th>\\r\\n                  <th matTooltip=\\\"Department\\\" scope=\\\"col\\\">Department</th>\\r\\n                  <th matTooltip=\\\"Status\\\" scope=\\\"col\\\">Status</th>\\r\\n                  <th matTooltip=\\\"Action\\\" scope=\\\"col\\\">Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let department of departments;let i=index;\\\">\\r\\n                  <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                  <td>{{department.activity}}</td>\\r\\n                  <td>{{department.department}}</td>\\r\\n                  <td>{{department.status}}</td>\\r\\n                  <td>\\r\\n                    <button mat-icon-button matTooltip=\\\"Edit Department Master\\\" color=\\\"accent\\\" (click)=\\\"editDepartment(i,department._id,department.activity,department.department,department.status)\\\">\\r\\n                      <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <!-- <button mat-icon-button matTooltip=\\\"Delte Department Master\\\" color=\\\"accent\\\" (click)=\\\"deleteDepartment(department._id)\\\">\\r\\n                      <mat-icon>delete</mat-icon>\\r\\n                    </button> -->\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n      <mat-card class=\\\"example-card2\\\">\\r\\n        <mat-card-header>\\r\\n            <mat-card class=\\\"example-card1\\\">\\r\\n                <mat-card-header>\\r\\n                  <mat-card-title>Department</mat-card-title>\\r\\n                </mat-card-header>\\r\\n              </mat-card>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <form #exampleForm=\\\"ngForm\\\">\\r\\n            <div *ngIf='edit === false'>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <mat-select placeholder=\\\"Activity\\\" name=\\\"activity\\\" [(ngModel)]=\\\"department.activity\\\" required>\\r\\n                <mat-option value=\\\"Production\\\">Production</mat-option>\\r\\n                <mat-option value=\\\"Non-Production\\\">Non-Production</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf='edit === true'>\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"Activity\\\" [maxlength]=\\\"15\\\" name=\\\"activity\\\" [(ngModel)]=\\\"department.activity\\\" readonly\\r\\n              required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n            <div *ngIf='department.activity ==\\\"Non-Production\\\"'>\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Department\\\" [maxlength]=\\\"10\\\" name=\\\"department\\\" [(ngModel)]=\\\"department.department\\\"\\r\\n                  required>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div *ngIf='department.activity ==\\\"Production\\\"'>\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <mat-select placeholder=\\\"Department\\\" name=\\\"department\\\" [(ngModel)]=\\\"department.department\\\" (ngModelChange)=\\\"checkDepartment()\\\" required>\\r\\n                  <mat-option *ngFor=\\\"let activityMaster of activityMasters\\\" [value]=\\\"activityMaster.activityType\\\">\\r\\n                    {{activityMaster.activityType}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <mat-select placeholder=\\\"Status\\\" appStringValidation=\\\"words\\\" name=\\\"status\\\" [(ngModel)]=\\\"department.status\\\"\\r\\n                  required>\\r\\n                  <mat-option value=\\\"Active\\\">Active</mat-option>\\r\\n                  <mat-option value=\\\"Inactive\\\">InActive</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n          </form>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n          <button type=\\\"reset\\\" mat-raised-button color=\\\"accent\\\" style=\\\"float: right;\\\" (click)=\\\"cancel(exampleForm)\\\">Reset</button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!exampleForm.valid\\\" style=\\\"float: right;\\\" (click)=\\\"saveDepartment(exampleForm)\\\">Save</button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".example-card2 {\\n  margin-top: 50px;\\n  margin-left: 150px;\\n  max-width: 350px;\\n  height: 350px; }\\n\\n.example-card {\\n  margin-top: 50px; }\\n\\nmat-form-field {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 18px;\\n  width: 100%; }\\n\\nh6 {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-weight: bold;\\n  font-size: 18px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 16px; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-left: 0px;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -40px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\ntr {\\n  padding-top: 1px; }\\n\\nmat-icon {\\n  font-size: 18px;\\n  margin-top: 1px; }\\n\\ntable tbody tr td {\\n  padding: 0px !important;\\n  vertical-align: inherit !important; }\\n\\nth {\\n  font-family: 'Lora', serif;\\n  font-size: 14px;\\n  color: #f73378; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9tYXN0ZXIvcHJvZHVjdGlvbi1tYXN0ZXIvZGVwYXJ0bWVudC9FOlxcVnBfV1NcXGZvdW5kcnktY2xpZW50L3NyY1xcYXBwXFxmb3VuZHJ5XFxtYXN0ZXJcXHByb2R1Y3Rpb24tbWFzdGVyXFxkZXBhcnRtZW50XFxkZXBhcnRtZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsYUFBYSxFQUFBOztBQUdmO0VBQ0EsZ0JBQWdCLEVBQUE7O0FBRWhCO0VBQ0Usa0JBQWtCO0VBQ2xCLDBCQUEwQjtFQUMxQixlQUFlO0VBQ2YsV0FBVyxFQUFBOztBQUViO0VBQ0Usa0JBQWtCO0VBQ2xCLDBCQUEwQjtFQUMxQixpQkFBaUI7RUFDakIsZUFBZTtFQUNmLFdBQVcsRUFBQTs7QUFFYjtFQUNFLGtCQUFrQjtFQUNsQiwwQkFBMEI7RUFDMUIsZUFBZSxFQUFBOztBQUVqQjtFQUNBLGdDQUFnQztFQUNoQyw0QkFBNEI7RUFDNUIsNkJBQTZCO0VBQzdCLHlCQUF5QjtFQUN6QixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFlBQVk7RUFDWiwwQkFBMEIsRUFBQTs7QUFFMUI7RUFDQSxnQkFBZ0IsRUFBQTs7QUFFaEI7RUFDRSxlQUFlO0VBQ2YsZUFBZSxFQUFBOztBQUVqQjtFQUNBLHVCQUF1QjtFQUN2QixrQ0FBa0MsRUFBQTs7QUFFbEM7RUFDRSwwQkFBMEI7RUFDeEIsZUFBZTtFQUNmLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvbWFzdGVyL3Byb2R1Y3Rpb24tbWFzdGVyL2RlcGFydG1lbnQvZGVwYXJ0bWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNhcmQye1xyXG4gIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDE1MHB4O1xyXG4gIG1heC13aWR0aDogMzUwcHg7XHJcbiAgaGVpZ2h0OiAzNTBweDtcclxufVxyXG5cclxuLmV4YW1wbGUtY2FyZHtcclxubWFyZ2luLXRvcDogNTBweDtcclxufVxyXG5tYXQtZm9ybS1maWVsZHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbmg2e1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLmV4YW1wbGUtZnVsbC13aWR0aHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcbi5leGFtcGxlLWNhcmQxe1xyXG5ib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMTBweDtcclxuYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMTBweDtcclxuYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDEwcHg7XHJcbmJhY2tncm91bmQtY29sb3I6ICNmNzMzNzg7XHJcbnBhZGRpbmctbGVmdDogMHB4O1xyXG5wYWRkaW5nLXRvcDogMXB4O1xyXG5tYXJnaW4tdG9wOiAtNDBweDtcclxubWFyZ2luLWxlZnQ6IC00MHB4O1xyXG5jb2xvcjogd2hpdGU7XHJcbmhlaWdodDogMzVweDtcclxuZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbn1cclxudHJ7XHJcbnBhZGRpbmctdG9wOiAxcHg7XHJcbn1cclxubWF0LWljb257XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIG1hcmdpbi10b3A6IDFweDtcclxuICB9XHJcbnRhYmxlIHRib2R5IHRyIHRke1xyXG5wYWRkaW5nOiAwcHggIWltcG9ydGFudDtcclxudmVydGljYWwtYWxpZ246IGluaGVyaXQgIWltcG9ydGFudDtcclxufVxyXG50aHtcclxuICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIGNvbG9yOiAjZjczMzc4O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Department } from './department';\r\nimport { ProductionMasterService } from '../production-master.service';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MasterService } from '../../master.service';\r\nimport { ActivityMaster } from '../../activity-master/activity-master';\r\n@Component({\r\n  selector: 'app-department',\r\n  templateUrl: './department.component.html',\r\n  styleUrls: ['./department.component.scss']\r\n})\r\nexport class DepartmentComponent implements OnInit {\r\n  public edit: boolean;\r\n  public activityMasters: ActivityMaster[];\r\n  public department: Department;\r\n  public departments: Department[];\r\n  private notifier: NotifierService;\r\n  constructor(private productionMasterService: ProductionMasterService, public masterService: MasterService,\r\n    notifierService: NotifierService) {\r\n    this.notifier = notifierService;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.department = new Department();\r\n\r\n    this.getAllDepartment();\r\n    this.getAllActivity();\r\n  }\r\n\r\n\r\n  getAllDepartment() {\r\n    this.edit = false;\r\n    this.productionMasterService.getAllDepartMent().subscribe((data) => {\r\n      this.departments = data;\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  checkDepartment() {\r\n    this.departments.forEach(element => {\r\n      if (this.department.activity === element.activity && this.department.department === element.department) {\r\n        this.notifier.notify('error', 'Already department exists!');\r\n        this.department.department = '';\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  saveDepartment(exampleForm: NgForm) {\r\n    if (this.department._id === undefined) {\r\n      this.productionMasterService.saveDepartMent(this.department).subscribe((data) => {\r\n        this.notifier.notify('success', 'Saved Successfully');\r\n        this.getAllDepartment();\r\n        exampleForm.reset();\r\n      }, (error) => {\r\n        this.notifier.notify('error', 'Not Save');\r\n        console.log(error);\r\n      });\r\n    } else {\r\n      this.productionMasterService.updateDepartMent(this.department).subscribe((data) => {\r\n        this.notifier.notify('success', 'Updated Successfully');\r\n        this.getAllDepartment();\r\n        exampleForm.reset();\r\n        this.department._id = undefined;\r\n      }, (error) => {\r\n        this.notifier.notify('error', 'Not Updated');\r\n        console.log(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  cancel(exampleForm: NgForm) {\r\n    this.department._id = undefined;\r\n    exampleForm.reset();\r\n  }\r\n\r\n  editDepartment(i: number, _id: string, activity: string, department: string, status: string) {\r\n    this.edit = true;\r\n    this.department._id = _id;\r\n    this.department.activity = activity;\r\n    this.department.department = department;\r\n    this.department.status = status;\r\n  }\r\n\r\n  deleteDepartment(id: string) {\r\n    this.productionMasterService.deleteDepartment(id).subscribe((data) => {\r\n      this.notifier.notify('success', 'Deleted Successfully');\r\n      this.getAllDepartment();\r\n    }, (error) => {\r\n      this.notifier.notify('error', 'Not Deleted');\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.getAllDepartment();\r\n  }\r\n\r\n  getAllActivity() {\r\n    this.masterService.getAllActivityMaster().subscribe(data => {\r\n      this.activityMasters = data;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n}\r\n","export class Department {\r\n  _id: string;\r\n  activity: string;\r\n  department: string;\r\n  createdOn: string;\r\n  createdBy: string;\r\n  modifiedOn: string;\r\n  modifiedBy: string;\r\n  status: string;\r\n}\r\n","module.exports = \"<!-- Shot blasting form-->\\r\\n<div class=\\\"container\\\">\\r\\n  <mat-card class=\\\"example-card\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card class=\\\"example-card1\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>Fettling Master</mat-card-title>\\r\\n        </mat-card-header>\\r\\n      </mat-card>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <form #exampleForm=\\\"ngForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"fettling._id === undefined\\\">\\r\\n              <mat-select placeholder=\\\"Machine Id\\\" name=\\\"machineId\\\" [(ngModel)]=\\\"fettling.machineId\\\" (ngModelChange)=\\\"getMachineName(fettling.machineId)\\\"\\r\\n                required>\\r\\n                <mat-option *ngFor=\\\"let machineDetail of machineDetails\\\" [value]=\\\"machineDetail.machineId\\\">\\r\\n                  {{machineDetail.machineId}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"fettling._id !== undefined\\\">\\r\\n              <input matInput placeholder=\\\"Machine Id\\\" name=\\\"machineId\\\" [(ngModel)]=\\\"fettling.machineId\\\" readonly required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"Machine Name\\\" name=\\\"machineName\\\" [(ngModel)]=\\\"fettling.machineName\\\" readonly required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"fettling._id === undefined\\\">\\r\\n              <mat-select placeholder=\\\"ItemType\\\" name=\\\"itemType\\\" appStringValidation=\\\"words\\\" [(ngModel)]=\\\"fettling.itemType\\\"\\r\\n                (ngModelChange)=\\\"getItemNames(fettling.itemType)\\\" required>\\r\\n                <mat-option value=\\\"Consumable\\\">Consumable</mat-option>\\r\\n                <mat-option value=\\\"Parts\\\">Part</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"fettling._id !== undefined\\\">\\r\\n              <input matInput placeholder=\\\"Item Type\\\" name=\\\"itemType\\\" [(ngModel)]=\\\"fettling.itemType\\\" readonly required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"fettling.itemType == 'Consumable'\\\" class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"fettling._id === undefined\\\">\\r\\n              <mat-select placeholder=\\\"Consumable Name\\\" name=\\\"consumableName\\\" [(ngModel)]=\\\"fettling.consumableName\\\"\\r\\n                (ngModelChange)=\\\"getPerKgCost(fettling.consumableName)\\\" required>\\r\\n                <mat-option *ngFor=\\\"let item of items\\\" [value]=\\\"item.itemName\\\">\\r\\n                  {{item.itemName}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"fettling._id !== undefined\\\">\\r\\n              <input matInput placeholder=\\\"Consumable Name\\\" name=\\\"consumableName\\\" [(ngModel)]=\\\"fettling.consumableName\\\" readonly required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"fettling.itemType =='Parts'\\\" class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"fettling._id === undefined\\\">\\r\\n              <mat-select placeholder=\\\"Part Name\\\" name=\\\"partName\\\" [(ngModel)]=\\\"fettling.partName\\\" (ngModelChange)=\\\"getPerKgCost(fettling.partName)\\\"\\r\\n                required>\\r\\n                <mat-option *ngFor=\\\"let item of items\\\" [value]=\\\"item.itemName\\\">\\r\\n                  {{item.itemName}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"fettling._id !== undefined\\\">\\r\\n              <input matInput placeholder=\\\"Part Name\\\" name=\\\"partName\\\" [(ngModel)]=\\\"fettling.partName\\\" readonly required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <!-- <div *ngIf=\\\"fettling.itemType == 'Consumable'\\\" class=\\\"col-sm-3\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"TotalCapacity\\\" appNumberValidation name=\\\"totalCapacity\\\" [(ngModel)]=\\\"fettling.totalCapacity\\\" required>\\r\\n              </mat-form-field>\\r\\n            </div> -->\\r\\n          <div *ngIf=\\\"fettling.itemType == 'Consumable'\\\" class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"PerKgCost\\\" appNumberValidation name=\\\"perKgCost\\\" [(ngModel)]=\\\"fettling.perKgCost\\\"\\r\\n                required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"fettling.itemType == 'Consumable' ||fettling.itemType =='Parts' \\\" class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <mat-select placeholder=\\\"ReplacementRate\\\" appStringValidation=\\\"words\\\" name=\\\"replacementRate\\\" [(ngModel)]=\\\"fettling.replacementRate\\\"\\r\\n                required>\\r\\n                <mat-option value=\\\"MeltWise\\\">MeltWise</mat-option>\\r\\n                <mat-option value=\\\"Monthly\\\">Monthly</mat-option>\\r\\n                <mat-option value=\\\"Weekly\\\">Weekly</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"fettling.itemType == 'Consumable' || fettling.itemType =='Parts'\\\" class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"replacementQuantity\\\" appNumberValidation name=\\\"replacementQuantity\\\"\\r\\n                [(ngModel)]=\\\"fettling.replacementQuantity\\\" required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf='fettling.itemType == \\\"Parts\\\"' class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"PartCost\\\" appNumberValidation name=\\\"partCost\\\" [(ngModel)]=\\\"fettling.partCost\\\"\\r\\n                required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <mat-select placeholder=\\\"Status\\\" appStringValidation=\\\"words\\\" name=\\\"status\\\" [(ngModel)]=\\\"fettling.status\\\"\\r\\n                required>\\r\\n                <mat-option value=\\\"Active\\\">Active</mat-option>\\r\\n                <mat-option value=\\\"Inactive\\\">InActive</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-raised-button style=\\\"float: right;margin-top:-30px;\\\" color=\\\"accent\\\" (click)=\\\"cancel(exampleForm)\\\">Reset</button>\\r\\n      <button mat-raised-button style=\\\"float: right;margin-top:-30px;\\\" [disabled]=!exampleForm.valid color=\\\"primary\\\"\\r\\n        (click)=\\\"saveFettling(exampleForm)\\\">Save</button>\\r\\n\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- Shot blasting Table view-->\\r\\n<div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n  <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\" style=\\\"margin-top: 40px;\\\">\\r\\n    <mat-card class=\\\"example-card\\\">\\r\\n      <mat-card-header>\\r\\n        <mat-card class=\\\"example-card1\\\">\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>Consumable List</mat-card-title>\\r\\n          </mat-card-header>\\r\\n        </mat-card>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content [style.overflow]=\\\"'auto'\\\" [style.height.px]=\\\"'240'\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-striped\\\" striped=\\\"true\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\">No</th>\\r\\n                <th matTooltip=\\\"Machine ID\\\" scope=\\\"col\\\">M ID</th>\\r\\n                <th matTooltip=\\\"Machine Name\\\" scope=\\\"col\\\">M Name</th>\\r\\n                <th matTooltip=\\\"Part Id\\\" scope=\\\"col\\\">C Name</th>\\r\\n                <th matTooltip=\\\"Consumable Cost\\\" scope=\\\"col\\\" style=\\\"text-align: right\\\">Cos/Cost</th>\\r\\n                <th matTooltip=\\\"Status\\\" scope=\\\"col\\\" style=\\\"text-align: center\\\">Status</th>\\r\\n                <th>Action</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let fettling of Fettlings1;let i=index;\\\">\\r\\n                <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                <td>{{fettling.machineId}}</td>\\r\\n                <td>{{fettling.machineName}}</td>\\r\\n                <td>{{fettling.consumableName}}</td>\\r\\n                <td style=\\\"text-align: right\\\">{{fettling.perKgCost}}</td>\\r\\n                <td style=\\\"text-align: center\\\">{{fettling.status}}</td>\\r\\n                <td>\\r\\n                  <button mat-icon-button matTooltip=\\\"Edit fettling\\\" color=\\\"accent\\\" (click)=\\\"editFettlingMaster(i,fettling._id,fettling.machineId,fettling.machineName,fettling.itemType,fettling.consumableName,\\r\\n                    fettling.perKgCost,fettling.replacementRate,fettling.replacementQuantity,fettling.partName,fettling.partCost,fettling.status)\\\">\\r\\n                    <mat-icon>edit</mat-icon>\\r\\n                  </button>\\r\\n                  <!-- <button mat-icon-button matTooltip=\\\"delete fettling\\\" color=\\\"accent\\\" (click)=\\\"deleteFettlingMaster(i,fettling._id)\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                  </button> -->\\r\\n\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\" style=\\\"margin-top: 40px;\\\">\\r\\n    <mat-card class=\\\"example-card\\\">\\r\\n      <mat-card-header>\\r\\n        <mat-card class=\\\"example-card1\\\">\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>Parts List</mat-card-title>\\r\\n          </mat-card-header>\\r\\n        </mat-card>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content [style.overflow]=\\\"'auto'\\\" [style.height.px]=\\\"'240'\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-striped\\\" striped=\\\"true\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\">No</th>\\r\\n                <th matTooltip=\\\"Machine Id\\\" scope=\\\"col\\\">M ID</th>\\r\\n                <th matTooltip=\\\"Machine Name\\\" scope=\\\"col\\\">M Name</th>\\r\\n                <th matTooltip=\\\"Part Name\\\" scope=\\\"col\\\">Part Name</th>\\r\\n                <th matTooltip=\\\"Part Cost\\\" scope=\\\"col\\\" style=\\\"text-align: right\\\">Part Cost</th>\\r\\n                <th matTooltip=\\\"Status\\\" scope=\\\"col\\\" style=\\\"text-align: center\\\">Status</th>\\r\\n                <th>Action</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let fettling of Fettlings2;let i=index;\\\">\\r\\n                <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                <td>{{fettling.machineId}}</td>\\r\\n                <td>{{fettling.machineName}}</td>\\r\\n                <td>{{fettling.partName}}</td>\\r\\n                <td style=\\\"text-align: right\\\">{{fettling.partCost}}</td>\\r\\n                <td style=\\\"text-align: center\\\">{{fettling.status}}</td>\\r\\n                <td>\\r\\n                  <button mat-icon-button matTooltip=\\\"Edit fettling\\\" color=\\\"accent\\\" (click)=\\\"editFettlingMaster(i,fettling._id,fettling.machineId,fettling.machineName,fettling.itemType,fettling.consumableName,\\r\\n                    fettling.perKgCost,fettling.replacementRate,fettling.replacementQuantity,fettling.partName,fettling.partCost,fettling.status)\\\">\\r\\n                    <mat-icon>edit</mat-icon>\\r\\n                  </button>\\r\\n                  <!-- <button mat-icon-button matTooltip=\\\"delete fettling\\\" color=\\\"accent\\\" (click)=\\\"deleteFettlingMaster(i,fettling._id)\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                  </button> -->\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".example-card {\\n  margin-top: 50px; }\\n\\nmat-card {\\n  max-width: 100%; }\\n\\nmat-form-field {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 18px;\\n  width: 100%; }\\n\\nh6 {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-weight: bold;\\n  font-size: 18px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 16px; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-left: 0px;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -40px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\ntr {\\n  padding-top: 1px; }\\n\\nmat-icon {\\n  font-size: 18px;\\n  margin-top: 1px; }\\n\\ntable tbody tr td {\\n  padding: 0px !important;\\n  vertical-align: inherit !important; }\\n\\nth {\\n  font-family: 'Lora', serif;\\n  font-size: 14px;\\n  color: #f73378; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9tYXN0ZXIvcHJvZHVjdGlvbi1tYXN0ZXIvZmV0dGxpbmctbWFzdGVyL0U6XFxWcF9XU1xcZm91bmRyeS1jbGllbnQvc3JjXFxhcHBcXGZvdW5kcnlcXG1hc3RlclxccHJvZHVjdGlvbi1tYXN0ZXJcXGZldHRsaW5nLW1hc3RlclxcZmV0dGxpbmctbWFzdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsZUFBZSxFQUFBOztBQUVqQjtFQUNFLGtCQUFrQjtFQUNsQiwwQkFBMEI7RUFDMUIsZUFBZTtFQUNmLFdBQVcsRUFBQTs7QUFFYjtFQUNFLGtCQUFrQjtFQUNsQiwwQkFBMEI7RUFDMUIsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixXQUFXLEVBQUE7O0FBR2I7RUFDRSxrQkFBa0I7RUFDbEIsMEJBQTBCO0VBQzFCLGVBQWUsRUFBQTs7QUFJakI7RUFDRSxnQ0FBZ0M7RUFDaEMsNEJBQTRCO0VBQzVCLDZCQUE2QjtFQUM3Qix5QkFBeUI7RUFDekIsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixZQUFZO0VBQ1osMEJBQTBCLEVBQUE7O0FBRTFCO0VBQ0EsZ0JBQWdCLEVBQUE7O0FBRWhCO0VBQ0UsZUFBZTtFQUNmLGVBQWUsRUFBQTs7QUFFakI7RUFDQSx1QkFBdUI7RUFDdkIsa0NBQWtDLEVBQUE7O0FBRWxDO0VBQ0UsMEJBQTBCO0VBQ3hCLGVBQWU7RUFDZixjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9mb3VuZHJ5L21hc3Rlci9wcm9kdWN0aW9uLW1hc3Rlci9mZXR0bGluZy1tYXN0ZXIvZmV0dGxpbmctbWFzdGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY2FyZHtcclxuICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gLy8gbWFyZ2luLWxlZnQ6IDE1MHB4O1xyXG59XHJcbm1hdC1jYXJke1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxufVxyXG5tYXQtZm9ybS1maWVsZHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbmg2e1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5leGFtcGxlLWZ1bGwtd2lkdGh7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxufVxyXG5cclxuXHJcbi5leGFtcGxlLWNhcmQxe1xyXG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAxMHB4O1xyXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDEwcHg7XHJcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDEwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3MzM3ODtcclxuICBwYWRkaW5nLWxlZnQ6IDBweDtcclxuICBwYWRkaW5nLXRvcDogMXB4O1xyXG4gIG1hcmdpbi10b3A6IC00MHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAtNDBweDtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgaGVpZ2h0OiAzNXB4O1xyXG4gIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gIH1cclxuICB0cntcclxuICBwYWRkaW5nLXRvcDogMXB4O1xyXG4gIH1cclxuICBtYXQtaWNvbntcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIG1hcmdpbi10b3A6IDFweDtcclxuICAgIH1cclxuICB0YWJsZSB0Ym9keSB0ciB0ZHtcclxuICBwYWRkaW5nOiAwcHggIWltcG9ydGFudDtcclxuICB2ZXJ0aWNhbC1hbGlnbjogaW5oZXJpdCAhaW1wb3J0YW50O1xyXG4gIH1cclxuICB0aHtcclxuICAgIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgIGNvbG9yOiAjZjczMzc4O1xyXG4gIH1cclxuIl19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Fettling } from 'src/app/foundry/production-monitoring/fettling/fettling';\r\nimport { ProductionMasterService } from '../production-master.service';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport { FettlingMaster } from './fettling-master';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MachineDetails } from '../machine-details/machine-details';\r\nimport { Items } from '../../../items/items';\r\nimport { ItemsService } from '../../../items/items.service';\r\nimport { StockService } from '../../../stock/stock.service';\r\n\r\n@Component({\r\n  selector: 'app-fettling-master',\r\n  templateUrl: './fettling-master.component.html',\r\n  styleUrls: ['./fettling-master.component.scss']\r\n})\r\nexport class FettlingMasterComponent implements OnInit {\r\n  private notifier: NotifierService;\r\n  public type: string;\r\n  public items: Items[];\r\n  public machineDetails: MachineDetails[];\r\n  constructor(public productionMasterService: ProductionMasterService, notifierService: NotifierService,\r\n    public itemService: ItemsService, public stockService: StockService) {\r\n    this.notifier = notifierService;\r\n  }\r\n  public fettling: FettlingMaster;\r\n  public Fettlings1: FettlingMaster[];\r\n  public Fettlings2: FettlingMaster[];\r\n\r\n  ngOnInit() {\r\n    this.type = 'Fettling';\r\n    this.fettling = new FettlingMaster();\r\n    this.getAllFettlingConsumable();\r\n    this.getAllFettlingPart();\r\n    this.getAllFettlingMachine(this.type);\r\n  }\r\n\r\n\r\n\r\n  /** get all fettling Consumable details */\r\n  getAllFettlingConsumable() {\r\n    this.productionMasterService.getAllFettlingConsumable().subscribe((data) => {\r\n      this.Fettlings1 = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  /** get all fettling Consumable details */\r\n  getAllFettlingPart() {\r\n    this.productionMasterService.getAllFettlingPart().subscribe((data1) => {\r\n      this.Fettlings2 = data1;\r\n      console.log('test', data1);\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getAllFettlingMachine(type: string) {\r\n    this.productionMasterService.getMachineDetailsByType(type).subscribe((data) => {\r\n      this.machineDetails = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n  getMachineName(machineId: string) {\r\n    this.machineDetails.forEach(element => {\r\n      if (element.machineId === machineId) {\r\n        this.fettling.machineName = element.machineName;\r\n      }\r\n    });\r\n  }\r\n\r\n  getItemNames(itemType: string) {\r\n    itemType = 'Mc' + itemType;\r\n    let itemCategory;\r\n    itemCategory = 'Fettling';\r\n    this.itemService.getItemsByItemType(itemType, itemCategory).subscribe((data) => {\r\n      this.items = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getPerKgCost(itemName: string) {\r\n    if (this.fettling.itemType === 'Consumable') {\r\n      this.stockService.getMcConsumableStockByItemName(itemName).subscribe((data) => {\r\n        this.fettling.perKgCost = data.perKG;\r\n      }, (err) => {\r\n        console.log(err);\r\n      });\r\n    } else  if (this.fettling.itemType === 'Parts') {\r\n      this.stockService.getMcPartStockByItemName(itemName).subscribe((data) => {\r\n        this.fettling.partCost = data.perKG;\r\n      }, (err) => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /**save the fettling Parts details */\r\n  saveFettling(exampleForm: NgForm) {\r\n    if (this.fettling._id === undefined || this.fettling._id === '') {\r\n      this.fettling.createdBy = localStorage.getItem('user');\r\n      this.productionMasterService.saveFettling(this.fettling).subscribe((data) => {\r\n        this.notifier.notify('success', 'Saved Successfully');\r\n        this.getAllFettlingConsumable();\r\n        this.getAllFettlingPart();\r\n        exampleForm.resetForm();\r\n      }, (err) => {\r\n        this.notifier.notify('error', 'Not Save');\r\n      });\r\n    } else {\r\n      this.fettling.modifiedBy = localStorage.getItem('user');\r\n      this.productionMasterService.updateFettling(this.fettling).subscribe((data) => {\r\n        this.notifier.notify('success', 'Updated Successfully');\r\n        this.getAllFettlingConsumable();\r\n        this.getAllFettlingPart();\r\n        exampleForm.resetForm();\r\n        this.fettling._id = '';\r\n      }, (err) => {\r\n        this.notifier.notify('error', 'Not Update');\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  /**edit the fettling master details */\r\n  editFettlingMaster(i: Number, _id: String, machineId: string, machineName: string, itemType: string,\r\n    consumableName: string,\r\n    perKgCost: number, replacementRate: string, replacementQuantity: number, partName: string, partCost: number, status: string) {\r\n    this.fettling._id = _id;\r\n    this.fettling.machineId = machineId;\r\n    this.fettling.machineName = machineName;\r\n    this.fettling.itemType = itemType;\r\n    this.fettling.consumableName = consumableName;\r\n    this.fettling.perKgCost = perKgCost;\r\n    this.fettling.replacementRate = replacementRate;\r\n    this.fettling.replacementQuantity = replacementQuantity;\r\n    this.fettling.partName = partName;\r\n    this.fettling.partCost = partCost;\r\n    this.fettling.status = status;\r\n    console.log(this.fettling);\r\n    this.getItemNames(itemType);\r\n    if (consumableName !== undefined) {\r\n      this.getPerKgCost(consumableName);\r\n    } else {\r\n      this.getPerKgCost(partName);\r\n    }\r\n  }\r\n\r\n\r\n  /**delete shotBlasting details */\r\n  deleteFettlingMaster(i: Number, _id: String) {\r\n    this.fettling._id = _id;\r\n    this.fettling.modifiedBy = localStorage.getItem('user');\r\n    this.productionMasterService.deleteFettlingMaster(this.fettling).subscribe((data) => {\r\n      this.notifier.notify('success', 'Deleted Successfully');\r\n      this.getAllFettlingConsumable();\r\n      this.getAllFettlingPart();\r\n      this.fettling._id = undefined;\r\n    }, (err) => {\r\n      this.notifier.notify('error', 'Not Delete');\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.getAllFettlingConsumable();\r\n    this.getAllFettlingPart();\r\n  }\r\n\r\n  cancel(exampleForm: NgForm) {\r\n    this.fettling._id = undefined;\r\n    exampleForm.resetForm();\r\n  }\r\n}\r\n","export class FettlingMaster {\r\n  _id: String;\r\n  machineId: string;\r\n  machineName: string;\r\n  itemType: string;\r\n  consumableName: string;\r\n  perKgCost: number;\r\n  replacementRate: string;\r\n  replacementQuantity: number;\r\n  machineStatus: String;\r\n  partName: string;\r\n  partCost: number;\r\n  createdBy: String;\r\n  modifiedBy: String;\r\n  status: string;\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <mat-card class=\\\"example-card\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card class=\\\"example-card1\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>Labour Master</mat-card-title>\\r\\n        </mat-card-header>\\r\\n      </mat-card>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <form #exampleForm=\\\"ngForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-3\\\" *ngIf=\\\"labourMaster._id == undefined\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <mat-select placeholder=\\\"Activity Name\\\" name=\\\"activityname\\\" [(ngModel)]=\\\"labourMaster.activityName\\\"\\r\\n                required>\\r\\n                <mat-option *ngFor=\\\"let activityMaster of activityMasters\\\" [value]=\\\"activityMaster.activityType\\\">\\r\\n                  {{activityMaster.activityType}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"labourMaster._id != undefined\\\" class=\\\"col-sm-3\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Activity Name\\\" appNumberValidation name=\\\"activityname\\\" [(ngModel)]=\\\"labourMaster.activityName\\\" readonly\\r\\n                  required>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <mat-select placeholder=\\\"EmploymentType\\\" name=\\\"labourEmpType\\\" [(ngModel)]=\\\"labourMaster.labourEmpType\\\"\\r\\n                (ngModelChange)=\\\"choosePermanentEmployeesAndMachines(labourMaster.labourEmpType,labourMaster.activityName)\\\"\\r\\n                required>\\r\\n                <mat-option value=\\\"Contract\\\">Contract</mat-option>\\r\\n                <mat-option value=\\\"Permanent\\\">Permanent</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"labourMaster.labourEmpType == 'Contract'\\\" class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <mat-select placeholder=\\\"workingType\\\" name=\\\"workingType\\\" [(ngModel)]=\\\"labourMaster.workingType\\\" required>\\r\\n                <mat-option value=\\\"KG\\\">kg</mat-option>\\r\\n                <mat-option value=\\\"HOUR\\\">hour</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"labourMaster.workingType == 'KG' && labourMaster.labourEmpType == 'Contract'\\\" class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput type=\\\"text\\\" placeholder=\\\"Rate/Kg\\\" appNumberValidation name=\\\"contract/kg\\\" [(ngModel)]=\\\"labourMaster.ratePerKg\\\"\\r\\n                required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"labourMaster.workingType == 'HOUR' && labourMaster.labourEmpType == 'Contract'\\\" class=\\\"col-sm-2\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput type=\\\"text\\\" placeholder=\\\"Rate/Hour\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"contract/hour\\\"\\r\\n                [(ngModel)]=\\\"labourMaster.ratePerHour\\\" required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"labourMaster.workingType == 'HOUR' && labourMaster.labourEmpType == 'Contract'\\\" class=\\\"col-sm-1\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput type=\\\"text\\\" placeholder=\\\"OT Hour\\\" appNumberValidation name=\\\"ot/hour\\\" [(ngModel)]=\\\"labourMaster.otHours\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"labourMaster.labourEmpType == 'Permanent'\\\" class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <mat-select placeholder=\\\"EmployeeName\\\" name=\\\"employeeName\\\" [(ngModel)]=\\\"labourMaster.employeeName\\\"\\r\\n                (ngModelChange)=\\\"getEmployeeId(labourMaster.employeeName)\\\" required>\\r\\n                <mat-option *ngFor=\\\"let employee of employees\\\" [value]=\\\"employee.empName\\\">\\r\\n                  {{employee.empName}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"labourMaster.labourEmpType == 'Permanent' && (labourMaster.activityName == 'ShotBlasting' ||  labourMaster.activityName == 'Fettling')\\\"\\r\\n            class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <mat-select placeholder=\\\"MachineId\\\" name=\\\"machineId\\\" [(ngModel)]=\\\"labourMaster.machineId\\\" required  (ngModelChange)=\\\"checkMachineId(labourMaster.machineId)\\\">\\r\\n                <mat-option *ngFor=\\\"let id of machineId\\\" [value]=\\\"id.machineId\\\">\\r\\n                  {{id.machineId}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"labourMaster.activityName == 'Painting' && labourMaster.labourEmpType == 'Permanent'\\\" class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <mat-select placeholder=\\\"PaintingType\\\" name=\\\"paintingType\\\"\\r\\n                [(ngModel)]=\\\"labourMaster.paintingType\\\" (ngModelChange)=\\\"checkPantingType(labourMaster.paintingType)\\\" required>\\r\\n                <mat-option *ngFor=\\\"let painting of machineId\\\" [value]=\\\"painting.paintingType\\\">\\r\\n                  {{painting.paintingType}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-raised-button color=\\\"accent\\\" style=\\\"float: right;margin-top:-30px;\\\" (click)=\\\"cancel(exampleForm)\\\">Reset</button>\\r\\n      <button mat-raised-button color=\\\"primary\\\" style=\\\"float: right;margin-top:-30px;\\\" [disabled]=\\\"!exampleForm.valid\\\"\\r\\n        (click)=\\\"saveLabourMaster(exampleForm)\\\">Save</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</div>\\r\\n<div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n  <div class=\\\"col-lg-7 col-md-12 col-sm-12\\\" style=\\\"margin-top: 40px;\\\">\\r\\n    <mat-card class=\\\"example-card\\\">\\r\\n      <mat-card-header>\\r\\n        <mat-card class=\\\"example-card1\\\">\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>Contract Employee</mat-card-title>\\r\\n          </mat-card-header>\\r\\n        </mat-card>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content [style.overflow]=\\\"'auto'\\\" [style.height.px]=\\\"'340'\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-striped\\\" striped=\\\"true\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\">No</th>\\r\\n                <th matTooltip=\\\"Activity Name\\\" scope=\\\"col\\\">Activity Name</th>\\r\\n                <th matTooltip=\\\"Labour EmpType\\\" scope=\\\"col\\\">Labour EmpType</th>\\r\\n                <th matTooltip=\\\"Working Type\\\" scope=\\\"col\\\">Working Type</th>\\r\\n                <th matTooltip=\\\"Rate/Kg\\\" scope=\\\"col\\\">Rate/Kg</th>\\r\\n                <th matTooltip=\\\"Rate/Hour\\\" scope=\\\"col\\\">Rate/Hour</th>\\r\\n                <th matTooltip=\\\"OTRate/Hour\\\" scope=\\\"col\\\">OTRate/Hour</th>\\r\\n                <th> <button mat-icon-button matTooltip=\\\"Refresh\\\" color=\\\"accent\\\" (click)=\\\"refresh()\\\">\\r\\n                    <mat-icon>refresh</mat-icon>\\r\\n                  </button></th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let labour of labourMasters;let i=index;\\\">\\r\\n                <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                <td>{{labour.activityName}}</td>\\r\\n                <td>{{labour.labourEmpType}}</td>\\r\\n                <td>{{labour.workingType}}</td>\\r\\n                <td style=\\\"text-align: right\\\">{{labour.ratePerKg}}</td>\\r\\n                <td style=\\\"text-align: right\\\">{{labour.ratePerHour}}</td>\\r\\n                <td style=\\\"text-align: right\\\">{{labour.otHours}}</td>\\r\\n                <td>\\r\\n                  <button mat-icon-button matTooltip=\\\"EditLabourMaster\\\" color=\\\"accent\\\" (click)=\\\"editLabourMaster(i,labour._id,labour.activityName,labour.labourEmpType,labour.workingType,labour.ratePerKg,labour.ratePerHour,labour.otHours,labour.employeeId,labour.employeeName,labour.machineId,labour.paintingType)\\\">\\r\\n                    <mat-icon>edit</mat-icon>\\r\\n                  </button>\\r\\n                  <button mat-icon-button matTooltip=\\\"DeleteLabourMaster\\\" color=\\\"accent\\\" (click)=\\\"deleteLabourMaster(i,labour._id)\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                  </button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-5 col-md-12 col-sm-12\\\" style=\\\"margin-top: 40px;\\\">\\r\\n    <mat-card class=\\\"example-card\\\">\\r\\n      <mat-card-header>\\r\\n        <mat-card class=\\\"example-card1\\\">\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>Permanent Employee</mat-card-title>\\r\\n          </mat-card-header>\\r\\n        </mat-card>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content [style.overflow]=\\\"'auto'\\\" [style.height.px]=\\\"'340'\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-striped\\\" striped=\\\"true\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\">No</th>\\r\\n                <th matTooltip=\\\"Activity Name\\\" scope=\\\"col\\\">A Name</th>\\r\\n                <th matTooltip=\\\"Labour EmpType\\\" scope=\\\"col\\\">LabourType</th>\\r\\n                <th matTooltip=\\\"Employee Name\\\" scope=\\\"col\\\">E Name</th>\\r\\n                <th matTooltip=\\\"Macine Id\\\" scope=\\\"col\\\">Macine Id</th>\\r\\n                <th>\\r\\n                  <button mat-icon-button matTooltip=\\\"Refresh\\\" color=\\\"accent\\\" (click)=\\\"refresh()\\\">\\r\\n                    <mat-icon>refresh</mat-icon>\\r\\n                  </button>\\r\\n                </th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let labour of labourMasters1;let i=index;\\\">\\r\\n                <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                <td>{{labour.activityName}}</td>\\r\\n                <td>{{labour.labourEmpType }}</td>\\r\\n                <td>{{labour.employeeName}}</td>\\r\\n                <td>{{labour.machineId}}</td>\\r\\n                <td>\\r\\n                  <button mat-icon-button matTooltip=\\\"EditLabourMaster\\\" color=\\\"accent\\\" (click)=\\\"editLabourMaster(i,labour._id,labour.activityName,labour.labourEmpType,labour.workingType,labour.ratePerKg,labour.ratePerHour,labour.otHours,labour.employeeId,labour.employeeName,labour.machineId,labour.paintingType)\\\">\\r\\n                    <mat-icon>edit</mat-icon>\\r\\n                  </button>\\r\\n                  <button mat-icon-button matTooltip=\\\"DeleteLabourMaster\\\" color=\\\"accent\\\" (click)=\\\"deleteLabourMaster(i,labour._id)\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                  </button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".example-card {\\n  width: 100%;\\n  margin-top: 50px; }\\n\\nmat-card {\\n  max-width: 100%; }\\n\\nmat-form-field {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 18px;\\n  width: 100%; }\\n\\nh6 {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-weight: bold;\\n  font-size: 18px;\\n  width: 100%; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-left: 0px;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -40px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\ntr {\\n  padding-top: 1px; }\\n\\nmat-icon {\\n  font-size: 18px;\\n  margin-top: 1px; }\\n\\ntable tbody tr td {\\n  padding: 0px !important;\\n  vertical-align: inherit !important; }\\n\\nth {\\n  font-family: 'Lora', serif;\\n  font-size: 14px;\\n  color: #f73378; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9tYXN0ZXIvcHJvZHVjdGlvbi1tYXN0ZXIvbGFib3VyLW1hc3Rlci9FOlxcVnBfV1NcXGZvdW5kcnktY2xpZW50L3NyY1xcYXBwXFxmb3VuZHJ5XFxtYXN0ZXJcXHByb2R1Y3Rpb24tbWFzdGVyXFxsYWJvdXItbWFzdGVyXFxsYWJvdXItbWFzdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0MsV0FBVTtFQUNWLGdCQUFnQixFQUFBOztBQUVqQjtFQUNFLGVBQWUsRUFBQTs7QUFFakI7RUFDRSxrQkFBa0I7RUFDbEIsMEJBQTBCO0VBQzFCLGVBQWU7RUFDZixXQUFXLEVBQUE7O0FBRWI7RUFDRSxrQkFBa0I7RUFDbEIsMEJBQTBCO0VBQzFCLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsV0FBVyxFQUFBOztBQUViO0VBQ0UsZ0NBQWdDO0VBQ2hDLDRCQUE0QjtFQUM1Qiw2QkFBNkI7RUFDN0IseUJBQXlCO0VBQ3pCLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osWUFBWTtFQUNaLDBCQUEwQixFQUFBOztBQUUxQjtFQUNBLGdCQUFnQixFQUFBOztBQUVoQjtFQUNFLGVBQWU7RUFDZixlQUFlLEVBQUE7O0FBRWpCO0VBQ0EsdUJBQXVCO0VBQ3ZCLGtDQUFrQyxFQUFBOztBQUVsQztFQUNFLDBCQUEwQjtFQUN4QixlQUFlO0VBQ2YsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZm91bmRyeS9tYXN0ZXIvcHJvZHVjdGlvbi1tYXN0ZXIvbGFib3VyLW1hc3Rlci9sYWJvdXItbWFzdGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY2FyZHtcclxuIHdpZHRoOjEwMCU7XHJcbiBtYXJnaW4tdG9wOiA1MHB4O1xyXG59XHJcbm1hdC1jYXJke1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxufVxyXG5tYXQtZm9ybS1maWVsZHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbmg2e1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLmV4YW1wbGUtY2FyZDF7XHJcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDEwcHg7XHJcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMTBweDtcclxuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjczMzc4O1xyXG4gIHBhZGRpbmctbGVmdDogMHB4O1xyXG4gIHBhZGRpbmctdG9wOiAxcHg7XHJcbiAgbWFyZ2luLXRvcDogLTQwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IC00MHB4O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBoZWlnaHQ6IDM1cHg7XHJcbiAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgfVxyXG4gIHRye1xyXG4gIHBhZGRpbmctdG9wOiAxcHg7XHJcbiAgfVxyXG4gIG1hdC1pY29ue1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMXB4O1xyXG4gICAgfVxyXG4gIHRhYmxlIHRib2R5IHRyIHRke1xyXG4gIHBhZGRpbmc6IDBweCAhaW1wb3J0YW50O1xyXG4gIHZlcnRpY2FsLWFsaWduOiBpbmhlcml0ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIHRoe1xyXG4gICAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgY29sb3I6ICNmNzMzNzg7XHJcbiAgfVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ProductionMasterService } from '../production-master.service';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { NgForm } from '@angular/forms';\r\nimport { LabourMaster } from './labour-master';\r\nimport { ShotBlastingMaster } from '../shot-blasting-master/shot-blasting-master';\r\nimport { FettlingMaster } from '../fettling-master/fettling-master';\r\nimport { PaintingMaster } from '../painting-master/painting-master';\r\nimport { EmployeeService } from '../../../employee/employee.service';\r\nimport { Employee } from '../../../employee/employee';\r\nimport { MasterService } from '../../master.service';\r\nimport { ActivityMaster } from '../../activity-master/activity-master';\r\n@Component({\r\n  selector: 'app-labour-master',\r\n  templateUrl: './labour-master.component.html',\r\n  styleUrls: ['./labour-master.component.scss']\r\n})\r\nexport class LabourMasterComponent implements OnInit {\r\n\r\n  // displayedColumns: String[] = ['machineId', 'perKgCost', 'status', 'actions'];\r\n\r\n  public shotBlastingMasters: ShotBlastingMaster[];\r\n  public fettlingMasters: FettlingMaster[];\r\n  public paintingMasters: PaintingMaster[];\r\n  public labourMaster: LabourMaster;\r\n  public labourMasters: LabourMaster[];\r\n  public labourMasters1: LabourMaster[];\r\n  public activityMasters: ActivityMaster[];\r\n  public employees: Employee[];\r\n  paintingMaster: any;\r\n  machineId: any;\r\n  private notifier: NotifierService;\r\n  Option = [{ employeeName: '', machineId: '' }];\r\n\r\n  constructor(public productionMasterService: ProductionMasterService, public employeeService: EmployeeService,\r\n    public masterService: MasterService, notifierService: NotifierService) {\r\n    this.notifier = notifierService;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.labourMaster = new LabourMaster();\r\n    console.log('test', this.labourMaster._id);\r\n    this.getAllActivity();\r\n    this.getContractLabourMasters();\r\n    this.getPermanentLabourMasters();\r\n    this.getAllPainting();\r\n  }\r\n\r\n\r\n  getAllActivity() {\r\n    this.masterService.getAllActivityMaster().subscribe((data) => {\r\n      this.activityMasters = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getContractLabourMasters() {\r\n    this.productionMasterService.getContractLabourMasters().subscribe((data) => {\r\n      this.labourMasters = data;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  getPermanentLabourMasters() {\r\n    this.productionMasterService.getPermanentLabourMasters().subscribe((data) => {\r\n      this.labourMasters1 = data;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  saveLabourMaster(exampleForm: NgForm) {\r\n    if (this.labourMaster._id === undefined || this.labourMaster._id === '') {\r\n      this.labourMaster.createdBy = localStorage.getItem('user');\r\n      console.log('this.labourMaster', this.labourMaster);\r\n      this.productionMasterService.saveLabourMaster(this.labourMaster).subscribe((data) => {\r\n        this.notifier.notify('success', 'Saved Successfully');\r\n        this.getContractLabourMasters();\r\n        this.getPermanentLabourMasters();\r\n        exampleForm.resetForm();\r\n      }, error => {\r\n        this.notifier.notify('error', 'Labour Master may already exists');\r\n      });\r\n    } else {\r\n      console.log(this.labourMaster);\r\n      this.labourMaster.modifiedBy = localStorage.getItem('user');\r\n      if (this.labourMaster.labourEmpType === 'Contract' && this.labourMaster.workingType === 'KG') {\r\n        this.labourMaster.ratePerHour = 0;\r\n        this.labourMaster.otHours = 0;\r\n      } else if (this.labourMaster.labourEmpType === 'Contract' && this.labourMaster.workingType === 'HOUR') {\r\n        this.labourMaster.ratePerKg = 0;\r\n      }\r\n      this.productionMasterService.updateLabourMaster(this.labourMaster).subscribe((data) => {\r\n        this.notifier.notify('success', 'Updated Successfully');\r\n        this.getContractLabourMasters();\r\n        this.getPermanentLabourMasters();\r\n        exampleForm.resetForm();\r\n        this.labourMaster._id = undefined;\r\n      }, (err) => {\r\n        this.notifier.notify('error', 'Not Update');\r\n      });\r\n    }\r\n  }\r\n\r\n  /*Edit Labour Master */\r\n  editLabourMaster(i: number, _id: string, activityName: string, labourEmpType: string, workingType: string,\r\n    ratePerKg: number, ratePerHour: number, otHours: number, employeeId: string, employeeName: string,\r\n    machineId: string, paintingType: string) {\r\n    this.labourMaster._id = _id;\r\n    this.labourMaster.activityName = activityName;\r\n    this.labourMaster.labourEmpType = labourEmpType;\r\n    this.labourMaster.workingType = workingType;\r\n    this.labourMaster.ratePerKg = ratePerKg;\r\n    this.labourMaster.ratePerHour = ratePerHour;\r\n    this.labourMaster.otHours = otHours;\r\n    this.labourMaster.employeeId = employeeId;\r\n    this.labourMaster.employeeName = employeeName;\r\n    this.labourMaster.machineId = machineId;\r\n    this.labourMaster.paintingType = paintingType;\r\n    console.log(this.labourMaster);\r\n    this.choosePermanentEmployeesAndMachines(this.labourMaster.labourEmpType, this.labourMaster.activityName);\r\n  }\r\n\r\n\r\n\r\n  /**delete Labour details */\r\n  deleteLabourMaster(i: Number, _id: string) {\r\n    this.labourMaster._id = _id;\r\n    this.labourMaster.modifiedBy = localStorage.getItem('user');\r\n    this.productionMasterService.deleteLabourMaster(this.labourMaster).subscribe((data) => {\r\n      this.notifier.notify('success', 'Deleted Successfully');\r\n      this.getContractLabourMasters();\r\n      this.getPermanentLabourMasters();\r\n      this.labourMaster._id = undefined;\r\n    }, (err) => {\r\n      this.notifier.notify('error', 'Not Delete');\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.getContractLabourMasters();\r\n    this.getPermanentLabourMasters();\r\n  }\r\n\r\n  cancel(exampleForm: NgForm) {\r\n    exampleForm.resetForm();\r\n    this.labourMaster._id = '';\r\n  }\r\n\r\n  getEmployeeId(empName: string) {\r\n    this.employees.forEach(element => {\r\n      if (element.empName === empName) {\r\n        this.labourMaster.employeeId = element._id;\r\n      }\r\n    });\r\n  }\r\n\r\n  getAllPainting() {\r\n    this.productionMasterService.getAllPainting().subscribe((data) => {\r\n      this.paintingMasters = data;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  checkMachineId(machineId: string) {\r\n    this.labourMasters1.forEach(res => {\r\n      if (res.employeeName === this.labourMaster.employeeName && res.machineId === machineId) {\r\n        this.labourMaster.machineId = '';\r\n        console.log(this.labourMaster);\r\n        this.notifier.notify('error', 'Already the employee assign to the same machine');\r\n      }\r\n    });\r\n  }\r\n\r\n  checkPantingType(paintingType: string) {\r\n    this.labourMasters1.forEach(res => {\r\n      if (res.employeeName === this.labourMaster.employeeName && res.paintingType === paintingType) {\r\n        this.labourMaster.paintingType = '';\r\n        this.notifier.notify('error', 'Already the employee assign to the same paint type');\r\n      }\r\n    });\r\n  }\r\n  choosePermanentEmployeesAndMachines(labourEmpType: string, activityName: string) {\r\n    if (this.labourMaster._id === undefined) {\r\n      if (labourEmpType === 'Permanent') {\r\n        this.labourMasters.forEach(res => {\r\n          if (res.activityName === activityName) {\r\n            if (res.labourEmpType !== labourEmpType) {\r\n              this.labourMaster.labourEmpType = '';\r\n              this.notifier.notify('error', 'Activity Working type already exists');\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        this.labourMasters.forEach(res => {\r\n          if (res.activityName === activityName) {\r\n            if (res.labourEmpType === labourEmpType) {\r\n              this.labourMaster.labourEmpType = '';\r\n              this.notifier.notify('error', 'Activity Working type already exists');\r\n            }\r\n          }\r\n        });\r\n        this.labourMasters1.forEach(res1 => {\r\n          if (res1.activityName === activityName) {\r\n            if (res1.labourEmpType !== labourEmpType) {\r\n              this.labourMaster.labourEmpType = '';\r\n              this.notifier.notify('error', 'Activity Working type already exists');\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    if (labourEmpType === 'Permanent') {\r\n      this.employeeService.getParticularTypeEmployees(activityName).subscribe((data1) => {\r\n        this.employees = data1;\r\n        this.productionMasterService.getMachineDetailsByType(activityName).subscribe(data => {\r\n          this.machineId = data;\r\n        }, error => {\r\n          console.log(error);\r\n        });\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n    }\r\n  }\r\n}\r\n","export class LabourMaster {\r\n  _id: string;\r\n  activityName: string;\r\n  labourEmpType: string;\r\n  workingType: string;\r\n  ratePerKg: number;\r\n  ratePerHour: number;\r\n  otHours: number;\r\n  employeeId: string;\r\n  employeeName: string;\r\n  paintingType: string;\r\n  machineId: string;\r\n  createdBy: String;\r\n  modifiedBy: String;\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-7 col-md-12 col-sm-12\\\">\\r\\n      <mat-card class=\\\"example-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>Permanent Employee</mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content [style.overflow]=\\\"'auto'\\\" [style.height.px]=\\\"'340'\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-striped\\\" striped=\\\"true\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th scope=\\\"col\\\">No</th>\\r\\n                  <th matTooltip=\\\"Bought Date\\\" scope=\\\"col\\\">Bought Date</th>\\r\\n                  <th matTooltip=\\\"Replacement Date\\\" scope=\\\"col\\\">Replacement Date</th>\\r\\n                  <th matTooltip=\\\"Total Cost\\\" scope=\\\"col\\\">Total Cost </th>\\r\\n                  <th matTooltip=\\\"No Of Hours\\\" scope=\\\"col\\\">No Of Hours</th>\\r\\n                  <th matTooltip=\\\"Per Hour Cost\\\" scope=\\\"col\\\">PerHourCost</th>\\r\\n                  <th>\\r\\n                    <button mat-icon-button matTooltip=\\\"Refresh\\\" color=\\\"accent\\\" (click)=\\\"refresh()\\\">\\r\\n                      <mat-icon>refresh</mat-icon>\\r\\n                    </button>\\r\\n                  </th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let lpg of lpgMasters;let i=index;\\\">\\r\\n                  <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                  <td>{{lpg.boughtDate| date:'MMM d, y'}}</td>\\r\\n                  <td>{{lpg.replaceDate | date:'MMM d, y' }}</td>\\r\\n                  <td style=\\\"text-align: right\\\">{{lpg.totalCost}}</td>\\r\\n                  <td style=\\\"text-align: right\\\">{{lpg.noOfHours}}</td>\\r\\n                  <td style=\\\"text-align: right\\\">{{lpg.perHourCost}}</td>\\r\\n                  <td>\\r\\n                    <button mat-icon-button matTooltip=\\\"Edit LpgMaster\\\" color=\\\"accent\\\"\\r\\n                      (click)=\\\"editLpgMaster(i,lpg._id,lpg.boughtDate,lpg.replaceDate,lpg.totalCost,lpg.noOfHours)\\\">\\r\\n                      <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button matTooltip=\\\"Delete LpgMaster\\\" color=\\\"accent\\\"\\r\\n                      (click)=\\\"deleteLpgMaster(i,lpg._id)\\\">\\r\\n                      <mat-icon>delete</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-5 col-md-12 col-sm-12\\\">\\r\\n      <mat-card class=\\\"example-card2\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>LPG Master</mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <form #exampleForm=\\\"ngForm\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput [max]=\\\"maxDate\\\" placeholder=\\\"BoughtDate\\\" [matDatepicker]=\\\"picker1\\\"\\r\\n               name=\\\"boughtDate\\\" [(ngModel)]=\\\"lpg.boughtDate\\\" readonly required>\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #picker1></mat-datepicker>\\r\\n              <!-- <mat-error>\\r\\n                <control-messages [control]=\\\"lpgForm.controls.boughtDate\\\"></control-messages>\\r\\n              </mat-error> -->\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"TotalCost\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"totalCost\\\"\\r\\n                [(ngModel)]=\\\"lpg.totalCost\\\" required>\\r\\n              <!-- <mat-error>\\r\\n                <control-messages [control]=\\\"lpgForm.controls.totalCost\\\"></control-messages>\\r\\n              </mat-error> -->\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"TotNoOfHoursLpgCanbeUsedApprox.\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"noOfHours\\\"\\r\\n                [(ngModel)]=\\\"lpg.noOfHours\\\" required>\\r\\n              <!-- <mat-error>\\r\\n                <control-messages [control]=\\\"lpgForm.controls.noOfHours\\\"></control-messages>\\r\\n              </mat-error> -->\\r\\n            </mat-form-field>\\r\\n          </form>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n          <button mat-raised-button color=\\\"accent\\\"  style=\\\"float: right;\\\" (click)=\\\"cancel(exampleForm)\\\">Reset</button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!exampleForm.valid\\\" style=\\\"float: right;\\\" (click)=\\\"saveLpgMaster(exampleForm)\\\"\\r\\n            >Save</button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n  <notifier-container></notifier-container>\\r\\n\"","module.exports = \".example-card2 {\\n  margin-top: 50px;\\n  margin-left: 150px;\\n  max-width: 350px;\\n  height: 350px; }\\n\\n.example-card {\\n  margin-top: 50px; }\\n\\nmat-form-field {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 18px;\\n  width: 100%; }\\n\\nh6 {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-weight: bold;\\n  font-size: 18px;\\n  width: 100%; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-left: 0px;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -40px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\ntr {\\n  padding-top: 1px; }\\n\\nmat-icon {\\n  font-size: 18px;\\n  margin-top: 1px; }\\n\\ntable tbody tr td {\\n  padding: 0px !important;\\n  vertical-align: inherit !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9tYXN0ZXIvcHJvZHVjdGlvbi1tYXN0ZXIvbHBnLW1hc3Rlci9FOlxcVnBfV1NcXGZvdW5kcnktY2xpZW50L3NyY1xcYXBwXFxmb3VuZHJ5XFxtYXN0ZXJcXHByb2R1Y3Rpb24tbWFzdGVyXFxscGctbWFzdGVyXFxscGctbWFzdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsYUFBYSxFQUFBOztBQUVmO0VBQ0UsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0Usa0JBQWtCO0VBQ2xCLDBCQUEwQjtFQUMxQixlQUFlO0VBQ2YsV0FBVyxFQUFBOztBQUViO0VBQ0Usa0JBQWtCO0VBQ2xCLDBCQUEwQjtFQUMxQixpQkFBaUI7RUFDakIsZUFBZTtFQUNmLFdBQVcsRUFBQTs7QUFFYjtFQUNFLGdDQUFnQztFQUNoQyw0QkFBNEI7RUFDNUIsNkJBQTZCO0VBQzdCLHlCQUF5QjtFQUN6QixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFlBQVk7RUFDWiwwQkFBMEIsRUFBQTs7QUFFMUI7RUFDQSxnQkFBZ0IsRUFBQTs7QUFFaEI7RUFDRSxlQUFlO0VBQ2YsZUFBZSxFQUFBOztBQUVqQjtFQUNBLHVCQUF1QjtFQUN2QixrQ0FBa0MsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvbWFzdGVyL3Byb2R1Y3Rpb24tbWFzdGVyL2xwZy1tYXN0ZXIvbHBnLW1hc3Rlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNhcmQye1xyXG4gIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDE1MHB4O1xyXG4gIG1heC13aWR0aDogMzUwcHg7XHJcbiAgaGVpZ2h0OiAzNTBweDtcclxufVxyXG4uZXhhbXBsZS1jYXJke1xyXG4gIG1hcmdpbi10b3A6IDUwcHg7XHJcbn1cclxuXHJcbm1hdC1mb3JtLWZpZWxke1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuaDZ7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4uZXhhbXBsZS1jYXJkMXtcclxuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMTBweDtcclxuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxMHB4O1xyXG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmNzMzNzg7XHJcbiAgcGFkZGluZy1sZWZ0OiAwcHg7XHJcbiAgcGFkZGluZy10b3A6IDFweDtcclxuICBtYXJnaW4tdG9wOiAtNDBweDtcclxuICBtYXJnaW4tbGVmdDogLTQwcHg7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGhlaWdodDogMzVweDtcclxuICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICB9XHJcbiAgdHJ7XHJcbiAgcGFkZGluZy10b3A6IDFweDtcclxuICB9XHJcbiAgbWF0LWljb257XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxcHg7XHJcbiAgICB9XHJcbiAgdGFibGUgdGJvZHkgdHIgdGR7XHJcbiAgcGFkZGluZzogMHB4ICFpbXBvcnRhbnQ7XHJcbiAgdmVydGljYWwtYWxpZ246IGluaGVyaXQgIWltcG9ydGFudDtcclxuICB9XHJcbiJdfQ== */\"","import { LpgMaster } from './lpg-master';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ProductionMasterService } from '../production-master.service';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { NgForm } from '@angular/forms';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ValidationService } from '../../../validation/validation-service';\r\n\r\n@Component({\r\n  selector: 'app-lpg-master',\r\n  templateUrl: './lpg-master.component.html',\r\n  styleUrls: ['./lpg-master.component.scss']\r\n})\r\nexport class LpgMasterComponent implements OnInit {\r\n  lpgForm: any;\r\n  dataSource;\r\n  maxDate = new Date();\r\n  public lpgMasters: LpgMaster[];\r\n  public lpg: LpgMaster;\r\n  private notifier: NotifierService;\r\n\r\n  constructor(public productionMasterService: ProductionMasterService, notifierService: NotifierService,\r\n    private formBuilder: FormBuilder) {\r\n    this.notifier = notifierService;\r\n    this.lpgForm = this.formBuilder.group({\r\n      'boughtDate': ['', [Validators.required]],\r\n      'totalCost': ['', [Validators.required, ValidationService.numberValidator]],\r\n      'noOfHours': ['', [Validators.required, ValidationService.numberValidator]],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.lpg = new LpgMaster();\r\n    this.getAllLpgMasterDetails();\r\n  }\r\n\r\n\r\n\r\n  /** getAllLpgMasterDetails*/\r\n  getAllLpgMasterDetails() {\r\n    this.productionMasterService.getLpgMaster().subscribe((data) => {\r\n      this.lpgMasters = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n\r\n  }\r\n\r\n  /**save the lPG master details */\r\n  saveLpgMaster(exampleForm: NgForm) {\r\n    console.log('this.lpg', this.lpg);\r\n    if (this.lpg._id === undefined || this.lpg._id === '') {\r\n      this.lpg.createdBy = localStorage.getItem('user');\r\n      this.productionMasterService.saveLpgMaster(this.lpg).subscribe((data) => {\r\n        this.notifier.notify('success', 'Saved Successfully');\r\n        this.getAllLpgMasterDetails();\r\n        exampleForm.resetForm();\r\n      }, (err) => {\r\n        this.notifier.notify('error', 'Not Save');\r\n      });\r\n    } else {\r\n      this.lpg.modifiedBy = localStorage.getItem('user');\r\n      this.productionMasterService.updateLpgMaster(this.lpg).subscribe((data) => {\r\n        this.notifier.notify('success', 'Updated Successfully');\r\n        this.getAllLpgMasterDetails();\r\n        exampleForm.resetForm();\r\n        this.lpg._id = '';\r\n      }, (err) => {\r\n        this.notifier.notify('error', 'Not Update');\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  /**edit the Lpg master details */\r\n  editLpgMaster(i: Number, _id: string, boughtDate: string, replaceDate: string, totalCost: number, noOfHours: number) {\r\n    this.lpg._id = _id;\r\n    this.lpg.boughtDate = boughtDate;\r\n    this.lpg.replaceDate = replaceDate;\r\n    this.lpg.totalCost = totalCost;\r\n    this.lpg.noOfHours = noOfHours;\r\n\r\n  }\r\n\r\n  deleteLpgMaster(i: number, _id: string) {\r\n    this.lpg.modifiedBy = localStorage.getItem('user');\r\n    this.lpg._id = _id;\r\n    this.productionMasterService.deleteLpgMaster(this.lpg).subscribe((data) => {\r\n      this.notifier.notify('success', 'Deleted Successfully');\r\n      this.getAllLpgMasterDetails();\r\n      this.lpg._id = '';\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  refresh() {\r\n    this.getAllLpgMasterDetails();\r\n  }\r\n\r\n  cancel(exampleForm: NgForm) {\r\n    exampleForm.resetForm();\r\n  }\r\n\r\n\r\n}\r\n","export class LpgMaster {\r\n  _id: string;\r\n  boughtDate: string;\r\n  replaceDate: string;\r\n  createdBy: string;\r\n  modifiedBy: string;\r\n  totalCost: number;\r\n  noOfHours: number;\r\n  perHourCost: number;\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-7 col-md-12 col-sm-12\\\">\\r\\n      <mat-card class=\\\"example-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>Machine Details</mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content [style.overflow]=\\\"'auto'\\\" [style.height.px]=\\\"'340'\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-striped\\\" striped=\\\"true\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th scope=\\\"col\\\">No</th>\\r\\n                  <th matTooltip=\\\"Activity Type\\\" scope=\\\"col\\\">Activity Name</th>\\r\\n                  <th matTooltip=\\\"Machine Id\\\" scope=\\\"col\\\">Machine Id</th>\\r\\n                  <th matTooltip=\\\"Machine Name\\\" scope=\\\"col\\\">Machine Name</th>\\r\\n                  <th matTooltip=\\\"Activity Type\\\" scope=\\\"col\\\">Painting Type</th>\\r\\n                  <th matTooltip=\\\"Machine Status\\\" scope=\\\"col\\\">Status</th>\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let machine of machineDetails;let i=index;\\\">\\r\\n                  <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                  <td>{{machine.activityType}}</td>\\r\\n                  <td>{{machine.machineId}}</td>\\r\\n                  <td>{{machine.machineName }}</td>\\r\\n                  <td>{{machine.paintingType}}</td>\\r\\n                  <td>{{machine.machineStatus}}</td>\\r\\n                  <td>\\r\\n                    <button mat-icon-button matTooltip=\\\"Edit MachineMaster\\\" color=\\\"accent\\\" (click)=\\\"editMachineMaster(i,machine._id,machine.machineId,machine.machineName,machine.activityType,machine.paintingType,machine.machineStatus)\\\">\\r\\n                      <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <!-- <button mat-icon-button matTooltip=\\\"DeleteMachineMaster\\\" color=\\\"accent\\\" (click)=\\\"deleteMachineMaster(i,machine._id)\\\">\\r\\n                      <mat-icon>delete</mat-icon>\\r\\n                    </button> -->\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-5 col-md-12 col-sm-12\\\">\\r\\n      <mat-card class=\\\"example-card2\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>Add Machine Master</mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <form #exampleForm=\\\"ngForm\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"machineDetail._id === undefined\\\">\\r\\n              <mat-select placeholder=\\\"Activity Type\\\" name=\\\"activityType\\\" [(ngModel)]=\\\"machineDetail.activityType\\\"\\r\\n                required>\\r\\n                <mat-option *ngFor=\\\"let activityMaster of activityMasters\\\" [value]=\\\"activityMaster.activityType\\\">\\r\\n                  {{activityMaster.activityType}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"machineDetail._id !== undefined\\\">\\r\\n              <input matInput placeholder=\\\"Activity Type\\\" name=\\\"activityType\\\" [(ngModel)]=\\\"machineDetail.activityType\\\" readonly\\r\\n                required>\\r\\n            </mat-form-field>\\r\\n            <div *ngIf=\\\"machineDetail.activityType != 'Painting'\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"MachineId\\\" [maxlength]=\\\"10\\\" name=\\\"machineId\\\" [(ngModel)]=\\\"machineDetail.machineId\\\" (change)=\\\"checkMachineId(machineDetail.machineId)\\\"\\r\\n                required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"MachineName\\\" [maxlength]=\\\"10\\\" name=\\\"machineName\\\" [(ngModel)]=\\\"machineDetail.machineName\\\" (change)=\\\"checkMachineName(machineDetail.machineName)\\\"\\r\\n                required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"machineDetail.activityType == 'Painting'\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Painting Type\\\" [maxlength]=\\\"10\\\" name=\\\"paintingType\\\" [(ngModel)]=\\\"machineDetail.paintingType\\\" (change)=\\\"checkPaintingType(machineDetail.paintingType)\\\"\\r\\n                  required>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <mat-select placeholder=\\\"Status\\\" appStringValidation=\\\"words\\\" name=\\\"machineStatus\\\" [(ngModel)]=\\\"machineDetail.machineStatus\\\"\\r\\n                required>\\r\\n                <mat-option value=\\\"Active\\\">Active</mat-option>\\r\\n                <mat-option value=\\\"Inactive\\\">InActive</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </form>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n          <button mat-raised-button color=\\\"accent\\\" style=\\\"float: right;\\\" (click)=\\\"cancel(exampleForm)\\\">Reset</button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!exampleForm.valid\\\" style=\\\"float: right;\\\" (click)=\\\"saveMachineDetails(exampleForm)\\\">Save</button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n  <notifier-container></notifier-container>\\r\\n\"","module.exports = \".example-card2 {\\n  margin-top: 50px;\\n  margin-left: 150px;\\n  max-width: 350px;\\n  height: 400px; }\\n\\n.example-card {\\n  margin-top: 50px; }\\n\\nmat-form-field {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 18px;\\n  width: 100%; }\\n\\nh6 {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-weight: bold;\\n  font-size: 18px;\\n  width: 100%; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-left: 0px;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -40px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\ntr {\\n  padding-top: 1px; }\\n\\nmat-icon {\\n  font-size: 18px;\\n  margin-top: 1px; }\\n\\ntable tbody tr td {\\n  padding: 0px !important;\\n  vertical-align: inherit !important; }\\n\\nth {\\n  font-family: 'Lora', serif;\\n  font-size: 14px;\\n  color: #f73378; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9tYXN0ZXIvcHJvZHVjdGlvbi1tYXN0ZXIvbWFjaGluZS1kZXRhaWxzL0U6XFxWcF9XU1xcZm91bmRyeS1jbGllbnQvc3JjXFxhcHBcXGZvdW5kcnlcXG1hc3RlclxccHJvZHVjdGlvbi1tYXN0ZXJcXG1hY2hpbmUtZGV0YWlsc1xcbWFjaGluZS1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsYUFBYSxFQUFBOztBQUVmO0VBQ0UsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0Usa0JBQWtCO0VBQ2xCLDBCQUEwQjtFQUMxQixlQUFlO0VBQ2YsV0FBVyxFQUFBOztBQUViO0VBQ0Usa0JBQWtCO0VBQ2xCLDBCQUEwQjtFQUMxQixpQkFBaUI7RUFDakIsZUFBZTtFQUNmLFdBQVcsRUFBQTs7QUFFYjtFQUNFLGdDQUFnQztFQUNoQyw0QkFBNEI7RUFDNUIsNkJBQTZCO0VBQzdCLHlCQUF5QjtFQUN6QixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFlBQVk7RUFDWiwwQkFBMEIsRUFBQTs7QUFFMUI7RUFDQSxnQkFBZ0IsRUFBQTs7QUFFaEI7RUFDRSxlQUFlO0VBQ2YsZUFBZSxFQUFBOztBQUVqQjtFQUNBLHVCQUF1QjtFQUN2QixrQ0FBa0MsRUFBQTs7QUFFbEM7RUFDRSwwQkFBMEI7RUFDeEIsZUFBZTtFQUNmLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvbWFzdGVyL3Byb2R1Y3Rpb24tbWFzdGVyL21hY2hpbmUtZGV0YWlscy9tYWNoaW5lLWRldGFpbHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jYXJkMntcclxuICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAxNTBweDtcclxuICBtYXgtd2lkdGg6IDM1MHB4O1xyXG4gIGhlaWdodDogNDAwcHg7XHJcbn1cclxuLmV4YW1wbGUtY2FyZHtcclxuICBtYXJnaW4tdG9wOiA1MHB4O1xyXG59XHJcblxyXG5tYXQtZm9ybS1maWVsZHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbmg2e1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLmV4YW1wbGUtY2FyZDF7XHJcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDEwcHg7XHJcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMTBweDtcclxuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjczMzc4O1xyXG4gIHBhZGRpbmctbGVmdDogMHB4O1xyXG4gIHBhZGRpbmctdG9wOiAxcHg7XHJcbiAgbWFyZ2luLXRvcDogLTQwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IC00MHB4O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBoZWlnaHQ6IDM1cHg7XHJcbiAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgfVxyXG4gIHRye1xyXG4gIHBhZGRpbmctdG9wOiAxcHg7XHJcbiAgfVxyXG4gIG1hdC1pY29ue1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMXB4O1xyXG4gICAgfVxyXG4gIHRhYmxlIHRib2R5IHRyIHRke1xyXG4gIHBhZGRpbmc6IDBweCAhaW1wb3J0YW50O1xyXG4gIHZlcnRpY2FsLWFsaWduOiBpbmhlcml0ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIHRoe1xyXG4gICAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgY29sb3I6ICNmNzMzNzg7XHJcbiAgfVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MasterService } from '../../master.service';\r\nimport { ProductionMasterService } from '../production-master.service';\r\nimport { ActivityMaster } from '../../activity-master/activity-master';\r\nimport { MachineDetails } from './machine-details';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { NgForm } from '@angular/forms';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ValidationService } from '../../../validation/validation-service';\r\n@Component({\r\n  selector: 'app-machine-details',\r\n  templateUrl: './machine-details.component.html',\r\n  styleUrls: ['./machine-details.component.scss']\r\n})\r\nexport class MachineDetailsComponent implements OnInit {\r\n  machineForm: any;\r\n  public activityMasters: ActivityMaster[];\r\n  public machineDetail: MachineDetails;\r\n  public machineDetails: MachineDetails[];\r\n  private notifier: NotifierService;\r\n  constructor(\r\n    public masterService: MasterService, notifierService: NotifierService, private formBuilder: FormBuilder,\r\n    public productionMasterService: ProductionMasterService\r\n  ) {\r\n    this.notifier = notifierService;\r\n    this.machineForm = this.formBuilder.group({\r\n      'activityType': ['', [Validators.required, ValidationService.nameValidation]],\r\n      'machineName': ['', [Validators.required]],\r\n      'machineId': ['', [Validators.required]],\r\n      'machineStatus': ['', [Validators.required]],\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.machineDetail = new MachineDetails();\r\n    this.getAllActivity();\r\n    this.getAllMachineDetails();\r\n  }\r\n  getAllActivity() {\r\n    this.masterService.getAllActivityMaster().subscribe(\r\n      data => {\r\n        this.activityMasters = data;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllMachineDetails() {\r\n    this.productionMasterService.getAllMachineDetails().subscribe(\r\n      data => {\r\n        this.machineDetails = data;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  checkMachineId(machineId: string) {\r\n    this.machineDetails.forEach(res => {\r\n      if (this.machineDetail.activityType === res.activityType && machineId === res.machineId) {\r\n        this.machineDetail.machineId = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  checkMachineName(machineName: string) {\r\n    this.machineDetails.forEach(res => {\r\n      if (this.machineDetail.machineId === res.machineId && machineName === res.machineName) {\r\n        this.machineDetail.machineName = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  checkPaintingType(paintingType: string) {\r\n    this.machineDetails.forEach(res => {\r\n      if (this.machineDetail.activityType === res.activityType && paintingType === res.paintingType) {\r\n        this.machineDetail.paintingType = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  saveMachineDetails(exampleForm: NgForm) {\r\n    console.log('this.machineDetail', this.machineDetail);\r\n    if (this.machineDetail._id === undefined || this.machineDetail._id === '') {\r\n      this.machineDetail.createdBy = localStorage.getItem('user');\r\n      this.productionMasterService.saveMachineDetails(this.machineDetail).subscribe((data) => {\r\n        this.notifier.notify('success', 'Saved Successfully');\r\n        this.getAllMachineDetails();\r\n        exampleForm.resetForm();\r\n      }, (err) => {\r\n        this.notifier.notify('error', 'Not Save');\r\n      });\r\n    } else {\r\n      this.machineDetail.modifiedBy = localStorage.getItem('user');\r\n      this.productionMasterService.updateMachineDetails(this.machineDetail).subscribe((data) => {\r\n        this.notifier.notify('success', 'Updated Successfully');\r\n        this.getAllMachineDetails();\r\n        exampleForm.resetForm();\r\n        this.machineDetail._id = '';\r\n      }, (err) => {\r\n        this.notifier.notify('error', 'Not Update');\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  /**edit the MachineMaste details */\r\n  editMachineMaster(i: Number, _id: string, machineId: string, machineName: string, activityType: string, paintingType: string,\r\n     machineStatus: string) {\r\n    this.machineDetail._id = _id;\r\n    this.machineDetail.machineId = machineId;\r\n    this.machineDetail.machineName = machineName;\r\n    this.machineDetail.activityType = activityType;\r\n    this.machineDetail.paintingType = paintingType;\r\n    this.machineDetail.machineStatus = machineStatus;\r\n  }\r\n\r\n  deleteMachineMaster(i: number, _id: string) {\r\n    this.machineDetail.modifiedBy = localStorage.getItem('user');\r\n    this.machineDetail._id = _id;\r\n    this.productionMasterService.deleteMachineDetails(this.machineDetail).subscribe((data) => {\r\n      this.notifier.notify('success', 'Deleted Successfully');\r\n      this.getAllMachineDetails();\r\n      this.machineDetail._id = undefined;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  refresh() {\r\n    this.getAllMachineDetails();\r\n\r\n  }\r\n\r\n  cancel(exampleForm: NgForm) {\r\n    this.machineDetail._id = undefined;\r\n    exampleForm.resetForm();\r\n  }\r\n}\r\n","export class MachineDetails {\r\n  _id: string;\r\n  machineId: string;\r\n  machineName: string;\r\n  activityType: string;\r\n  machineStatus: string;\r\n  paintingType: string;\r\n  createdBy: string;\r\n  modifiedBy: string;\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n      <mat-card class=\\\"example-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>Painting </mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content [style.overflow]=\\\"'auto'\\\" [style.height.px]=\\\"'440'\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-striped\\\" striped=\\\"true\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th scope=\\\"col\\\">No</th>\\r\\n                  <th matTooltip=\\\"Painting Type\\\" scope=\\\"col\\\">Painting Type</th>\\r\\n                  <th matTooltip=\\\"Paint Name\\\" scope=\\\"col\\\">Paint Name</th>\\r\\n                  <th matTooltip=\\\"per Litre Cost\\\" scope=\\\"col\\\">Litre Cost</th>\\r\\n                  <th matTooltip=\\\"Status\\\" scope=\\\"col\\\">Status</th>\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let painting of paintings;let i=index;\\\">\\r\\n                  <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                  <td>{{painting.paintingType}}</td>\\r\\n                  <td>{{painting.paintName}}</td>\\r\\n                  <td>{{painting.perLitreCost}}</td>\\r\\n                  <td>{{painting.status}}</td>\\r\\n                  <td>\\r\\n                    <button mat-icon-button matTooltip=\\\"Edit Painting Master\\\" color=\\\"accent\\\" (click)=\\\"editPainting(i,painting._id,painting.paintingType,painting.paintName,painting.perLitreCost,painting.status)\\\">\\r\\n                      <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <!-- <button mat-icon-button matTooltip=\\\"Edit Painting Master\\\" color=\\\"accent\\\" (click)=\\\"deletePainting(i,painting._id,painting.paintingType,painting.perLitreCost,painting.machineStatus)\\\">\\r\\n                      <mat-icon>delete</mat-icon>\\r\\n                    </button> -->\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n      <mat-card class=\\\"example-card2\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>Painting Master </mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <form #exampleForm=\\\"ngForm\\\" [formGroup]=\\\"paintingForm\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"painting._id === undefined\\\">\\r\\n              <mat-select placeholder=\\\"Painting Type\\\" name=\\\"paintingType\\\" formControlName=\\\"paintingType\\\" [(ngModel)]=\\\"painting.paintingType\\\"\\r\\n                required>\\r\\n                <mat-option *ngFor=\\\"let machineDetail of machineDetails\\\" [value]=\\\"machineDetail.paintingType\\\">\\r\\n                  {{machineDetail.paintingType}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error>\\r\\n                <control-messages [control]=\\\"paintingForm.controls.paintingType\\\"></control-messages>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"painting._id !== undefined\\\">\\r\\n              <input matInput placeholder=\\\"Painting Type\\\"  name=\\\"paintingType\\\"\\r\\n                formControlName=\\\"paintingType\\\" [(ngModel)]=\\\"painting.paintingType\\\" readonly>\\r\\n              <mat-error>\\r\\n                <control-messages [control]=\\\"paintingForm.controls.paintingType\\\"></control-messages>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"painting._id === undefined\\\">\\r\\n              <mat-select placeholder=\\\"Paint Name\\\" name=\\\"paintName\\\" formControlName=\\\"paintName\\\" [(ngModel)]=\\\"painting.paintName\\\"\\r\\n              (ngModelChange)=\\\"getPerKgCost(painting.paintName)\\\" required>\\r\\n                <mat-option *ngFor=\\\"let item of items\\\" [value]=\\\"item.itemName\\\">\\r\\n                  {{item.itemName}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error>\\r\\n                <control-messages [control]=\\\"paintingForm.controls.paintName\\\"></control-messages>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"painting._id !== undefined\\\">\\r\\n              <input matInput placeholder=\\\"Paint Name\\\"  name=\\\"paintName\\\"\\r\\n                formControlName=\\\"paintName\\\" [(ngModel)]=\\\"painting.paintName\\\" readonly>\\r\\n              <mat-error>\\r\\n                <control-messages [control]=\\\"paintingForm.controls.paintName\\\"></control-messages>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"PerLitreCost\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"perLitreCost\\\"\\r\\n                formControlName=\\\"perLitreCost\\\" [(ngModel)]=\\\"painting.perLitreCost\\\">\\r\\n              <mat-error>\\r\\n                <control-messages [control]=\\\"paintingForm.controls.perLitreCost\\\"></control-messages>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <mat-select placeholder=\\\"Status\\\" name=\\\"status\\\" formControlName=\\\"status\\\" [(ngModel)]=\\\"painting.status\\\"  >\\r\\n                <mat-option value=\\\"Active\\\">Active</mat-option>\\r\\n                <mat-option value=\\\"Inactive\\\">Inactive</mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error>\\r\\n                <control-messages [control]=\\\"paintingForm.controls.status\\\"></control-messages>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </form>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n            <button mat-raised-button color=\\\"accent\\\" style=\\\"float: right;\\\" (click)=\\\"cancel(exampleForm)\\\">Reset</button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!paintingForm.valid\\\" style=\\\"float: right;\\\" (click)=\\\"savePainting(exampleForm)\\\">Save</button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".example-card2 {\\n  margin-top: 50px;\\n  margin-left: 150px;\\n  max-width: 350px;\\n  height: 390px; }\\n\\n.example-card {\\n  margin-top: 50px; }\\n\\nmat-form-field {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 18px;\\n  width: 100%; }\\n\\nh6 {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-weight: bold;\\n  font-size: 18px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 16px; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-left: 0px;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -40px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\ntr {\\n  padding-top: 1px; }\\n\\nmat-icon {\\n  font-size: 18px;\\n  margin-top: 1px; }\\n\\ntable tbody tr td {\\n  padding: 0px !important;\\n  vertical-align: inherit !important; }\\n\\nth {\\n  font-family: 'Lora', serif;\\n  font-size: 14px;\\n  color: #f73378; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9tYXN0ZXIvcHJvZHVjdGlvbi1tYXN0ZXIvcGFpbnRpbmctbWFzdGVyL0U6XFxWcF9XU1xcZm91bmRyeS1jbGllbnQvc3JjXFxhcHBcXGZvdW5kcnlcXG1hc3RlclxccHJvZHVjdGlvbi1tYXN0ZXJcXHBhaW50aW5nLW1hc3RlclxccGFpbnRpbmctbWFzdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsYUFBYSxFQUFBOztBQUdqQjtFQUNFLGdCQUFnQixFQUFBOztBQUVsQjtFQUNJLGtCQUFrQjtFQUNsQiwwQkFBMEI7RUFDMUIsZUFBZTtFQUNmLFdBQVcsRUFBQTs7QUFFZjtFQUNJLGtCQUFrQjtFQUNsQiwwQkFBMEI7RUFDMUIsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixXQUFXLEVBQUE7O0FBRWI7RUFDRSxrQkFBa0I7RUFDbEIsMEJBQTBCO0VBQzFCLGVBQWUsRUFBQTs7QUFFbkI7RUFDRSxnQ0FBZ0M7RUFDaEMsNEJBQTRCO0VBQzVCLDZCQUE2QjtFQUM3Qix5QkFBeUI7RUFDekIsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixZQUFZO0VBQ1osMEJBQTBCLEVBQUE7O0FBRTFCO0VBQ0EsZ0JBQWdCLEVBQUE7O0FBRWhCO0VBQ0UsZUFBZTtFQUNmLGVBQWUsRUFBQTs7QUFFakI7RUFDQSx1QkFBdUI7RUFDdkIsa0NBQWtDLEVBQUE7O0FBRWxDO0VBQ0UsMEJBQTBCO0VBQ3hCLGVBQWU7RUFDZixjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9mb3VuZHJ5L21hc3Rlci9wcm9kdWN0aW9uLW1hc3Rlci9wYWludGluZy1tYXN0ZXIvcGFpbnRpbmctbWFzdGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY2FyZDJ7XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDE1MHB4O1xyXG4gICAgbWF4LXdpZHRoOiAzNTBweDtcclxuICAgIGhlaWdodDogMzkwcHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLWNhcmR7XHJcbiAgbWFyZ2luLXRvcDogNTBweDtcclxufVxyXG5tYXQtZm9ybS1maWVsZHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuaDZ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIC5leGFtcGxlLWZ1bGwtd2lkdGh7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxufVxyXG4uZXhhbXBsZS1jYXJkMXtcclxuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMTBweDtcclxuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxMHB4O1xyXG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmNzMzNzg7XHJcbiAgcGFkZGluZy1sZWZ0OiAwcHg7XHJcbiAgcGFkZGluZy10b3A6IDFweDtcclxuICBtYXJnaW4tdG9wOiAtNDBweDtcclxuICBtYXJnaW4tbGVmdDogLTQwcHg7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGhlaWdodDogMzVweDtcclxuICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICB9XHJcbiAgdHJ7XHJcbiAgcGFkZGluZy10b3A6IDFweDtcclxuICB9XHJcbiAgbWF0LWljb257XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxcHg7XHJcbiAgICB9XHJcbiAgdGFibGUgdGJvZHkgdHIgdGR7XHJcbiAgcGFkZGluZzogMHB4ICFpbXBvcnRhbnQ7XHJcbiAgdmVydGljYWwtYWxpZ246IGluaGVyaXQgIWltcG9ydGFudDtcclxuICB9XHJcbiAgdGh7XHJcbiAgICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICBjb2xvcjogI2Y3MzM3ODtcclxuICB9XHJcbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ProductionMasterService } from '../production-master.service';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { PaintingMaster } from '../painting-master/painting-master';\r\nimport { NgForm } from '@angular/forms';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ValidationService } from '../../../validation/validation-service';\r\nimport { MachineDetails } from '../machine-details/machine-details';\r\nimport { Items } from '../../../items/items';\r\nimport { ItemsService } from '../../../items/items.service';\r\nimport { StockService } from '../../../stock/stock.service';\r\n\r\n@Component({\r\n  selector: 'app-painting-master',\r\n  templateUrl: './painting-master.component.html',\r\n  styleUrls: ['./painting-master.component.scss']\r\n})\r\nexport class PaintingMasterComponent implements OnInit {\r\n  paintingForm: any;\r\n  private notifier: NotifierService;\r\n  public painting: PaintingMaster;\r\n  public paintings: PaintingMaster[];\r\n  public machineDetails: MachineDetails[];\r\n  public items: Items[];\r\n  public type;\r\n  public cost = true;\r\n  public itemType;\r\n  constructor(public productionMasterService: ProductionMasterService, notifierService: NotifierService,\r\n    private formBuilder: FormBuilder, public itemService: ItemsService, public stockService: StockService) {\r\n    this.notifier = notifierService;\r\n    this.paintingForm = this.formBuilder.group({\r\n      'paintingType': ['', [Validators.required, ValidationService.nameValidation]],\r\n      'paintName': ['', [Validators.required, ValidationService.nameValidation]],\r\n      'perLitreCost': ['', [Validators.required, ValidationService.numberValidator]],\r\n      'status': ['', [Validators.required, ValidationService.nameValidation]]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.type = 'Painting';\r\n    this.painting = new PaintingMaster();\r\n    this.getAllPainting();\r\n    this.getAllPaintingMachine(this.type);\r\n    this.getItemNames();\r\n  }\r\n\r\n\r\n  getAllPaintingMachine(type: string) {\r\n    this.productionMasterService.getMachineDetailsByType(type).subscribe((data) => {\r\n      this.machineDetails = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n\r\n  /**get all painting details */\r\n  getAllPainting() {\r\n    this.productionMasterService.getAllPainting().subscribe((data) => {\r\n      this.paintings = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getItemNames() {\r\n    this.itemType = 'McConsumable';\r\n    let itemCategory;\r\n    itemCategory = 'Painting';\r\n    this.itemService.getItemsByItemType(this.itemType, itemCategory).subscribe((data) => {\r\n      this.items = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getPerKgCost(itemName: string) {\r\n    this.paintings.forEach(res => {\r\n      if (res.paintName === itemName && res.paintingType === this.painting.paintingType) {\r\n        this.painting.paintName = '';\r\n        this.notifier.notify('error', 'Painting Name and Type already Exists');\r\n        this.cost = false;\r\n      }\r\n    });\r\n    if (this.cost === true) {\r\n      this.stockService.getMcConsumableStockByItemName(itemName).subscribe((data) => {\r\n        this.painting.perLitreCost = data.perKG;\r\n      }, (err) => {\r\n        console.log(err);\r\n      });\r\n    }\r\n\r\n  }\r\n  /**save the painting details */\r\n  savePainting(exampleForm: NgForm) {\r\n    if (this.painting._id === undefined || this.painting._id === '') {\r\n      this.painting.createdBy = localStorage.getItem('user');\r\n      this.productionMasterService.savePainting(this.painting).subscribe((data) => {\r\n        this.notifier.notify('success', 'Saved Successfully');\r\n        this.getAllPainting();\r\n        exampleForm.resetForm();\r\n      }, (err) => {\r\n        this.notifier.notify('error', 'Not Save');\r\n      });\r\n    } else {\r\n      this.painting.modifiedBy = localStorage.getItem('user');\r\n      this.productionMasterService.updatePainting(this.painting).subscribe((data) => {\r\n        this.notifier.notify('success', 'Updated Successfully');\r\n        this.getAllPainting();\r\n        exampleForm.resetForm();\r\n        this.painting._id = undefined;\r\n      }, (err) => {\r\n        this.notifier.notify('error', 'Not Update');\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  /** edit the painting details*/\r\n  editPainting(i: Number, _id: String, paintingType: String, paintName: string, perLitreCost: number, status: String) {\r\n    this.painting._id = _id;\r\n    this.painting.paintName = paintName;\r\n    this.painting.perLitreCost = perLitreCost;\r\n    this.painting.paintingType = paintingType;\r\n    this.painting.status = status;\r\n  }\r\n\r\n  /**delete painting details */\r\n  deletePainting(i: Number, _id: String) {\r\n    this.painting._id = _id;\r\n    this.painting.modifiedBy = localStorage.getItem('user');\r\n    this.productionMasterService.deletePainting(this.painting).subscribe((data) => {\r\n      this.notifier.notify('success', 'Deleted Successfully');\r\n      this.getAllPainting();\r\n      this.painting._id = '';\r\n    }, (err) => {\r\n      this.notifier.notify('error', 'Not Delete');\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.getAllPainting();\r\n  }\r\n\r\n  cancel(exampleForm: NgForm) {\r\n    this.painting._id = undefined;\r\n    exampleForm.resetForm();\r\n  }\r\n}\r\n","export class PaintingMaster {\r\n  _id: String;\r\n  paintingType: String;\r\n  paintName: string;\r\n  perLitreCost: number;\r\n  status: String;\r\n  createdBy: String;\r\n  modifiedBy: String;\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport { ProductionMasterComponent } from './production-master.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProductionMasterComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProductionMasterRoutingModule {}","module.exports = \"<mat-tab-group style=\\\"margin-top: 30px;\\\">\\r\\n    <mat-tab label=\\\"Machine Details\\\">\\r\\n        <app-machine-details></app-machine-details>\\r\\n      </mat-tab>\\r\\n  <mat-tab label=\\\"Shot Blasting\\\">\\r\\n    <app-shot-blasting-master></app-shot-blasting-master>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Fettling\\\">\\r\\n    <app-fettling-master></app-fettling-master>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Painting\\\">\\r\\n    <app-painting-master></app-painting-master>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Labour\\\">\\r\\n    <app-labour-master></app-labour-master>\\r\\n  </mat-tab>\\r\\n  <!-- <mat-tab label=\\\"LPG\\\">\\r\\n    <app-lpg-master></app-lpg-master>\\r\\n  </mat-tab> -->\\r\\n  <mat-tab label=\\\"Core\\\">\\r\\n    <app-core-master></app-core-master>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Composition\\\">\\r\\n    <app-raw-material-pre-data></app-raw-material-pre-data>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Department\\\">\\r\\n    <app-department></app-department>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Shift\\\">\\r\\n    <app-shift></app-shift>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Salary\\\">\\r\\n      <app-salary></app-salary>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Sand Disposal\\\">\\r\\n      <app-sand-disposal-master></app-sand-disposal-master>\\r\\n    </mat-tab>\\r\\n</mat-tab-group>\\r\\n<notifier-container></notifier-container>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvbWFzdGVyL3Byb2R1Y3Rpb24tbWFzdGVyL3Byb2R1Y3Rpb24tbWFzdGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-production-master',\r\n  templateUrl: './production-master.component.html',\r\n  styleUrls: ['./production-master.component.scss']\r\n})\r\nexport class ProductionMasterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductionMasterComponent } from './production-master.component';\r\nimport { ProductionMasterRoutingModule } from './production-master-routing.module';\r\nimport { ShotBlastingMasterComponent } from './shot-blasting-master/shot-blasting-master.component';\r\nimport { FettlingMasterComponent } from './fettling-master/fettling-master.component';\r\nimport { PaintingMasterComponent } from './painting-master/painting-master.component';\r\nimport { MaterialModule } from 'src/app/app.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\r\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { LabourMasterComponent } from './labour-master/labour-master.component';\r\nimport { LpgMasterComponent } from './lpg-master/lpg-master.component';\r\nimport { RawMaterialPreDataComponent } from './raw-material-pre-data/raw-material-pre-data.component';\r\nimport { MasterService } from '../master.service';\r\nimport { DepartmentComponent } from './department/department.component';\r\nimport { ShiftComponent } from './shift/shift.component';\r\nimport { DateInputsModule } from '@progress/kendo-angular-dateinputs';\r\nimport { SalaryComponent } from './salary/salary.component';\r\nimport { FoundryModule} from '../../../foundry/foundry.module';\r\nimport { SandDisposalMasterComponent } from './sand-disposal-master/sand-disposal-master.component';\r\nimport { ItemsService } from '../../items/items.service';\r\nimport { MachineDetailsComponent } from './machine-details/machine-details.component';\r\nimport { CoreMasterComponent } from './core-master/core-master.component';\r\nconst customNotifierOptions: NotifierOptions = {\r\n  position: {\r\n    horizontal: {\r\n      position: 'middle',\r\n      distance: 12\r\n    },\r\n    vertical: {\r\n      position: 'top',\r\n      distance: 50,\r\n      gap: 10\r\n    }\r\n  },\r\n  theme: 'material',\r\n  behaviour: {\r\n    autoHide: 1000,\r\n    onClick: 'hide',\r\n    onMouseover: 'pauseAutoHide',\r\n    showDismissButton: true,\r\n    stacking: 4\r\n  },\r\n  animations: {\r\n    enabled: true,\r\n    show: {\r\n      preset: 'slide',\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    hide: {\r\n      preset: 'fade',\r\n      speed: 300,\r\n      easing: 'ease',\r\n      offset: 50\r\n    },\r\n    shift: {\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    overlap: 10\r\n  }\r\n};\r\n\r\n@NgModule({\r\n  declarations: [ProductionMasterComponent, ShotBlastingMasterComponent, FettlingMasterComponent,SandDisposalMasterComponent,\r\n    PaintingMasterComponent, LabourMasterComponent, LpgMasterComponent, RawMaterialPreDataComponent, DepartmentComponent, ShiftComponent, SalaryComponent, MachineDetailsComponent, CoreMasterComponent],\r\n  imports: [\r\n    CommonModule, ProductionMasterRoutingModule, MaterialModule, FormsModule, DateInputsModule,\r\n    ReactiveFormsModule, NotifierModule.withConfig(customNotifierOptions),FoundryModule\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  providers: [MasterService,ItemsService]\r\n})\r\n\r\n\r\nexport class ProductionMasterModule { }\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <button mat-raised-button style=\\\"margin-top: 20px;\\\" color=\\\"primary\\\" (click)=\\\"enable()\\\">New Composition</button>\\r\\n  <div class=\\\"row\\\" style=\\\"margin-top: 30px;\\\" *ngIf=\\\"newData==true;\\\">\\r\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\r\\n      <mat-card>\\r\\n        <mat-card-header>\\r\\n          <mat-card-title></mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <form #exampleForm=\\\"ngForm\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <mat-select placeholder=\\\"ItemName\\\" name=\\\"itemName\\\" [(ngModel)]=\\\"preData.itemName\\\" (selectionChange)=\\\"itemSelect($event.value)\\\"\\r\\n                    required>\\r\\n                    <mat-option *ngFor=\\\"let masters of itemMasterList\\\" [value]=\\\"masters.itemName\\\">\\r\\n                      {{masters.itemName}}\\r\\n                    </mat-option>\\r\\n                  </mat-select>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput placeholder=\\\"ItemType\\\" name=\\\"itemType\\\" [(ngModel)]=\\\"preData.itemType\\\" readonly>\\r\\n                  <!-- <mat-select placeholder=\\\"ItemType\\\" name=\\\"itemType\\\" [(ngModel)]=\\\"preData.itemType\\\" required>\\r\\n                    <mat-option *ngFor=\\\"let masters of itemMasterList\\\" [value]=\\\"masters.itemType\\\">\\r\\n                      {{masters.itemType}}\\r\\n                    </mat-option>\\r\\n                  </mat-select> -->\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput placeholder=\\\"ItemPercentage(%)\\\" name=\\\"itemPercentage\\\" [(ngModel)]=\\\"preData.itemPercentage\\\"\\r\\n                    required>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <mat-select placeholder=\\\"MoldType\\\" name=\\\"moldType\\\" [(ngModel)]=\\\"preData.moldType\\\" (ngModelChange)=\\\"checkItemName()\\\" required>\\r\\n                    <mat-option *ngFor=\\\"let masters of moldMasterList\\\" [value]=\\\"masters.moldType\\\">\\r\\n                      {{masters.moldType}}\\r\\n                    </mat-option>\\r\\n                  </mat-select>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!exampleForm.valid\\\" (click)=\\\"saveRawMaterialPreDate(exampleForm)\\\">Save</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-2 col-md-6 col-sm-6\\\">\\r\\n                <button mat-raised-button color=\\\"accent\\\" (click)=\\\"cancel(exampleForm)\\\">Close</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\" style=\\\"margin-top: 30px;\\\">\\r\\n      <mat-card>\\r\\n        <div class=\\\"row\\\" id=\\\"id\\\">\\r\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n            <mat-card-header>\\r\\n                <mat-card class=\\\"example-card1\\\">\\r\\n                    <mat-card-header>\\r\\n                      <mat-card-title>RawMaterial HM</mat-card-title>\\r\\n                    </mat-card-header>\\r\\n                  </mat-card>\\r\\n            </mat-card-header>\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n            <mat-card-header style=\\\"float: right;\\\">\\r\\n              <mat-card-title>\\r\\n                <mat-chip-list>\\r\\n                  <mat-chip *ngIf=\\\"iron == 100\\\" style=\\\"background-color: green;color: white;\\\">{{iron}}</mat-chip>\\r\\n                  <mat-chip *ngIf=\\\"iron < 100\\\" style=\\\"background-color: orange;color: white;\\\">{{iron}}</mat-chip>\\r\\n                  <mat-chip *ngIf=\\\"iron > 100\\\" style=\\\"background-color:red;color: white;\\\">{{iron}}</mat-chip>\\r\\n                  <mat-chip>{{coke}}</mat-chip>\\r\\n                  <mat-chip>{{inoculant}}</mat-chip>\\r\\n                </mat-chip-list>\\r\\n              </mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </div>\\r\\n        </div>\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>#</th>\\r\\n                  <th>Item Name</th>\\r\\n                  <th>Item Type</th>\\r\\n                  <th>Percentage</th>\\r\\n                  <th>Mold Type</th>\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let preData of option1;let i=index\\\">\\r\\n                  <td>{{i+1}}</td>\\r\\n                  <td>{{preData.itemName}}</td>\\r\\n                  <td>{{preData.itemType}}</td>\\r\\n                  <td *ngIf=\\\"percentage[i] == false\\\">{{preData.itemPercentage}}</td>\\r\\n                  <td *ngIf=\\\"percentage[i] == true\\\">\\r\\n                    <input placeholder=\\\"ItemPercentage(%)\\\" style=\\\"width: 50px;\\\" name=\\\"itemPercentage{{i}}\\\" [(ngModel)]=\\\"option1[i].itemPercentage\\\"\\r\\n                      (ngModelChange)=\\\"qty1(preData.itemName,option1[i].itemPercentage)\\\" required>\\r\\n                  </td>\\r\\n                  <td>{{preData.moldType}}</td>\\r\\n                  <td *ngIf=\\\"view[i] == false\\\">\\r\\n                    <button mat-icon-button matTooltip=\\\"Edit preData\\\" color=\\\"accent\\\" (click)=\\\"editpreData(i,preData._id,preData.itemName,preData.itemType,preData.itemPercentage,preData.moldType,preData.itemCategory)\\\">\\r\\n                      <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                  <td *ngIf=\\\"view[i] == true\\\">\\r\\n                    <button mat-icon-button matTooltip=\\\"Save preData\\\" color=\\\"accent\\\" (click)=\\\"option1Update(i)\\\">\\r\\n                      <mat-icon>save</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions></mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\" style=\\\"margin-top: 30px;\\\">\\r\\n      <mat-card>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n            <mat-card-header>\\r\\n                <mat-card class=\\\"example-card1\\\">\\r\\n                    <mat-card-header>\\r\\n                      <mat-card-title>RawMaterial MM</mat-card-title>\\r\\n                    </mat-card-header>\\r\\n                  </mat-card>\\r\\n            </mat-card-header>\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n            <mat-card-header style=\\\"float: right;\\\">\\r\\n              <mat-card-title>\\r\\n                <mat-chip-list>\\r\\n                  <mat-chip *ngIf=\\\"iron2 == 100\\\" style=\\\"background-color: green;color: white;\\\">{{iron2}}</mat-chip>\\r\\n                  <mat-chip *ngIf=\\\"iron2 < 100\\\" style=\\\"background-color: orange;color: white;\\\">{{iron2}}</mat-chip>\\r\\n                  <mat-chip *ngIf=\\\"iron2 > 100\\\" style=\\\"background-color:red;color: white;\\\">{{iron2}}</mat-chip>\\r\\n                  <mat-chip>{{coke2}}</mat-chip>\\r\\n                  <mat-chip>{{inoculant2}}</mat-chip>\\r\\n                </mat-chip-list>\\r\\n              </mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </div>\\r\\n        </div>\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>#</th>\\r\\n                  <th>Item Name</th>\\r\\n                  <th>Item Type</th>\\r\\n                  <th>Percentage</th>\\r\\n                  <th>Mold Type</th>\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let preData of option2;let i=index\\\">\\r\\n                  <td>{{i+1}}</td>\\r\\n                  <td>{{preData.itemName}}</td>\\r\\n                  <td>{{preData.itemType}}</td>\\r\\n                  <td *ngIf=\\\"percentage[i] == false\\\">{{preData.itemPercentage}}</td>\\r\\n                  <td *ngIf=\\\"percentage[i] == true\\\">\\r\\n                    <input placeholder=\\\"ItemPercentage(%)\\\" style=\\\"width: 50px;\\\" name=\\\"itemPercentage{{i}}\\\" [(ngModel)]=\\\"option2[i].itemPercentage\\\"\\r\\n                      (ngModelChange)=\\\"qty2(preData.itemName,option2[i].itemPercentage)\\\" required>\\r\\n                  </td>\\r\\n                  <td>{{preData.moldType}}</td>\\r\\n                  <td *ngIf=\\\"view[i] == false\\\">\\r\\n                    <button mat-icon-button matTooltip=\\\"Edit preData\\\" color=\\\"accent\\\" (click)=\\\"editpreData(i,preData._id,preData.itemName,preData.itemType,preData.itemPercentage,preData.moldType,preData.itemCategory)\\\">\\r\\n                      <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                  <td *ngIf=\\\"view[i] == true\\\">\\r\\n                    <button mat-icon-button matTooltip=\\\"Edit preData\\\" color=\\\"accent\\\" (click)=\\\"option2Update(i)\\\">\\r\\n                      <mat-icon>save</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions></mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Consumable Data-->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\" style=\\\"margin-top: 30px;\\\">\\r\\n      <mat-card>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n            <mat-card-header>\\r\\n                <mat-card class=\\\"example-card1\\\">\\r\\n                    <mat-card-header>\\r\\n                      <mat-card-title>Consumable HM</mat-card-title>\\r\\n                    </mat-card-header>\\r\\n                  </mat-card>\\r\\n            </mat-card-header>\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n            <mat-card-header style=\\\"float: right;\\\">\\r\\n              <mat-card-title>\\r\\n                <mat-chip-list>\\r\\n                  <mat-chip>{{usedSand}}</mat-chip>\\r\\n                </mat-chip-list>\\r\\n              </mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </div>\\r\\n        </div>\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>#</th>\\r\\n                  <th>Item Name</th>\\r\\n                  <th>Item Type</th>\\r\\n                  <th>Percentage</th>\\r\\n                  <th>Mold Type</th>\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let preData of option3;let i=index\\\">\\r\\n                  <td>{{i+1}}</td>\\r\\n                  <td>{{preData.itemName}}</td>\\r\\n                  <td>{{preData.itemType}}</td>\\r\\n                  <td *ngIf=\\\"percentage[i] == false\\\">{{preData.itemPercentage}}</td>\\r\\n                  <td *ngIf=\\\"percentage[i] == true\\\">\\r\\n                    <input placeholder=\\\"ItemPercentage(%)\\\" style=\\\"width: 50px;\\\" name=\\\"itemPercentage{{i}}\\\" [(ngModel)]=\\\"option3[i].itemPercentage\\\"\\r\\n                      required>\\r\\n                  </td>\\r\\n                  <td>{{preData.moldType}}</td>\\r\\n                  <td *ngIf=\\\"view[i] == false\\\">\\r\\n                    <button mat-icon-button matTooltip=\\\"Edit preData\\\" color=\\\"accent\\\" (click)=\\\"editpreData(i,preData._id,preData.itemName,preData.itemType,preData.itemPercentage,preData.moldType,preData.itemCategory)\\\">\\r\\n                      <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                  <td *ngIf=\\\"view[i] == true\\\">\\r\\n                    <button mat-icon-button matTooltip=\\\"Edit preData\\\" color=\\\"accent\\\" (click)=\\\"option3Update(i)\\\">\\r\\n                      <mat-icon>save</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions></mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\" style=\\\"margin-top: 30px;\\\">\\r\\n      <mat-card>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card class=\\\"example-card1\\\">\\r\\n                  <mat-card-header>\\r\\n                    <mat-card-title>Consumable MM</mat-card-title>\\r\\n                  </mat-card-header>\\r\\n                </mat-card>\\r\\n            </mat-card-header>\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n            <mat-card-header style=\\\"float: right;\\\">\\r\\n              <mat-card-title>\\r\\n                <mat-chip-list>\\r\\n                  <mat-chip>{{greenSand}}</mat-chip>\\r\\n                </mat-chip-list>\\r\\n              </mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </div>\\r\\n        </div>\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>#</th>\\r\\n                  <th>Item Name</th>\\r\\n                  <th>Item Type</th>\\r\\n                  <th>Percentage</th>\\r\\n                  <th>Mold Type</th>\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let preData of option4;let i=index\\\">\\r\\n                  <td>{{i+1}}</td>\\r\\n                  <td>{{preData.itemName}}</td>\\r\\n                  <td>{{preData.itemType}}</td>\\r\\n                  <td *ngIf=\\\"percentage[i] == false\\\">{{preData.itemPercentage}}</td>\\r\\n                  <td *ngIf=\\\"percentage[i] == true\\\">\\r\\n                    <input placeholder=\\\"ItemPercentage(%)\\\" style=\\\"width: 50px;\\\" name=\\\"itemPercentage{{i}}\\\" [(ngModel)]=\\\"option4[i].itemPercentage\\\"\\r\\n                      required>\\r\\n                  </td>\\r\\n                  <td>{{preData.moldType}}</td>\\r\\n                  <td *ngIf=\\\"view[i] == false\\\">\\r\\n                    <button mat-icon-button matTooltip=\\\"Edit preData\\\" color=\\\"accent\\\" (click)=\\\"editpreData(i,preData._id,preData.itemName,preData.itemType,preData.itemPercentage,preData.moldType,preData.itemCategory)\\\">\\r\\n                      <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                  <td *ngIf=\\\"view[i] == true\\\">\\r\\n                    <button mat-icon-button matTooltip=\\\"Edit preData\\\" color=\\\"accent\\\" (click)=\\\"option4Update(i)\\\">\\r\\n                      <mat-icon>save</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions></mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"mat-form-field {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 18px;\\n  width: 100%; }\\n\\nbutton {\\n  margin-top: -20px; }\\n\\nmat-chip {\\n  color: white; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-left: 0px;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -40px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\ntr {\\n  padding-top: 1px; }\\n\\nmat-icon {\\n  font-size: 18px;\\n  margin-top: 1px; }\\n\\ntable tbody tr td {\\n  padding: 0px !important;\\n  vertical-align: inherit !important; }\\n\\nth {\\n  font-family: 'Lora', serif;\\n  font-size: 14px;\\n  color: #f73378; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9tYXN0ZXIvcHJvZHVjdGlvbi1tYXN0ZXIvcmF3LW1hdGVyaWFsLXByZS1kYXRhL0U6XFxWcF9XU1xcZm91bmRyeS1jbGllbnQvc3JjXFxhcHBcXGZvdW5kcnlcXG1hc3RlclxccHJvZHVjdGlvbi1tYXN0ZXJcXHJhdy1tYXRlcmlhbC1wcmUtZGF0YVxccmF3LW1hdGVyaWFsLXByZS1kYXRhLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLDBCQUEwQjtFQUMxQixlQUFlO0VBQ2YsV0FBVyxFQUFBOztBQUdiO0VBQ0UsaUJBQWlCLEVBQUE7O0FBRW5CO0VBQ0UsWUFBWSxFQUFBOztBQUVkO0VBQ0UsZ0NBQWdDO0VBQ2hDLDRCQUE0QjtFQUM1Qiw2QkFBNkI7RUFDN0IseUJBQXlCO0VBQ3pCLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osWUFBWTtFQUNaLDBCQUEwQixFQUFBOztBQUUxQjtFQUNBLGdCQUFnQixFQUFBOztBQUVoQjtFQUNFLGVBQWU7RUFDZixlQUFlLEVBQUE7O0FBRWpCO0VBQ0EsdUJBQXVCO0VBQ3ZCLGtDQUFrQyxFQUFBOztBQUVsQztFQUNFLDBCQUEwQjtFQUN4QixlQUFlO0VBQ2YsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZm91bmRyeS9tYXN0ZXIvcHJvZHVjdGlvbi1tYXN0ZXIvcmF3LW1hdGVyaWFsLXByZS1kYXRhL3Jhdy1tYXRlcmlhbC1wcmUtZGF0YS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxke1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbmJ1dHRvbntcclxuICBtYXJnaW4tdG9wOiAtMjBweDtcclxufVxyXG5tYXQtY2hpcHtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuLmV4YW1wbGUtY2FyZDF7XHJcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDEwcHg7XHJcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMTBweDtcclxuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjczMzc4O1xyXG4gIHBhZGRpbmctbGVmdDogMHB4O1xyXG4gIHBhZGRpbmctdG9wOiAxcHg7XHJcbiAgbWFyZ2luLXRvcDogLTQwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IC00MHB4O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBoZWlnaHQ6IDM1cHg7XHJcbiAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgfVxyXG4gIHRye1xyXG4gIHBhZGRpbmctdG9wOiAxcHg7XHJcbiAgfVxyXG4gIG1hdC1pY29ue1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMXB4O1xyXG4gICAgfVxyXG4gIHRhYmxlIHRib2R5IHRyIHRke1xyXG4gIHBhZGRpbmc6IDBweCAhaW1wb3J0YW50O1xyXG4gIHZlcnRpY2FsLWFsaWduOiBpbmhlcml0ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIHRoe1xyXG4gICAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgY29sb3I6ICNmNzMzNzg7XHJcbiAgfVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ProductionMasterService } from '../production-master.service';\r\nimport { RawMaterialPreData } from './raw-material-pre-data';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MasterService } from '../../master.service';\r\nimport { Master } from '../../master';\r\nimport { ItemsService } from 'src/app/foundry/items/items.service';\r\nimport { Items } from 'src/app/foundry/items/items';\r\nimport { MoldingMaster } from '../../molding-master/molding-master';\r\n\r\n@Component({\r\n  selector: 'app-raw-material-pre-data',\r\n  templateUrl: './raw-material-pre-data.component.html',\r\n  styleUrls: ['./raw-material-pre-data.component.scss']\r\n})\r\nexport class RawMaterialPreDataComponent implements OnInit {\r\n  dataSource;\r\n  public itemMasterList: Items[];\r\n  public moldMasterList: MoldingMaster[];\r\n  private notifier: NotifierService;\r\n  public newData = false;\r\n  public percentage = [];\r\n  public view = [];\r\n  public user;\r\n  public option1 = [];\r\n  public option2 = [];\r\n  public option3 = [];\r\n  public iron;\r\n  public iron2;\r\n  public coke;\r\n  public coke2;\r\n  public inoculant;\r\n  public inoculant2;\r\n  public irons;\r\n  public usedSand;\r\n  public greenSand;\r\n  public totalRawMaterial;\r\n  public option4 = [];\r\n  public preData: RawMaterialPreData;\r\n  public preData1: RawMaterialPreData;\r\n  public preDatas: RawMaterialPreData[];\r\n  constructor(public productionMasterService: ProductionMasterService,\r\n    notifierService: NotifierService, public masterService: MasterService, public itemsService: ItemsService) {\r\n    this.notifier = notifierService;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllRawMaterialPreDate();\r\n    this.preData = new RawMaterialPreData();\r\n    this.preData1 = new RawMaterialPreData();\r\n    this.getAllItemMaster();\r\n    this.getMoldTypeMaster();\r\n    this.user = localStorage.getItem('user');\r\n  }\r\n\r\n  enable() {\r\n    this.newData = true;\r\n  }\r\n\r\n  applyFilter(filterValue: String) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  /**get Item Master details */\r\n  getAllItemMaster() {\r\n    this.itemsService.getItemRawMaterial().subscribe((data) => {\r\n      this.itemMasterList = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  /**get Mold Type details */\r\n  getMoldTypeMaster() {\r\n    this.masterService.getMoldingMaster().subscribe((data) => {\r\n      this.moldMasterList = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  /**get all raw material pre data details */\r\n  getAllRawMaterialPreDate() {\r\n    this.option1 = [];\r\n    this.option2 = [];\r\n    this.option3 = [];\r\n    this.option4 = [];\r\n    this.iron = 0;\r\n    this.iron2 = 0;\r\n    this.coke = 0;\r\n    this.coke2 = 0;\r\n    this.inoculant = 0;\r\n    this.inoculant2 = 0;\r\n    this.productionMasterService.getRawMaterialPreData().subscribe((data) => {\r\n      this.preDatas = data;\r\n      console.log(data);\r\n      let i = 0;\r\n      this.preDatas.forEach(res => {\r\n\r\n        if (res.itemType === 'RawMaterial' && res.moldType === 'HM') {\r\n          this.option1.push({\r\n            '_id': res._id, 'itemName': res.itemName, 'itemType': res.itemType, 'itemPercentage': res.itemPercentage,\r\n            'moldType': res.moldType, 'modifiedBy': this.user\r\n          });\r\n          if (res.itemName !== 'Coke' && res.itemName !== 'Inoculant') {\r\n            this.iron = this.iron + res.itemPercentage;\r\n          } else if (res.itemName === 'Coke') {\r\n            this.coke = res.itemPercentage;\r\n          } else if (res.itemName === 'Inoculant') {\r\n            this.inoculant = res.itemPercentage;\r\n          }\r\n          this.percentage[i] = false;\r\n          this.view[i] = false;\r\n\r\n        } else if (res.itemType === 'RawMaterial' && res.moldType === 'MM') {\r\n          this.option2.push({\r\n            '_id': res._id, 'itemName': res.itemName, 'itemType': res.itemType, 'itemPercentage': res.itemPercentage,\r\n            'moldType': res.moldType, 'modifiedBy': this.user\r\n          });\r\n          if (res.itemName !== 'Coke' && res.itemName !== 'Inoculant') {\r\n            this.iron2 = this.iron2 + res.itemPercentage;\r\n          } else if (res.itemName === 'Coke') {\r\n            this.coke2 = res.itemPercentage;\r\n          } else if (res.itemName === 'Inoculant') {\r\n            this.inoculant2 = res.itemPercentage;\r\n          }\r\n          this.percentage[i] = false;\r\n          this.view[i] = false;\r\n\r\n        } else if (res.itemType === 'Consumable' && res.moldType === 'HM') {\r\n          this.option3.push({\r\n            '_id': res._id, 'itemName': res.itemName, 'itemType': res.itemType, 'itemPercentage': res.itemPercentage,\r\n            'moldType': res.moldType, 'modifiedBy': this.user\r\n          });\r\n          if (res.itemName === 'Used Sand') {\r\n            this.usedSand = res.itemPercentage;\r\n          }\r\n          this.percentage[i] = false;\r\n          this.view[i] = false;\r\n        } else if (res.itemType === 'Consumable' && res.moldType === 'MM') {\r\n          this.option4.push({\r\n            '_id': res._id, 'itemName': res.itemName, 'itemType': res.itemType, 'itemPercentage': res.itemPercentage,\r\n            'moldType': res.moldType, 'modifiedBy': this.user\r\n          });\r\n          if (res.itemName === 'Green Sand') {\r\n            this.greenSand = res.itemPercentage;\r\n          }\r\n          this.percentage[i] = false;\r\n          this.view[i] = false;\r\n        }\r\n        i++;\r\n      });\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  itemSelect(itemName) {\r\n    this.itemMasterList.forEach(res => {\r\n      if (itemName === res.itemName) {\r\n        console.log('test', res);\r\n        this.preData.itemType = res.itemType;\r\n        this.preData.itemCategory = res.itemCategory;\r\n      }\r\n    });\r\n  }\r\n\r\n  checkItemName() {\r\n    this.preDatas.forEach(element => {\r\n      if (this.preData.itemName === element.itemName && this.preData.moldType === element.moldType) {\r\n        this.notifier.notify('error', 'Already ItemName with MoldType exists!');\r\n        this.preData.itemName = '';\r\n      }\r\n    });\r\n  }\r\n  /** save&update raw material pre data details */\r\n  saveRawMaterialPreDate(exampleForm: NgForm) {\r\n    this.preData.createdBy = localStorage.getItem('user');\r\n    this.productionMasterService.saveRawMaterialPreData(this.preData).subscribe((data) => {\r\n      this.notifier.notify('success', 'Saved Successfully');\r\n      exampleForm.resetForm();\r\n      this.getAllRawMaterialPreDate();\r\n    }, (err) => {\r\n      this.notifier.notify('error', 'Not Save');\r\n    });\r\n  }\r\n\r\n  option1Update(i: number) {\r\n    this.percentage[i] = false;\r\n    this.view[i] = false;\r\n    this.updateRawMaterialPreDate(this.option1[i]);\r\n  }\r\n\r\n  option2Update(i: number) {\r\n    this.percentage[i] = false;\r\n    this.view[i] = false;\r\n    this.updateRawMaterialPreDate(this.option2[i]);\r\n  }\r\n  option3Update(i: number) {\r\n    this.percentage[i] = false;\r\n    this.view[i] = false;\r\n    this.updateRawMaterialPreDate(this.option3[i]);\r\n  }\r\n\r\n  option4Update(i: number) {\r\n    this.percentage[i] = false;\r\n    this.view[i] = false;\r\n    this.updateRawMaterialPreDate(this.option4[i]);\r\n  }\r\n\r\n  updateRawMaterialPreDate(preData) {\r\n    this.productionMasterService.updateRawMaterialPreData(preData).subscribe((data) => {\r\n      this.notifier.notify('success', 'Updated Successfully');\r\n      this.getAllRawMaterialPreDate();\r\n    }, (err) => {\r\n      this.notifier.notify('error', 'Not Update');\r\n    });\r\n  }\r\n\r\n  /**get details for updation*/\r\n  editpreData(i: number, _id: String, itemName: String, itemType: String, itemPercentage: number, moldType: String, itemCategory: string) {\r\n    this.percentage[i] = true;\r\n    this.view[i] = true;\r\n    this.irons = 0;\r\n    this.preData1._id = _id;\r\n    this.preData1.itemName = itemName;\r\n    this.preData1.itemType = itemType;\r\n    this.preData1.itemPercentage = itemPercentage;\r\n    this.preData1.itemCategory = itemCategory;\r\n    this.preData1.moldType = moldType;\r\n    if (moldType === 'HM' && itemType === 'RawMaterial') {\r\n      if (itemName !== 'Coke' && itemName !== 'Inoculant') {\r\n        this.iron = this.iron - itemPercentage;\r\n        this.irons = this.iron;\r\n      } else {\r\n        this.coke = this.coke - itemPercentage;\r\n      }\r\n    } else if (moldType === 'MM' && itemType === 'RawMaterial') {\r\n      if (itemName !== 'Coke' && itemName !== 'Inoculant') {\r\n        this.iron2 = this.iron2 - itemPercentage;\r\n        this.irons = this.iron2;\r\n      } else {\r\n        this.coke2 = this.coke2 - itemPercentage;\r\n      }\r\n    }\r\n  }\r\n\r\n  qty1(itemName: String, itemPercentage: number) {\r\n    console.log('tetst', itemName, '', itemPercentage);\r\n    this.iron = 0;\r\n    this.iron = this.iron + Number(this.irons);\r\n    if (itemName !== 'Coke' && itemName !== 'Inoculant') {\r\n      this.iron = Number(this.iron) + Number(itemPercentage);\r\n    } else if (itemName === 'Coke') {\r\n      this.coke = itemPercentage;\r\n    } else if (itemName === 'Inoculant') {\r\n      this.inoculant = itemPercentage;\r\n    }\r\n  }\r\n\r\n  qty2(itemName: String, itemPercentage: number) {\r\n    console.log('tetst', itemName, '', itemPercentage);\r\n    this.iron2 = 0;\r\n    this.iron2 = this.iron2 + Number(this.irons);\r\n    if (itemName !== 'Coke' && itemName !== 'Inoculant') {\r\n      this.iron2 = Number(this.iron2) + Number(itemPercentage);\r\n    } else if (itemName === 'Coke') {\r\n      this.coke2 = itemPercentage;\r\n    } else if (itemName === 'Inoculant') {\r\n      this.inoculant2 = itemPercentage;\r\n    }\r\n  }\r\n  /**delete raw material pre data details */\r\n  deleteRawMaterialPreData(i: Number, _id: String) {\r\n    this.preData._id = _id;\r\n    this.preData.modifiedBy = localStorage.getItem('user');\r\n    this.productionMasterService.deleteRawMaterialPreData(this.preData).subscribe((data) => {\r\n      this.notifier.notify('success', 'Deleted Successfully');\r\n      this.preData._id = undefined;\r\n      this.getAllRawMaterialPreDate();\r\n    }, (err) => {\r\n      this.notifier.notify('error', 'Not Delete');\r\n    });\r\n  }\r\n  refresh() {\r\n    this.getAllRawMaterialPreDate();\r\n  }\r\n\r\n  cancel(exampleForm: NgForm) {\r\n    this.preData._id = undefined;\r\n    exampleForm.resetForm();\r\n    this.newData = false;\r\n  }\r\n}\r\n","export class RawMaterialPreData {\r\n    _id: String;\r\n    itemName: String;\r\n    itemType: String;\r\n    itemCategory: String;\r\n    itemPercentage: Number;\r\n    moldType: String;\r\n    createdBy: String;\r\n    modifiedBy: String;\r\n}\r\n\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n      <mat-card class=\\\"example-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>Salary </mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content [style.overflow]=\\\"'auto'\\\" [style.height.px]=\\\"'440'\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-striped\\\" striped=\\\"true\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th scope=\\\"col\\\">No</th>\\r\\n                  <th matTooltip=\\\"Salary Type\\\" scope=\\\"col\\\">Salary Type</th>\\r\\n                  <th matTooltip=\\\"Working Days\\\" scope=\\\"col\\\">Working Days</th>\\r\\n                  <th matTooltip=\\\"Status\\\" scope=\\\"col\\\">Status</th>\\r\\n                  <th matTooltip=\\\"Action\\\" scope=\\\"col\\\">Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let salary of salaries;let i=index;\\\">\\r\\n                  <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                  <td>{{salary.salaryType}}</td>\\r\\n                  <td>{{salary.workingDays}}</td>\\r\\n                  <td>{{salary.status}}</td>\\r\\n                  <td>\\r\\n                    <button mat-icon-button matTooltip=\\\"Edit Department Master\\\" color=\\\"accent\\\" (click)=\\\"editSalary(i,salary._id,salary.salaryType,\\r\\n                          salary.workingDays, salary.status)\\\">\\r\\n                      <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <!-- <button mat-icon-button matTooltip=\\\"Delte Department Master\\\" color=\\\"accent\\\" (click)=\\\"deleteSalary(salary._id)\\\">\\r\\n                      <mat-icon>delete</mat-icon>\\r\\n                    </button> -->\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n      <mat-card class=\\\"example-card2\\\">\\r\\n        <mat-card-header>\\r\\n          <h6>Salary Master</h6>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <form #exampleForm=\\\"ngForm\\\">\\r\\n            <div *ngIf='edit == false'>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"Salary Type\\\" appStringValidation=\\\"words\\\" [maxlength]=\\\"20\\\" name=\\\"salaryType\\\"\\r\\n                [(ngModel)]=\\\"salary.salaryType\\\" (change)=\\\"checkSalaryType()\\\" required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf='edit == true'>\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput placeholder=\\\"Salary Type\\\" appStringValidation=\\\"words\\\" [maxlength]=\\\"20\\\" name=\\\"salaryType\\\"\\r\\n                  [(ngModel)]=\\\"salary.salaryType\\\"  readonly required>\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"Working Days\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"workingDays\\\"\\r\\n                [(ngModel)]=\\\"salary.workingDays\\\" required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <mat-select placeholder=\\\"Status\\\" appStringValidation=\\\"words\\\" name=\\\"status\\\" [(ngModel)]=\\\"salary.status\\\"\\r\\n                  required>\\r\\n                  <mat-option value=\\\"Active\\\">Active</mat-option>\\r\\n                  <mat-option value=\\\"Inactive\\\">InActive</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n          </form>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n            <button type=\\\"reset\\\" mat-raised-button color=\\\"accent\\\" style=\\\"float: right;\\\" (click)=\\\"cancel(exampleForm)\\\">Reset</button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!exampleForm.valid\\\" style=\\\"float: right;\\\" (click)=\\\"saveSalary(exampleForm)\\\">Save</button>\\r\\n\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".example-card2 {\\n  margin-top: 50px;\\n  margin-left: 150px;\\n  max-width: 350px;\\n  height: 350px; }\\n\\n.example-card {\\n  margin-top: 50px; }\\n\\nmat-form-field {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 18px;\\n  width: 100%; }\\n\\nh6 {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-weight: bold;\\n  font-size: 18px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 16px; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-left: 0px;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -40px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\ntr {\\n  padding-top: 1px; }\\n\\nmat-icon {\\n  font-size: 18px;\\n  margin-top: 1px; }\\n\\ntable tbody tr td {\\n  padding: 0px !important;\\n  vertical-align: inherit !important; }\\n\\nth {\\n  font-family: 'Lora', serif;\\n  font-size: 14px;\\n  color: #f73378; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9tYXN0ZXIvcHJvZHVjdGlvbi1tYXN0ZXIvc2FsYXJ5L0U6XFxWcF9XU1xcZm91bmRyeS1jbGllbnQvc3JjXFxhcHBcXGZvdW5kcnlcXG1hc3RlclxccHJvZHVjdGlvbi1tYXN0ZXJcXHNhbGFyeVxcc2FsYXJ5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsYUFBYSxFQUFBOztBQUdmO0VBQ0EsZ0JBQWdCLEVBQUE7O0FBRWhCO0VBQ0Usa0JBQWtCO0VBQ2xCLDBCQUEwQjtFQUMxQixlQUFlO0VBQ2YsV0FBVyxFQUFBOztBQUViO0VBQ0Usa0JBQWtCO0VBQ2xCLDBCQUEwQjtFQUMxQixpQkFBaUI7RUFDakIsZUFBZTtFQUNmLFdBQVcsRUFBQTs7QUFFYjtFQUNFLGtCQUFrQjtFQUNsQiwwQkFBMEI7RUFDMUIsZUFBZSxFQUFBOztBQUVqQjtFQUNBLGdDQUFnQztFQUNoQyw0QkFBNEI7RUFDNUIsNkJBQTZCO0VBQzdCLHlCQUF5QjtFQUN6QixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFlBQVk7RUFDWiwwQkFBMEIsRUFBQTs7QUFFMUI7RUFDQSxnQkFBZ0IsRUFBQTs7QUFFaEI7RUFDRSxlQUFlO0VBQ2YsZUFBZSxFQUFBOztBQUVqQjtFQUNBLHVCQUF1QjtFQUN2QixrQ0FBa0MsRUFBQTs7QUFFbEM7RUFDRSwwQkFBMEI7RUFDeEIsZUFBZTtFQUNmLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvbWFzdGVyL3Byb2R1Y3Rpb24tbWFzdGVyL3NhbGFyeS9zYWxhcnkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jYXJkMntcclxuICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAxNTBweDtcclxuICBtYXgtd2lkdGg6IDM1MHB4O1xyXG4gIGhlaWdodDogMzUwcHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLWNhcmR7XHJcbm1hcmdpbi10b3A6IDUwcHg7XHJcbn1cclxubWF0LWZvcm0tZmllbGR7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5oNntcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5leGFtcGxlLWZ1bGwtd2lkdGh7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxufVxyXG4uZXhhbXBsZS1jYXJkMXtcclxuYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDEwcHg7XHJcbmJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDEwcHg7XHJcbmJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxMHB4O1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiAjZjczMzc4O1xyXG5wYWRkaW5nLWxlZnQ6IDBweDtcclxucGFkZGluZy10b3A6IDFweDtcclxubWFyZ2luLXRvcDogLTQwcHg7XHJcbm1hcmdpbi1sZWZ0OiAtNDBweDtcclxuY29sb3I6IHdoaXRlO1xyXG5oZWlnaHQ6IDM1cHg7XHJcbmZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG59XHJcbnRye1xyXG5wYWRkaW5nLXRvcDogMXB4O1xyXG59XHJcbm1hdC1pY29ue1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICBtYXJnaW4tdG9wOiAxcHg7XHJcbiAgfVxyXG50YWJsZSB0Ym9keSB0ciB0ZHtcclxucGFkZGluZzogMHB4ICFpbXBvcnRhbnQ7XHJcbnZlcnRpY2FsLWFsaWduOiBpbmhlcml0ICFpbXBvcnRhbnQ7XHJcbn1cclxudGh7XHJcbiAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBjb2xvcjogI2Y3MzM3ODtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Salary } from './salary';\r\nimport { ProductionMasterService } from '../production-master.service';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { NgForm } from '@angular/forms';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ValidationService } from '../../../validation/validation-service';\r\n\r\n@Component({\r\n  selector: 'app-salary',\r\n  templateUrl: './salary.component.html',\r\n  styleUrls: ['./salary.component.scss']\r\n})\r\nexport class SalaryComponent implements OnInit {\r\n  itemForm: any;\r\n  public salary: Salary;\r\n  public salaries: Salary[];\r\n  public edit: boolean;\r\n  private notifier: NotifierService;\r\n  constructor(private productionMasterService: ProductionMasterService, notifierService: NotifierService,\r\n    private formBuilder: FormBuilder) {\r\n    this.notifier = notifierService;\r\n    this.itemForm = this.formBuilder.group({\r\n      'salaryType': ['', [Validators.required, ValidationService.nameValidation]],\r\n      'workingDays': ['', [Validators.required, ValidationService.numberValidator]]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.salary = new Salary();\r\n\r\n    this.getAllSalary();\r\n  }\r\n\r\n  getAllSalary() {\r\n    this.edit = false;\r\n    this.productionMasterService.getAllSalary().subscribe((data) => {\r\n      this.salaries = data;\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  checkSalaryType() {\r\n    this.salaries.forEach(element => {\r\n      if (element.salaryType === this.salary.salaryType) {\r\n        this.notifier.notify('error', 'Already Salary Type exists!');\r\n      }\r\n    });\r\n  }\r\n\r\n  saveSalary(exampleForm: NgForm) {\r\n    if (this.salary._id === undefined) {\r\n      this.productionMasterService.saveSalary(this.salary).subscribe((data) => {\r\n        this.notifier.notify('success', 'Saved Successfully');\r\n        this.getAllSalary();\r\n        exampleForm.reset();\r\n      }, (error) => {\r\n        this.notifier.notify('error', 'Not Save');\r\n        console.log(error);\r\n      });\r\n    } else {\r\n      this.productionMasterService.updateSalary(this.salary).subscribe((data) => {\r\n        this.notifier.notify('success', 'Updated Successfully');\r\n        this.getAllSalary();\r\n        exampleForm.reset();\r\n        this.salary._id = undefined;\r\n      }, (error) => {\r\n        this.notifier.notify('error', 'Not Updated');\r\n        console.log(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  cancel(exampleForm: NgForm) {\r\n    this.salary._id =  undefined;\r\n    exampleForm.reset();\r\n  }\r\n\r\n  editSalary(i: number, _id: string, salaryType: string, workingDays: number, status: string) {\r\n    this.edit = true;\r\n    this.salary._id = _id;\r\n    this.salary.salaryType = salaryType;\r\n    this.salary.workingDays = workingDays;\r\n    this.salary.status = status;\r\n  }\r\n\r\n  deleteSalary(id: string) {\r\n    this.productionMasterService.deleteSalary(id).subscribe((data) => {\r\n      this.notifier.notify('success', 'Delete Successfully');\r\n      this.getAllSalary();\r\n    }, (error) => {\r\n      this.notifier.notify('error', 'Not Deleted');\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.getAllSalary();\r\n  }\r\n\r\n\r\n}\r\n","export class Salary {\r\n  _id: string;\r\n  salaryType: string;\r\n  workingDays: number;\r\n  createdOn: string;\r\n  createdBy: string;\r\n  modifiedOn: string;\r\n  modifiedBy: string;\r\n  status: string;\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n      <mat-card class=\\\"example-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>Sand Disposal Master</mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content [style.overflow]=\\\"'auto'\\\" [style.height.px]=\\\"'340'\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-striped\\\" striped=\\\"true\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th scope=\\\"col\\\">No</th>\\r\\n                  <th matTooltip=\\\"Item Name\\\" scope=\\\"col\\\">Item Name</th>\\r\\n                  <th matTooltip=\\\"Mold Type\\\" scope=\\\"col\\\">Mold Type</th>\\r\\n                  <th matTooltip=\\\"Disposal Percentage\\\" scope=\\\"col\\\">Disposal Percentage</th>\\r\\n                  <th matTooltip=\\\"Status\\\" scope=\\\"col\\\">Status</th>\\r\\n                  <th matTooltip=\\\"Action\\\" scope=\\\"col\\\">Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let disposal of sandDisposals;let i=index;\\\">\\r\\n                  <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                  <td>{{disposal.itemName}}</td>\\r\\n                  <td>{{disposal.moldType}}</td>\\r\\n                  <td>{{disposal.disposalPercentage}}</td>\\r\\n                  <td>{{disposal.status}}</td>\\r\\n                  <td>\\r\\n                    <button mat-icon-button matTooltip=\\\"Edit SandDisposal Master\\\" color=\\\"accent\\\" (click)=\\\"editSandDisposal(i,disposal._id,disposal.itemName,disposal.disposalPercentage,disposal.moldType,disposal.status)\\\">\\r\\n                      <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <!-- <button mat-icon-button matTooltip=\\\"Delete SandDisposal Master\\\" color=\\\"accent\\\" (click)=\\\"deleteSandDisposal(i,disposal._id)\\\">\\r\\n                      <mat-icon>delete</mat-icon>\\r\\n                    </button> -->\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n      <mat-card class=\\\"example-card2\\\">\\r\\n        <mat-card-header>\\r\\n          <h6>Sand Disposal Master</h6>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <form #exampleForm=\\\"ngForm\\\" [formGroup]=\\\"disposalForm\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"sandDisposal._id === undefined \\\">\\r\\n             <mat-select placeholder=\\\"ItemName\\\" formControlName=\\\"itemName\\\" name=\\\"itemName\\\" [(ngModel)]=\\\"sandDisposal.itemName\\\">\\r\\n                <mat-option *ngFor=\\\"let item of items\\\" [value]=\\\"item.itemName\\\">\\r\\n                  {{item.itemName}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error>\\r\\n                <control-messages [control]=\\\"disposalForm.controls.itemName\\\"></control-messages>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\"  *ngIf=\\\"sandDisposal._id !== undefined \\\">\\r\\n                <input matInput placeholder=\\\"ItemName\\\" name=\\\"itemName\\\" formControlName=\\\"itemName\\\"\\r\\n                  [(ngModel)]=\\\"sandDisposal.itemName\\\" readonly>\\r\\n                <mat-error>\\r\\n                  <control-messages [control]=\\\"disposalForm.controls.itemName\\\"></control-messages>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"example-full-width\\\"  *ngIf=\\\"sandDisposal._id === undefined \\\">\\r\\n                  <mat-select placeholder=\\\"Mold Type\\\" formControlName=\\\"moldType\\\" name=\\\"moldType\\\" [(ngModel)]=\\\"sandDisposal.moldType\\\">\\r\\n                    <mat-option *ngFor=\\\"let masters of masterList\\\" [value]=\\\"masters.moldType\\\">\\r\\n                      {{masters.moldType}}\\r\\n                    </mat-option>\\r\\n                  </mat-select>\\r\\n                  <mat-error>\\r\\n                    <control-messages [control]=\\\"disposalForm.controls.moldType\\\"></control-messages>\\r\\n                  </mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"sandDisposal._id !== undefined \\\">\\r\\n                    <input matInput placeholder=\\\"Mold Type\\\" name=\\\"moldType\\\" formControlName=\\\"moldType\\\"\\r\\n                      [(ngModel)]=\\\"sandDisposal.moldType\\\" readonly>\\r\\n                    <mat-error>\\r\\n                      <control-messages [control]=\\\"disposalForm.controls.moldType\\\"></control-messages>\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"DisposalPercentage\\\" name=\\\"disposalPercentage\\\" formControlName=\\\"disposalPercentage\\\"\\r\\n                [(ngModel)]=\\\"sandDisposal.disposalPercentage\\\">\\r\\n              <mat-error>\\r\\n                <control-messages [control]=\\\"disposalForm.controls.disposalPercentage\\\"></control-messages>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <mat-select placeholder=\\\"Status\\\" name=\\\"status\\\" formControlName=\\\"status\\\" [(ngModel)]=\\\"sandDisposal.status\\\"  >\\r\\n                  <mat-option value=\\\"Active\\\">Active</mat-option>\\r\\n                  <mat-option value=\\\"Inactive\\\">Inactive</mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error>\\r\\n                  <control-messages [control]=\\\"disposalForm.controls.status\\\"></control-messages>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n          </form>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n            <button mat-raised-button color=\\\"accent\\\" style=\\\"float: right;\\\" (click)=\\\"cancel(exampleForm)\\\">Reset</button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" style=\\\"float: right;\\\" [disabled]=\\\"!disposalForm.valid\\\" (click)=\\\"saveSandDisposalMaster(exampleForm)\\\">Save</button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".example-card2 {\\n  margin-top: 50px;\\n  margin-left: 150px;\\n  max-width: 350px;\\n  height: 390px; }\\n\\n.example-card {\\n  margin-top: 50px; }\\n\\nmat-form-field {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 18px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 16px; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-left: 0px;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -40px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\ntr {\\n  padding-top: 1px; }\\n\\nmat-icon {\\n  font-size: 18px;\\n  margin-top: 1px; }\\n\\ntable tbody tr td {\\n  padding: 0px !important;\\n  vertical-align: inherit !important; }\\n\\nth {\\n  font-family: 'Lora', serif;\\n  font-size: 14px;\\n  color: #f73378; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9tYXN0ZXIvcHJvZHVjdGlvbi1tYXN0ZXIvc2FuZC1kaXNwb3NhbC1tYXN0ZXIvRTpcXFZwX1dTXFxmb3VuZHJ5LWNsaWVudC9zcmNcXGFwcFxcZm91bmRyeVxcbWFzdGVyXFxwcm9kdWN0aW9uLW1hc3Rlclxcc2FuZC1kaXNwb3NhbC1tYXN0ZXJcXHNhbmQtZGlzcG9zYWwtbWFzdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsYUFBYSxFQUFBOztBQUVmO0VBQ0UsZ0JBQWdCLEVBQUE7O0FBRWxCO0VBQ0Usa0JBQWtCO0VBQ2xCLDBCQUEwQjtFQUMxQixlQUFlO0VBQ2YsV0FBVyxFQUFBOztBQUdiO0VBQ0Usa0JBQWtCO0VBQ2xCLDBCQUEwQjtFQUMxQixlQUFlLEVBQUE7O0FBR2pCO0VBQ0UsZ0NBQWdDO0VBQ2hDLDRCQUE0QjtFQUM1Qiw2QkFBNkI7RUFDN0IseUJBQXlCO0VBQ3pCLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osWUFBWTtFQUNaLDBCQUEwQixFQUFBOztBQUUxQjtFQUNBLGdCQUFnQixFQUFBOztBQUVoQjtFQUNFLGVBQWU7RUFDZixlQUFlLEVBQUE7O0FBRWpCO0VBQ0EsdUJBQXVCO0VBQ3ZCLGtDQUFrQyxFQUFBOztBQUVsQztFQUNFLDBCQUEwQjtFQUN4QixlQUFlO0VBQ2YsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZm91bmRyeS9tYXN0ZXIvcHJvZHVjdGlvbi1tYXN0ZXIvc2FuZC1kaXNwb3NhbC1tYXN0ZXIvc2FuZC1kaXNwb3NhbC1tYXN0ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jYXJkMntcclxuICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAxNTBweDtcclxuICBtYXgtd2lkdGg6IDM1MHB4O1xyXG4gIGhlaWdodDogMzkwcHg7XHJcbn1cclxuLmV4YW1wbGUtY2FyZHtcclxuICBtYXJnaW4tdG9wOiA1MHB4O1xyXG59XHJcbm1hdC1mb3JtLWZpZWxke1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5leGFtcGxlLWZ1bGwtd2lkdGh7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxufVxyXG5cclxuLmV4YW1wbGUtY2FyZDF7XHJcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDEwcHg7XHJcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMTBweDtcclxuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjczMzc4O1xyXG4gIHBhZGRpbmctbGVmdDogMHB4O1xyXG4gIHBhZGRpbmctdG9wOiAxcHg7XHJcbiAgbWFyZ2luLXRvcDogLTQwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IC00MHB4O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBoZWlnaHQ6IDM1cHg7XHJcbiAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgfVxyXG4gIHRye1xyXG4gIHBhZGRpbmctdG9wOiAxcHg7XHJcbiAgfVxyXG4gIG1hdC1pY29ue1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMXB4O1xyXG4gICAgfVxyXG4gIHRhYmxlIHRib2R5IHRyIHRke1xyXG4gIHBhZGRpbmc6IDBweCAhaW1wb3J0YW50O1xyXG4gIHZlcnRpY2FsLWFsaWduOiBpbmhlcml0ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIHRoe1xyXG4gICAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgY29sb3I6ICNmNzMzNzg7XHJcbiAgfVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ProductionMasterService } from '../production-master.service';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { SandDisposalMaster } from '../sand-disposal-master/sand-disposal-master';\r\nimport { NgForm } from '@angular/forms';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ValidationService } from '../../../validation/validation-service';\r\nimport { MasterService } from '../../master.service';\r\nimport { ItemsService } from 'src/app/foundry/items/items.service';\r\nimport { Items } from 'src/app/foundry/items/items';\r\n\r\n@Component({\r\n  selector: 'app-sand-disposal-master',\r\n  templateUrl: './sand-disposal-master.component.html',\r\n  styleUrls: ['./sand-disposal-master.component.scss']\r\n})\r\nexport class SandDisposalMasterComponent implements OnInit {\r\n  masterList: any;\r\n  disposalForm: any;\r\n  private notifier: NotifierService;\r\n  public sandDisposal: SandDisposalMaster;\r\n  public sandDisposals: SandDisposalMaster[];\r\n  public items: Items[];\r\n  constructor(public productionMasterService: ProductionMasterService, notifierService: NotifierService,\r\n    private formBuilder: FormBuilder, public masterService: MasterService, public itemService: ItemsService) {\r\n    this.notifier = notifierService;\r\n    this.disposalForm = this.formBuilder.group({\r\n      'itemName': ['', [Validators.required, ValidationService.nameValidation]],\r\n      'disposalPercentage': ['', [Validators.required, ValidationService.numberValidator]],\r\n      'moldType': ['', [Validators.required, ValidationService.nameValidation]],\r\n      'status': ['', [Validators.required, ValidationService.nameValidation]]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sandDisposal = new SandDisposalMaster();\r\n    this.getSandDisposalMaster();\r\n    this.getMouldingMaster();\r\n    this.sandDetails();\r\n  }\r\n\r\n\r\n\r\n\r\n  /**get all sand disposal details */\r\n  getSandDisposalMaster() {\r\n    this.productionMasterService.getSandDisposalMaster().subscribe((data) => {\r\n      this.sandDisposals = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getMouldingMaster() {\r\n    this.masterService.getMoldingMaster().subscribe(data => {\r\n      this.masterList = data;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  /*Sand Details*/\r\n  sandDetails() {\r\n    let category;\r\n    category = 'ReUsable';\r\n    this.itemService.getItemsByItemCategory(category).subscribe(data => {\r\n      this.items = data;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n  /**save the sand disposal details */\r\n  saveSandDisposalMaster(exampleForm: NgForm) {\r\n    if (this.sandDisposal._id === undefined || this.sandDisposal._id === '') {\r\n      this.sandDisposal.createdBy = localStorage.getItem('user');\r\n      this.productionMasterService.saveSandDisposalMaster(this.sandDisposal).subscribe((data) => {\r\n        this.notifier.notify('success', 'Saved Successfully');\r\n        this.getSandDisposalMaster();\r\n        exampleForm.resetForm();\r\n      }, (err) => {\r\n        this.notifier.notify('error', 'Not Save');\r\n      });\r\n    } else {\r\n      this.sandDisposal.modifiedBy = localStorage.getItem('user');\r\n      this.productionMasterService.updateSandDisposalMaster(this.sandDisposal).subscribe((data) => {\r\n        this.notifier.notify('success', 'Updated Successfully');\r\n        this.getSandDisposalMaster();\r\n        exampleForm.resetForm();\r\n        this.sandDisposal._id = '';\r\n      }, (err) => {\r\n        this.notifier.notify('error', 'Not Update');\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  /** edit the sand disposal details*/\r\n  editSandDisposal(i: number, _id: string, itemName: string, disposalPercentage: number, moldType: string, status: string) {\r\n    this.sandDisposal._id = _id;\r\n    this.sandDisposal.itemName = itemName;\r\n    this.sandDisposal.disposalPercentage = disposalPercentage;\r\n    this.sandDisposal.moldType = moldType;\r\n    this.sandDisposal.status = status;\r\n  }\r\n\r\n  /* delete sand disposal details */\r\n  deleteSandDisposal(i: Number, _id: string) {\r\n    this.sandDisposal._id = _id;\r\n    this.sandDisposal.modifiedBy = localStorage.getItem('user');\r\n    this.productionMasterService.deleteSandDisposalMaster(this.sandDisposal).subscribe((data) => {\r\n      this.notifier.notify('success', 'Deleted Successfully');\r\n      this.getSandDisposalMaster();\r\n      this.sandDisposal._id = undefined;\r\n    }, (err) => {\r\n      this.notifier.notify('error', 'Not Delete');\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.getSandDisposalMaster();\r\n  }\r\n\r\n  cancel(exampleForm: NgForm) {\r\n    this.sandDisposal._id = undefined;\r\n    exampleForm.resetForm();\r\n  }\r\n\r\n}\r\n","export class SandDisposalMaster {\r\n  _id: string;\r\n  itemName: string;\r\n  disposalPercentage: number;\r\n  moldType: string;\r\n  status: string;\r\n  createdBy: string;\r\n  modifiedBy: string;\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n      <mat-card class=\\\"example-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>Shift</mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content [style.overflow]=\\\"'auto'\\\" [style.height.px]=\\\"'440'\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-striped\\\" striped=\\\"true\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th scope=\\\"col\\\">No</th>\\r\\n                  <th matTooltip=\\\"Shift Name\\\" scope=\\\"col\\\">Shift Name</th>\\r\\n                  <th matTooltip=\\\"Start Time\\\" scope=\\\"col\\\">Start Time</th>\\r\\n                  <th matTooltip=\\\"End Time\\\" scope=\\\"col\\\">End Time</th>\\r\\n                  <th matTooltip=\\\"Hours\\\" scope=\\\"col\\\">Hours</th>\\r\\n                  <th matTooltip=\\\"Status\\\" scope=\\\"col\\\">Status</th>\\r\\n                  <th matTooltip=\\\"Action\\\" scope=\\\"col\\\">Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let shift of shifts;let i=index;\\\">\\r\\n                  <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                  <td>{{shift.shift}}</td>\\r\\n                  <td>{{shift.startTime | date:'shortTime'}}</td>\\r\\n                  <td>{{shift.endTime | date:'shortTime'}}</td>\\r\\n                  <td>{{shift.totalHours}}</td>\\r\\n                  <td>{{shift.status}}</td>\\r\\n                  <td>\\r\\n                    <button mat-icon-button matTooltip=\\\"Edit Shift Master\\\" color=\\\"accent\\\" (click)=\\\"editShift(i,shift._id,shift.shift,shift.startTime,shift.endTime,shift.totalHours,shift.status)\\\">\\r\\n                      <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <!-- <button mat-icon-button matTooltip=\\\"Delte Shift Master\\\" color=\\\"accent\\\" (click)=\\\"deleteShift(shift._id)\\\">\\r\\n                      <mat-icon>delete</mat-icon>\\r\\n                    </button> -->\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\r\\n      <mat-card class=\\\"example-card2\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>Shift</mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <form #exampleForm=\\\"ngForm\\\">\\r\\n            <div *ngIf='edit == false'>\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Shift Name\\\" [maxlength]=\\\"15\\\" name=\\\"shift\\\" [(ngModel)]=\\\"shift.shift\\\"\\r\\n                  (change)=\\\"checkShift()\\\" required>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div *ngIf='edit == true'>\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Shift Name\\\" [maxlength]=\\\"15\\\" name=\\\"shift\\\" [(ngModel)]=\\\"shift.shift\\\"\\r\\n                  readonly required>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <label>Start Time: </label>\\r\\n            <kendo-timepicker placeholder=\\\"Start Time\\\" name=\\\"startTime\\\" [(ngModel)]=\\\"shift.startTime\\\" #dateModel=\\\"ngModel\\\"\\r\\n              required></kendo-timepicker><br>\\r\\n            <label>End Time: </label>\\r\\n            <kendo-timepicker placeholder=\\\"End Time\\\" name=\\\"endTime\\\" [(ngModel)]=\\\"shift.endTime\\\" #dateModel=\\\"ngModel\\\"\\r\\n              required></kendo-timepicker>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"Total hours\\\" appNumberValidation [maxlength]=\\\"10\\\" name=\\\"totalHours\\\"\\r\\n                [(ngModel)]=\\\"shift.totalHours\\\" required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <mat-select placeholder=\\\"Status\\\" appStringValidation=\\\"words\\\" name=\\\"status\\\" [(ngModel)]=\\\"shift.status\\\"\\r\\n                  required>\\r\\n                  <mat-option value=\\\"Active\\\">Active</mat-option>\\r\\n                  <mat-option value=\\\"Inactive\\\">InActive</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n          </form>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n          <button type=\\\"reset\\\" mat-raised-button color=\\\"accent\\\" style=\\\"float: right;\\\" (click)=\\\"cancel(exampleForm)\\\">Reset</button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!exampleForm.valid\\\" style=\\\"float: right;\\\" (click)=\\\"saveShift(exampleForm)\\\">Save</button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".example-card2 {\\n  margin-top: 50px;\\n  margin-left: 150px;\\n  max-width: 350px;\\n  height: 350px; }\\n\\n.example-card {\\n  margin-top: 50px; }\\n\\nmat-form-field {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 18px;\\n  width: 100%; }\\n\\nh6 {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-weight: bold;\\n  font-size: 18px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 16px; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-left: 0px;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -40px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\ntr {\\n  padding-top: 1px; }\\n\\nmat-icon {\\n  font-size: 18px;\\n  margin-top: 1px; }\\n\\ntable tbody tr td {\\n  padding: 0px !important;\\n  vertical-align: inherit !important; }\\n\\nth {\\n  font-family: 'Lora', serif;\\n  font-size: 14px;\\n  color: #f73378; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9tYXN0ZXIvcHJvZHVjdGlvbi1tYXN0ZXIvc2hpZnQvRTpcXFZwX1dTXFxmb3VuZHJ5LWNsaWVudC9zcmNcXGFwcFxcZm91bmRyeVxcbWFzdGVyXFxwcm9kdWN0aW9uLW1hc3Rlclxcc2hpZnRcXHNoaWZ0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsYUFBYSxFQUFBOztBQUdmO0VBQ0EsZ0JBQWdCLEVBQUE7O0FBRWhCO0VBQ0Usa0JBQWtCO0VBQ2xCLDBCQUEwQjtFQUMxQixlQUFlO0VBQ2YsV0FBVyxFQUFBOztBQUViO0VBQ0Usa0JBQWtCO0VBQ2xCLDBCQUEwQjtFQUMxQixpQkFBaUI7RUFDakIsZUFBZTtFQUNmLFdBQVcsRUFBQTs7QUFFYjtFQUNFLGtCQUFrQjtFQUNsQiwwQkFBMEI7RUFDMUIsZUFBZSxFQUFBOztBQUVqQjtFQUNBLGdDQUFnQztFQUNoQyw0QkFBNEI7RUFDNUIsNkJBQTZCO0VBQzdCLHlCQUF5QjtFQUN6QixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFlBQVk7RUFDWiwwQkFBMEIsRUFBQTs7QUFFMUI7RUFDQSxnQkFBZ0IsRUFBQTs7QUFFaEI7RUFDRSxlQUFlO0VBQ2YsZUFBZSxFQUFBOztBQUVqQjtFQUNBLHVCQUF1QjtFQUN2QixrQ0FBa0MsRUFBQTs7QUFFbEM7RUFDRSwwQkFBMEI7RUFDeEIsZUFBZTtFQUNmLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvbWFzdGVyL3Byb2R1Y3Rpb24tbWFzdGVyL3NoaWZ0L3NoaWZ0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY2FyZDJ7XHJcbiAgbWFyZ2luLXRvcDogNTBweDtcclxuICBtYXJnaW4tbGVmdDogMTUwcHg7XHJcbiAgbWF4LXdpZHRoOiAzNTBweDtcclxuICBoZWlnaHQ6IDM1MHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1jYXJke1xyXG5tYXJnaW4tdG9wOiA1MHB4O1xyXG59XHJcbm1hdC1mb3JtLWZpZWxke1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuaDZ7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4uZXhhbXBsZS1mdWxsLXdpZHRoe1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuLmV4YW1wbGUtY2FyZDF7XHJcbmJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAxMHB4O1xyXG5ib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxMHB4O1xyXG5ib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTBweDtcclxuYmFja2dyb3VuZC1jb2xvcjogI2Y3MzM3ODtcclxucGFkZGluZy1sZWZ0OiAwcHg7XHJcbnBhZGRpbmctdG9wOiAxcHg7XHJcbm1hcmdpbi10b3A6IC00MHB4O1xyXG5tYXJnaW4tbGVmdDogLTQwcHg7XHJcbmNvbG9yOiB3aGl0ZTtcclxuaGVpZ2h0OiAzNXB4O1xyXG5mb250LWZhbWlseTogJ0xvcmEnLCBzZXJpZjtcclxufVxyXG50cntcclxucGFkZGluZy10b3A6IDFweDtcclxufVxyXG5tYXQtaWNvbntcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgbWFyZ2luLXRvcDogMXB4O1xyXG4gIH1cclxudGFibGUgdGJvZHkgdHIgdGR7XHJcbnBhZGRpbmc6IDBweCAhaW1wb3J0YW50O1xyXG52ZXJ0aWNhbC1hbGlnbjogaW5oZXJpdCAhaW1wb3J0YW50O1xyXG59XHJcbnRoe1xyXG4gIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgY29sb3I6ICNmNzMzNzg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Shift } from './shift';\r\nimport { ProductionMasterService } from '../production-master.service';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Time, DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-shift',\r\n  templateUrl: './shift.component.html',\r\n  styleUrls: ['./shift.component.scss'],\r\n  providers: [DatePipe]\r\n})\r\nexport class ShiftComponent implements OnInit {\r\n\r\n  public edit;\r\n  public shift: Shift;\r\n  public shifts: Shift[];\r\n  private notifier: NotifierService;\r\n\r\n  constructor(private productionMasterService: ProductionMasterService, notifierService: NotifierService) {\r\n    this.notifier = notifierService;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.shift = new Shift();\r\n    this.getAllShift();\r\n  }\r\n\r\n\r\n  getAllShift() {\r\n    this.edit = false;\r\n    this.productionMasterService.getAllShift().subscribe((data) => {\r\n      this.shifts = data;\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  checkShift() {\r\n    this.shifts.forEach(res => {\r\n      if (this.shift.shift === res.shift) {\r\n        this.notifier.notify('error', 'Already Shift Name exists!');\r\n      }\r\n    });\r\n  }\r\n\r\n  saveShift(exampleForm: NgForm) {\r\n    if (this.shift._id === undefined) {\r\n      this.productionMasterService.saveShift(this.shift).subscribe((data) => {\r\n        this.notifier.notify('success', 'Saved Successfully');\r\n        this.getAllShift();\r\n        exampleForm.reset();\r\n      }, (error) => {\r\n        this.notifier.notify('error', 'Not Save');\r\n        console.log(error);\r\n      });\r\n    } else {\r\n      this.productionMasterService.updateShift(this.shift).subscribe((data) => {\r\n        this.notifier.notify('success', 'Updated Successfully');\r\n        this.getAllShift();\r\n        exampleForm.reset();\r\n        this.shift._id = undefined;\r\n      }, (error) => {\r\n        this.notifier.notify('error', 'Not Updated');\r\n        console.log(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  cancel(exampleForm: NgForm) {\r\n    this.shift._id = undefined;\r\n    exampleForm.reset();\r\n  }\r\n\r\n  editShift(i: number, _id: string, shift: string, startTime: Time, endTime: Time, totalHours: number, status: string) {\r\n    this.edit = true;\r\n    this.shift._id = _id;\r\n    this.shift.shift = shift;\r\n    this.shift.startTime = startTime;\r\n    this.shift.endTime = endTime;\r\n    this.shift.totalHours = totalHours;\r\n    this.shift.status = status;\r\n  }\r\n\r\n  deleteShift(id: string) {\r\n    this.productionMasterService.deleteShift(id).subscribe((data) => {\r\n      this.notifier.notify('success', 'Delete Successfully');\r\n      this.getAllShift();\r\n    }, (error) => {\r\n      this.notifier.notify('error', 'Not Deleted');\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.getAllShift();\r\n  }\r\n\r\n\r\n}\r\n","import { Time } from '@angular/common';\r\n\r\nexport class Shift {\r\n  _id: string;\r\n  shift: string;\r\n  startTime: Time;\r\n  endTime: Time;\r\n  totalHours: number;\r\n  createdOn: string;\r\n  createdBy: string;\r\n  modifiedOn: string;\r\n  modifiedBy: string;\r\n  status: string;\r\n}\r\n","module.exports = \"<!-- Shot blasting form-->\\r\\n<div class=\\\"container\\\">\\r\\n  <mat-card class=\\\"example-card\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card class=\\\"example-card1\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>Shot Blasting Master</mat-card-title>\\r\\n        </mat-card-header>\\r\\n      </mat-card>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <form #exampleForm=\\\"ngForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-3\\\" *ngIf=\\\"shotBlasting._id === undefined\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\" >\\r\\n                  <mat-select placeholder=\\\"Machine Id\\\" name=\\\"machineId\\\" [(ngModel)]=\\\"shotBlasting.machineId\\\"\\r\\n                  (ngModelChange)=\\\"getMachineName(shotBlasting.machineId)\\\" required>\\r\\n                    <mat-option *ngFor=\\\"let machineDetail of machineDetails\\\" [value]=\\\"machineDetail.machineId\\\">\\r\\n                      {{machineDetail.machineId}}\\r\\n                    </mat-option>\\r\\n                  </mat-select>\\r\\n                </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-3\\\" *ngIf=\\\"shotBlasting._id !== undefined\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Machine Id\\\" name=\\\"machineId\\\" [(ngModel)]=\\\"shotBlasting.machineId\\\"\\r\\n                 readonly required>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"MachineName\\\" name=\\\"machineName\\\" [(ngModel)]=\\\"shotBlasting.machineName\\\"\\r\\n               readonly required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"shotBlasting._id === undefined\\\">\\r\\n              <mat-select placeholder=\\\"ItemType\\\" appStringValidation=\\\"words\\\" name=\\\"itemType\\\" [(ngModel)]=\\\"shotBlasting.itemType\\\" (ngModelChange)=\\\"getItemNames(shotBlasting.itemType)\\\"\\r\\n                required>\\r\\n                <mat-option value=\\\"Consumable\\\">Consumable</mat-option>\\r\\n                <mat-option value=\\\"Parts\\\">Part</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"shotBlasting._id !== undefined\\\">\\r\\n                <input matInput placeholder=\\\"Item Type\\\" name=\\\"itemType\\\" [(ngModel)]=\\\"shotBlasting.itemType\\\"\\r\\n                 readonly required>\\r\\n              </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"shotBlasting.itemType == 'Consumable'\\\" class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"shotBlasting._id === undefined\\\">\\r\\n                <mat-select placeholder=\\\"ConsumableName\\\" name=\\\"consumableName\\\" [(ngModel)]=\\\"shotBlasting.consumableName\\\"\\r\\n                (ngModelChange)=\\\"getPerKgCost(shotBlasting.consumableName)\\\" required>\\r\\n                  <mat-option *ngFor=\\\"let item of items\\\" [value]=\\\"item.itemName\\\">\\r\\n                    {{item.itemName}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"shotBlasting._id !== undefined\\\">\\r\\n                <input matInput placeholder=\\\"Consumable Name\\\" name=\\\"consumableName\\\" [(ngModel)]=\\\"shotBlasting.consumableName\\\"\\r\\n                 readonly required>\\r\\n              </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"shotBlasting.itemType =='Parts'\\\" class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"shotBlasting._id === undefined\\\">\\r\\n                <mat-select placeholder=\\\"Part Name\\\" name=\\\"partName\\\" [(ngModel)]=\\\"shotBlasting.partName\\\"\\r\\n                (ngModelChange)=\\\"getPerKgCost(shotBlasting.partName)\\\" required>\\r\\n                  <mat-option *ngFor=\\\"let item of items\\\" [value]=\\\"item.itemName\\\">\\r\\n                    {{item.itemName}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"shotBlasting._id !== undefined\\\">\\r\\n                <input matInput placeholder=\\\"Part Name\\\" name=\\\"partName\\\" [(ngModel)]=\\\"shotBlasting.partName\\\"\\r\\n                 readonly required>\\r\\n              </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div *ngIf=\\\"shotBlasting.itemType == 'Consumable'\\\" class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"TotalCapacity\\\" appNumberValidation name=\\\"totalCapacity\\\" [(ngModel)]=\\\"shotBlasting.totalCapacity\\\"\\r\\n                required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"shotBlasting.itemType == 'Consumable'\\\" class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"PerKgCost\\\" appNumberValidation name=\\\"perKgCost\\\" [(ngModel)]=\\\"shotBlasting.perKgCost\\\"\\r\\n                required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"shotBlasting.itemType == 'Consumable' || shotBlasting.itemType == 'Parts'\\\" class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <mat-select placeholder=\\\"ReplacementRate\\\" appStringValidation=\\\"words\\\" name=\\\"replacementRate\\\" [(ngModel)]=\\\"shotBlasting.replacementRate\\\"\\r\\n                      required>\\r\\n                      <mat-option value=\\\"MeltWise\\\">MeltWise</mat-option>\\r\\n                      <mat-option value=\\\"Monthly\\\">Monthly</mat-option>\\r\\n                      <mat-option value=\\\"Weekly\\\">Weekly</mat-option>\\r\\n                    </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"shotBlasting.itemType == 'Consumable' || shotBlasting.itemType == 'Parts'\\\" class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"replacementQuantity\\\" appNumberValidation name=\\\"replacementQuantity\\\"\\r\\n                [(ngModel)]=\\\"shotBlasting.replacementQuantity\\\" required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div *ngIf='shotBlasting.itemType == \\\"Parts\\\"' class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"PartCost\\\" appNumberValidation name=\\\"partCost\\\" [(ngModel)]=\\\"shotBlasting.partCost\\\"\\r\\n                required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <mat-select placeholder=\\\"Status\\\" appStringValidation=\\\"words\\\" name=\\\"status\\\" [(ngModel)]=\\\"shotBlasting.status\\\"\\r\\n                required>\\r\\n                <mat-option value=\\\"Active\\\">Active</mat-option>\\r\\n                <mat-option value=\\\"Inactive\\\">InActive</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-raised-button style=\\\"float: right;margin-top:-30px;\\\" color=\\\"accent\\\" (click)=\\\"cancel(exampleForm)\\\">Reset</button>\\r\\n      <button mat-raised-button style=\\\"float: right;margin-top:-30px;\\\" color=\\\"primary\\\" [disabled]=!exampleForm.valid\\r\\n      (click)=\\\"saveShotBlasting(exampleForm)\\\">Save</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- Shot blasting Table view-->\\r\\n<div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n  <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\" style=\\\"margin-top: 40px;\\\">\\r\\n    <mat-card class=\\\"example-card\\\">\\r\\n      <mat-card-header>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>Consumable List</mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content [style.overflow]=\\\"'auto'\\\" [style.height.px]=\\\"'240'\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-striped\\\" striped=\\\"true\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\">No</th>\\r\\n                <th matTooltip=\\\"Machine ID\\\" scope=\\\"col\\\">M ID</th>\\r\\n                <th matTooltip=\\\"Machine Name\\\" scope=\\\"col\\\">M Name</th>\\r\\n                <th matTooltip=\\\"Consumable Name\\\" scope=\\\"col\\\">C Name</th>\\r\\n                <th matTooltip=\\\"Mold Type\\\" scope=\\\"col\\\" style=\\\"text-align: right\\\">Capacity</th>\\r\\n                <th matTooltip=\\\"Consumable Cost\\\" scope=\\\"col\\\" style=\\\"text-align: right\\\">Cos/Cost</th>\\r\\n                <th matTooltip=\\\"Status\\\" scope=\\\"col\\\" style=\\\"text-align: center\\\">Status</th>\\r\\n                <th>Action</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let shots of shotBlastings1;let i=index;\\\">\\r\\n                <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                <td>{{shots.machineId}}</td>\\r\\n                <td>{{shots.machineName}}</td>\\r\\n                <td>{{shots.consumableName}}</td>\\r\\n                <td style=\\\"text-align: right\\\">{{shots.totalCapacity}}</td>\\r\\n                <td style=\\\"text-align: right\\\">{{shots.perKgCost}}</td>\\r\\n                <td style=\\\"text-align: center\\\">{{shots.status}}</td>\\r\\n                <td>\\r\\n                  <button mat-icon-button matTooltip=\\\"Edit ShotBlasting\\\" color=\\\"accent\\\" (click)=\\\"editshotBlasting(i,shots._id,shots.machineId,shots.machineName,shots.itemType,shots.consumableName,shots.totalCapacity,\\r\\n                        shots.perKgCost,shots.replacementRate,shots.replacementQuantity,shots.partName,shots.partCost,shots.status)\\\">\\r\\n                    <mat-icon>edit</mat-icon>\\r\\n                  </button>\\r\\n                  <!-- <button mat-icon-button matTooltip=\\\"delete ShotBlasting\\\" color=\\\"accent\\\" (click)=\\\"deleteShotBlasting(i,shots._id)\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                  </button> -->\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\" style=\\\"margin-top: 40px;\\\">\\r\\n    <mat-card class=\\\"example-card\\\">\\r\\n      <mat-card-header>\\r\\n          <mat-card class=\\\"example-card1\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>Parts List</mat-card-title>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content [style.overflow]=\\\"'auto'\\\" [style.height.px]=\\\"'240'\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-striped\\\" striped=\\\"true\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\">No</th>\\r\\n                <th matTooltip=\\\"Machine Id\\\" scope=\\\"col\\\">Machine ID</th>\\r\\n                <th matTooltip=\\\"Machine Name\\\" scope=\\\"col\\\">Machine Name</th>\\r\\n                <th matTooltip=\\\"Part Name\\\" scope=\\\"col\\\">Part Name</th>\\r\\n                <th matTooltip=\\\"Part Cost\\\" style=\\\"text-align: right\\\" scope=\\\"col\\\">Part Cost</th>\\r\\n                <th matTooltip=\\\"Status\\\" style=\\\"text-align: center\\\" scope=\\\"col\\\">Status</th>\\r\\n                <th>\\r\\n                  Action\\r\\n                </th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let shots of shotBlastings2;let i=index;\\\">\\r\\n                <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                <td>{{shots.machineId}}</td>\\r\\n                <td>{{shots.machineName}}</td>\\r\\n                <td>{{shots.partName}}</td>\\r\\n                <td style=\\\"text-align: right\\\">{{shots.partCost}}</td>\\r\\n                <td style=\\\"text-align: center\\\">{{shots.status}}</td>\\r\\n                <td>\\r\\n                  <button mat-icon-button matTooltip=\\\"Edit ShotBlasting\\\" color=\\\"accent\\\" (click)=\\\"editshotBlasting(i,shots._id,shots.machineId,shots.machineName,shots.itemType,shots.consumableName,shots.totalCapacity,\\r\\n                  shots.perKgCost,shots.replacementRate,shots.replacementQuantity,shots.partName,shots.partCost,shots.status)\\\">\\r\\n                    <mat-icon>edit</mat-icon>\\r\\n                  </button>\\r\\n                  <!-- <button mat-icon-button matTooltip=\\\"delete ShotBlasting\\\" color=\\\"accent\\\" (click)=\\\"deleteShotBlasting(i,shots._id)\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                  </button> -->\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".example-card {\\n  margin-top: 50px; }\\n\\nmat-card {\\n  max-width: 100%; }\\n\\nmat-form-field {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 18px;\\n  width: 100%; }\\n\\nh6 {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-weight: bold;\\n  font-size: 18px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  text-align: center;\\n  font-family: 'Lora', serif;\\n  font-size: 16px; }\\n\\n.example-card1 {\\n  border-bottom-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: #f73378;\\n  padding-left: 0px;\\n  padding-top: 1px;\\n  margin-top: -40px;\\n  margin-left: -40px;\\n  color: white;\\n  height: 35px;\\n  font-family: 'Lora', serif; }\\n\\ntr {\\n  padding-top: 1px; }\\n\\nmat-icon {\\n  font-size: 18px;\\n  margin-top: 1px; }\\n\\ntable tbody tr td {\\n  padding: 0px !important;\\n  vertical-align: inherit !important; }\\n\\n.example-card {\\n  width: 100%;\\n  margin-bottom: 5px; }\\n\\nth {\\n  font-family: 'Lora', serif;\\n  font-size: 14px;\\n  color: #f73378; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9tYXN0ZXIvcHJvZHVjdGlvbi1tYXN0ZXIvc2hvdC1ibGFzdGluZy1tYXN0ZXIvRTpcXFZwX1dTXFxmb3VuZHJ5LWNsaWVudC9zcmNcXGFwcFxcZm91bmRyeVxcbWFzdGVyXFxwcm9kdWN0aW9uLW1hc3Rlclxcc2hvdC1ibGFzdGluZy1tYXN0ZXJcXHNob3QtYmxhc3RpbmctbWFzdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0ksZUFBZSxFQUFBOztBQUVuQjtFQUNJLGtCQUFrQjtFQUNsQiwwQkFBMEI7RUFDMUIsZUFBZTtFQUNmLFdBQVcsRUFBQTs7QUFFZjtFQUNJLGtCQUFrQjtFQUNsQiwwQkFBMEI7RUFDMUIsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixXQUFXLEVBQUE7O0FBR2Y7RUFDSSxrQkFBa0I7RUFDbEIsMEJBQTBCO0VBQzFCLGVBQWUsRUFBQTs7QUFHbkI7RUFDRSxnQ0FBZ0M7RUFDaEMsNEJBQTRCO0VBQzVCLDZCQUE2QjtFQUM3Qix5QkFBeUI7RUFDekIsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixZQUFZO0VBQ1osMEJBQTBCLEVBQUE7O0FBRTFCO0VBQ0EsZ0JBQWdCLEVBQUE7O0FBRWhCO0VBQ0UsZUFBZTtFQUNmLGVBQWUsRUFBQTs7QUFFakI7RUFDQSx1QkFBdUI7RUFDdkIsa0NBQWtDLEVBQUE7O0FBR3BDO0VBQ0UsV0FBVztFQUNYLGtCQUFrQixFQUFBOztBQUVwQjtFQUNFLDBCQUEwQjtFQUN4QixlQUFlO0VBQ2YsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZm91bmRyeS9tYXN0ZXIvcHJvZHVjdGlvbi1tYXN0ZXIvc2hvdC1ibGFzdGluZy1tYXN0ZXIvc2hvdC1ibGFzdGluZy1tYXN0ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jYXJke1xyXG4gICAgbWFyZ2luLXRvcDogNTBweDtcclxuICAgLy8gbWFyZ2luLWxlZnQ6IDE1MHB4O1xyXG59XHJcbm1hdC1jYXJke1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG59XHJcbm1hdC1mb3JtLWZpZWxke1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5oNntcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcblxyXG4uZXhhbXBsZS1mdWxsLXdpZHRoe1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLWNhcmQxe1xyXG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAxMHB4O1xyXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDEwcHg7XHJcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDEwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3MzM3ODtcclxuICBwYWRkaW5nLWxlZnQ6IDBweDtcclxuICBwYWRkaW5nLXRvcDogMXB4O1xyXG4gIG1hcmdpbi10b3A6IC00MHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAtNDBweDtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgaGVpZ2h0OiAzNXB4O1xyXG4gIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gIH1cclxuICB0cntcclxuICBwYWRkaW5nLXRvcDogMXB4O1xyXG4gIH1cclxuICBtYXQtaWNvbntcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIG1hcmdpbi10b3A6IDFweDtcclxuICAgIH1cclxuICB0YWJsZSB0Ym9keSB0ciB0ZHtcclxuICBwYWRkaW5nOiAwcHggIWltcG9ydGFudDtcclxuICB2ZXJ0aWNhbC1hbGlnbjogaW5oZXJpdCAhaW1wb3J0YW50O1xyXG4gIH1cclxuXHJcbi5leGFtcGxlLWNhcmR7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG59XHJcbnRoe1xyXG4gIGZvbnQtZmFtaWx5OiAnTG9yYScsIHNlcmlmO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgY29sb3I6ICNmNzMzNzg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ProductionMasterService } from '../production-master.service';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { ShotBlastingMaster } from './shot-blasting-master';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MachineDetails } from '../machine-details/machine-details';\r\nimport { element } from 'protractor';\r\nimport { ItemsService } from '../../../items/items.service';\r\nimport { Items } from '../../../items/items';\r\nimport { StockService } from '../../../stock/stock.service';\r\n\r\n@Component({\r\n  selector: 'app-shot-blasting-master',\r\n  templateUrl: './shot-blasting-master.component.html',\r\n  styleUrls: ['./shot-blasting-master.component.scss']\r\n})\r\nexport class ShotBlastingMasterComponent implements OnInit {\r\n  dataSource;\r\n  dataSource1;\r\n  public items: Items[];\r\n  public machineDetails: MachineDetails[];\r\n  public type: string;\r\n  public shotBlasting: ShotBlastingMaster;\r\n  public shotBlastings1: ShotBlastingMaster[];\r\n  public shotBlastings2: ShotBlastingMaster[];\r\n  private notifier: NotifierService;\r\n  constructor(public productionMasterService: ProductionMasterService, public stockService: StockService,\r\n    notifierService: NotifierService, public itemService: ItemsService) {\r\n    this.notifier = notifierService;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.type = 'ShotBlasting';\r\n    this.shotBlasting = new ShotBlastingMaster();\r\n    this.getAllShotBlastingConsumable();\r\n    this.getAllShotBlastingPart();\r\n    this.getAllShotBlastingMachine(this.type);\r\n  }\r\n\r\n  applyFilter(filterValue: String) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllShotBlastingMachine(type: string) {\r\n    this.productionMasterService.getMachineDetailsByType(type).subscribe((data) => {\r\n      this.machineDetails = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getMachineName(machineId: string) {\r\n    this.machineDetails.forEach(res => {\r\n      if (res.machineId === machineId) {\r\n        this.shotBlasting.machineName = res.machineName;\r\n      }\r\n    });\r\n  }\r\n\r\n  getItemNames(itemType: string) {\r\n    itemType = 'Mc' + itemType;\r\n    let itemCategory;\r\n    itemCategory = 'ShotBlasting';\r\n    this.itemService.getItemsByItemType(itemType, itemCategory).subscribe((data) => {\r\n      this.items = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n\r\n  }\r\n\r\n  getPerKgCost(itemName: string) {\r\n    let item;\r\n    item = true;\r\n    if (this.shotBlasting._id === undefined) {\r\n      if (this.shotBlasting.itemType === 'Consumable') {\r\n        this.shotBlastings1.forEach(res => {\r\n          if (this.shotBlasting.machineId === res.machineId &&\r\n            this.shotBlasting.itemType === res.itemType && itemName === res.consumableName) {\r\n            this.shotBlasting.consumableName = '';\r\n            this.notifier.notify('error', 'Same Machine Id and consumableName already exists');\r\n            item = false;\r\n          }\r\n        });\r\n        if (item === true) {\r\n          this.stockService.getMcConsumableStockByItemName(itemName).subscribe((data) => {\r\n            this.shotBlasting.perKgCost = data.perKG;\r\n          }, (err) => {\r\n            console.log(err);\r\n          });\r\n        }\r\n      } else if (this.shotBlasting.itemType === 'Parts') {\r\n        this.shotBlastings2.forEach(res => {\r\n          if (this.shotBlasting.machineId === res.machineId &&\r\n            this.shotBlasting.itemType === res.itemType && itemName === res.partName) {\r\n            this.shotBlasting.partName = '';\r\n            this.notifier.notify('error', 'Same Machine Id and partName already exists');\r\n            item = false;\r\n          }\r\n        });\r\n        if (item === true) {\r\n          this.stockService.getMcPartStockByItemName(itemName).subscribe((data) => {\r\n            this.shotBlasting.partCost = data.perKG;\r\n          }, (err) => {\r\n            console.log(err);\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**get All shotBlasting details */\r\n  getAllShotBlastingConsumable() {\r\n    this.productionMasterService.getAllShotBlastingConsumable().subscribe((data) => {\r\n      this.shotBlastings1 = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n  /**get All shotBlasting details */\r\n  getAllShotBlastingPart() {\r\n    this.productionMasterService.getAllShotBlastingPart().subscribe((data1) => {\r\n      this.shotBlastings2 = data1;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  /**save the shortBlasting details */\r\n  saveShotBlasting(exampleForm: NgForm) {\r\n    if (this.shotBlasting._id === undefined || this.shotBlasting._id === '') {\r\n      this.shotBlasting.createdBy = localStorage.getItem('user');\r\n      this.productionMasterService.saveShotBlasting(this.shotBlasting).subscribe((data) => {\r\n        this.notifier.notify('success', 'Saved Successfully');\r\n        this.getAllShotBlastingConsumable();\r\n        this.getAllShotBlastingPart();\r\n        exampleForm.resetForm();\r\n      }, (err) => {\r\n        this.notifier.notify('error', 'Not Save');\r\n      });\r\n    } else {\r\n      this.shotBlasting.modifiedBy = localStorage.getItem('user');\r\n      this.productionMasterService.updateShotBlasting(this.shotBlasting).subscribe((data) => {\r\n        this.notifier.notify('success', 'Updated Successfully');\r\n        this.getAllShotBlastingConsumable();\r\n        this.getAllShotBlastingPart();\r\n        exampleForm.resetForm();\r\n        this.shotBlasting._id = undefined;\r\n      }, (err) => {\r\n        this.notifier.notify('error', 'Not Update');\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  /**edit the shotBlasting details  */\r\n  editshotBlasting(i: Number, _id: String, machineId: string, machineName: string, itemType: string,\r\n    consumableName: string, totalCapacity: number,\r\n    perKgCost: number, replacementRate: string, replacementQuantity: number, partName: string, partCost: number, status: string) {\r\n    this.shotBlasting._id = _id;\r\n    this.shotBlasting.machineId = machineId;\r\n    this.shotBlasting.machineName = machineName;\r\n    this.shotBlasting.itemType = itemType;\r\n    this.shotBlasting.consumableName = consumableName;\r\n    this.shotBlasting.totalCapacity = totalCapacity;\r\n    this.shotBlasting.perKgCost = perKgCost;\r\n    this.shotBlasting.replacementRate = replacementRate;\r\n    this.shotBlasting.replacementQuantity = replacementQuantity;\r\n    this.shotBlasting.partName = partName;\r\n    this.shotBlasting.partCost = partCost;\r\n    this.shotBlasting.status = status;\r\n    this.getItemNames(itemType);\r\n    if (consumableName !== undefined) {\r\n      this.getPerKgCost(consumableName);\r\n    } else {\r\n      this.getPerKgCost(partName);\r\n    }\r\n  }\r\n\r\n  /**delete shotBlasting details */\r\n  deleteShotBlasting(i: Number, _id: String) {\r\n    this.shotBlasting._id = _id;\r\n    this.shotBlasting.modifiedBy = localStorage.getItem('user');\r\n    this.productionMasterService.deleteShotBlasting(this.shotBlasting).subscribe((data) => {\r\n      this.notifier.notify('success', 'Deleted Successfully');\r\n      this.getAllShotBlastingConsumable();\r\n      this.getAllShotBlastingPart();\r\n      this.shotBlasting._id = '';\r\n    }, (err) => {\r\n      this.notifier.notify('error', 'Not Delete');\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.getAllShotBlastingConsumable();\r\n    this.getAllShotBlastingPart();\r\n  }\r\n\r\n  /**cancel button */\r\n  cancel(exampleForm: NgForm) {\r\n    this.shotBlasting._id = undefined;\r\n    exampleForm.resetForm();\r\n  }\r\n}\r\n","export class ShotBlastingMaster {\r\n  _id: String;\r\n  machineId: string;\r\n  machineName: string;\r\n  itemType: string;\r\n  consumableName: string;\r\n  totalCapacity: number;\r\n  perKgCost: number;\r\n  replacementRate: string;\r\n  replacementQuantity: number;\r\n  partName: string;\r\n  partCost: number;\r\n  status: string;\r\n  createdBy: String;\r\n  modifiedBy: String;\r\n}\r\n"],"sourceRoot":""}
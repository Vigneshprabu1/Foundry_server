{"version":3,"sources":["webpack:///./src/app/foundry/customer/add-customer/add-customer.component.html","webpack:///./src/app/foundry/customer/add-customer/add-customer.component.scss","webpack:///./src/app/foundry/customer/add-customer/add-customer.component.ts","webpack:///./src/app/foundry/customer/customer-routing.module.ts","webpack:///./src/app/foundry/customer/customer.component.html","webpack:///./src/app/foundry/customer/customer.component.scss","webpack:///./src/app/foundry/customer/customer.component.ts","webpack:///./src/app/foundry/customer/customer.module.ts","webpack:///./src/app/foundry/customer/customer.ts","webpack:///./src/app/foundry/customer/delete-customer/delete-customer.component.html","webpack:///./src/app/foundry/customer/delete-customer/delete-customer.component.scss","webpack:///./src/app/foundry/customer/delete-customer/delete-customer.component.ts","webpack:///./src/app/foundry/customer/edit-customer/edit-customer.component.html","webpack:///./src/app/foundry/customer/edit-customer/edit-customer.component.scss","webpack:///./src/app/foundry/customer/edit-customer/edit-customer.component.ts"],"names":[],"mappings":"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","file":"customer-customer-module.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1 mat-dialog-title>Add Customer</h1>\\r\\n  <form [formGroup]=\\\"userForm\\\">\\r\\n    <div mat-dialog-content>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput placeholder=\\\"Customer Name\\\" formControlName=\\\"customerName\\\" id=\\\"customerName\\\" name=\\\"customerName\\\"\\r\\n          [(ngModel)]=\\\"customer.customerName\\\" >\\r\\n        <mat-error>\\r\\n          <control-messages [control]=\\\"userForm.controls.customerName\\\"></control-messages>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput placeholder=\\\"Mobile No\\\" formControlName=\\\"mobileNo\\\" id=\\\"mobileNo\\\" [maxlength]=\\\"10\\\" name=\\\"mobileNo\\\"\\r\\n          [(ngModel)]=\\\"customer.mobileNo\\\" (ngModelChange)=\\\"selectedMobile(customer.mobileNo)\\\">\\r\\n        <mat-error>\\r\\n          <control-messages [control]=\\\"userForm.controls.mobileNo\\\"></control-messages>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput placeholder=\\\"Email Id\\\" formControlName=\\\"emailId\\\" id=\\\"emailId\\\"  name=\\\"emailId\\\"\\r\\n          [(ngModel)]=\\\"customer.emailId\\\" (ngModelChange)=\\\"selectedEmail(customer.emailId)\\\">\\r\\n        <mat-error>\\r\\n          <control-messages [control]=\\\"userForm.controls.emailId\\\"></control-messages>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput placeholder=\\\"Address\\\" formControlName=\\\"address\\\" id=\\\"address\\\" name=\\\"address\\\"\\r\\n          [(ngModel)]=\\\"customer.address\\\">\\r\\n        <mat-error>\\r\\n          <control-messages [control]=\\\"userForm.controls.address\\\"></control-messages>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div mat-dialog-actions align=\\\"end\\\">\\r\\n      <button mat-raised-button (click)=\\\"addCustomer()\\\" color=\\\"primary\\\"\\r\\n        [disabled]=\\\"!userForm.valid\\\">Save</button>\\r\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">Close</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n<notifier-container></notifier-container>\"","module.exports = \".example-full-width {\\n  width: 100%;\\n  text-align: center; }\\n\\nh1 {\\n  font-size: 20px;\\n  text-align: center; }\\n\\np {\\n  font-family: Lato; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9jdXN0b21lci9hZGQtY3VzdG9tZXIvRTpcXFZwX1dTXFxmb3VuZHJ5LWNsaWVudC9zcmNcXGFwcFxcZm91bmRyeVxcY3VzdG9tZXJcXGFkZC1jdXN0b21lclxcYWRkLWN1c3RvbWVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsV0FBVztFQUNYLGtCQUFrQixFQUFBOztBQUVwQjtFQUNFLGVBQWU7RUFDZixrQkFBa0IsRUFBQTs7QUFFcEI7RUFDRSxpQkFBaUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvY3VzdG9tZXIvYWRkLWN1c3RvbWVyL2FkZC1jdXN0b21lci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uZXhhbXBsZS1mdWxsLXdpZHRoIHtcclxuICB3aWR0aDogMTAwJTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuaDF7XHJcbiAgZm9udC1zaXplOiAyMHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5wIHtcclxuICBmb250LWZhbWlseTogTGF0bztcclxufVxyXG4iXX0= */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Customer } from '../customer';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CustomerService } from '../customer.service';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ValidationService } from '../../validation/validation-service';\r\n@Component({\r\n  selector: 'app-add-customer',\r\n  templateUrl: './add-customer.component.html',\r\n  styleUrls: ['./add-customer.component.scss']\r\n})\r\nexport class AddCustomerComponent implements OnInit {\r\n  userForm: any;\r\n  public customer: Customer;\r\n  public customerList:Customer[];\r\n  private notifier: NotifierService;\r\n  public currentUser;\r\n  constructor(public dialogRef: MatDialogRef<AddCustomerComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private customerService: CustomerService, notifier: NotifierService, private formBuilder: FormBuilder) {\r\n    this.notifier = notifier;\r\n    this.userForm = this.formBuilder.group({\r\n      'customerName': ['', [Validators.required, ValidationService.nameValidation]],\r\n      'emailId': ['', [Validators.required, ValidationService.emailValidator]],\r\n      'mobileNo': ['', [Validators.required, ValidationService.mobileValidator]],\r\n      'address': ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = localStorage.getItem('user');\r\n    this.customer = new Customer();\r\n    this.getAllCustomer();\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getAllCustomer() {\r\n    this.customerService.getCustomers().subscribe((data) => {\r\n      this.customerList = data;\r\n    }, (err) => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  selectedEmail(email) {\r\n    this.customerList.forEach(res => {\r\n      if (email === res.emailId) {\r\n        this.notifier.notify('error', 'Email id already exists!');\r\n        this.customer.emailId = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  selectedMobile(mobile){\r\n    this.customerList.forEach(res => {\r\n      if (mobile === res.mobileNo) {\r\n        this.notifier.notify('error', 'Mobile No already exists!');\r\n        this.customer.mobileNo = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  addCustomer() {\r\n     this.customer.modifiedBy = this.currentUser;\r\n    this.customerService.saveCustomers(this.customer).subscribe((data) => {\r\n      this.notifier.notify('success', 'Save Successfully');\r\n      this.dialogRef.close();\r\n    }, (error) => {\r\n      console.log(error);\r\n      this.notifier.notify('error', 'Not Save');\r\n    });\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {CustomerComponent} from './customer.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CustomerComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CustomerRoutingModule {}\r\n","module.exports = \"\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n      </mat-form-field>\\r\\n    <div class=\\\"example-table-container mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort >\\r\\n\\r\\n      <ng-container matColumnDef=\\\"customerName\\\">\\r\\n        <th mat-header-cell  *matHeaderCellDef mat-sort-header> Customer Name</th>\\r\\n        <td mat-cell  *matCellDef=\\\"let customer\\\">{{customer.customerName}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"mobileNo\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Mobile No</th>\\r\\n        <td mat-cell *matCellDef=\\\"let customer\\\">{{customer.mobileNo}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"emailId\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\\r\\n        <td mat-cell *matCellDef=\\\"let customer\\\">{{customer.emailId}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"address\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Address</th>\\r\\n        <td mat-cell *matCellDef=\\\"let customer\\\">{{customer.address}}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n          <button mat-icon-button matTooltip=\\\"Add Customer\\\" color=\\\"accent\\\" (click)=\\\"addCustomer()\\\">\\r\\n            <mat-icon aria-label=\\\"Add\\\">add</mat-icon>\\r\\n          </button>\\r\\n          <button mat-icon-button matTooltip=\\\"Refresh Customer\\\" color=\\\"accent\\\" (click)=\\\"getCustomer()\\\">\\r\\n            <mat-icon aria-label=\\\"Refresh\\\">refresh</mat-icon>\\r\\n          </button>\\r\\n        </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n          <button mat-icon-button matTooltip=\\\"Edit Customer\\\" color=\\\"accent\\\" (click)=\\\"editCustomer(row._id,row.customerName,row.mobileNo,row.emailId,row.address)\\\">\\r\\n            <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n          </button>\\r\\n          <button mat-icon-button matTooltip=\\\"Delete Customer\\\" color=\\\"accent\\\" (click)=\\\"deleteCustomer(row._id,row.customerName)\\\">\\r\\n            <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n          </button>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <tr mat-header-row mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n  </div>\\r\\n</div>\\r\\n<notifier-container></notifier-container>\\r\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%;\\n  text-align: center; }\\n\\nth {\\n  font-size: 20px;\\n  font-family: 'Lora', serif;\\n  color: #f73378; }\\n\\n.example-table-container {\\n  position: relative;\\n  overflow: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9jdXN0b21lci9FOlxcVnBfV1NcXGZvdW5kcnktY2xpZW50L3NyY1xcYXBwXFxmb3VuZHJ5XFxjdXN0b21lclxcY3VzdG9tZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxXQUFXLEVBQUE7O0FBR1g7RUFDRSxlQUFlO0VBQ2YsV0FBVztFQUNYLGtCQUFrQixFQUFBOztBQUdwQjtFQUNFLGVBQWU7RUFDZiwwQkFBMEI7RUFDMUIsY0FBYyxFQUFBOztBQUVsQjtFQUNFLGtCQUFrQjtFQUNsQixjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9mb3VuZHJ5L2N1c3RvbWVyL2N1c3RvbWVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbnRhYmxle1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4gIC5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG4gIHRoe1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgICBjb2xvcjogI2Y3MzM3ODtcclxufVxyXG4uZXhhbXBsZS10YWJsZS1jb250YWluZXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzogYXV0bztcclxufVxyXG4iXX0= */\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport {Customer} from './customer';\r\nimport {AddCustomerComponent} from './add-customer/add-customer.component';\r\nimport {EditCustomerComponent} from './edit-customer/edit-customer.component';\r\nimport {DeleteCustomerComponent} from './delete-customer/delete-customer.component';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport {CustomerService} from './customer.service';\r\nimport { NotifierService } from 'angular-notifier';\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.scss']\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n\r\n  public customer: Customer[];\r\n  resultsLength = 0;\r\n  private notifier: NotifierService;\r\n  displayedColumns: String[] = [ 'customerName', 'mobileNo', 'emailId', 'address', 'actions'];\r\n  dataSource: MatTableDataSource<Customer>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private customerService: CustomerService,\r\n        private dialog: MatDialog,  notifier: NotifierService) {\r\n          this.notifier = notifier;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getCustomer();\r\n  }\r\n\r\n  applyFilter(filterValue: String) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getCustomer() {\r\n    this.customerService.getCustomers().subscribe((customer) => {\r\n      this.dataSource = new MatTableDataSource(customer);\r\n     this.dataSource.paginator = this.paginator;\r\n     this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  addCustomer(): void {\r\n    const dialogRef = this.dialog.open(AddCustomerComponent, {\r\n      data: {}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getCustomer();\r\n    });\r\n  }\r\n\r\n  editCustomer(_id: String, customerName: String, mobileNo: String, emailId: String, address: String) {\r\n    const dialogRef = this.dialog.open(EditCustomerComponent, {\r\n      data: {_id: _id, customerName: customerName, mobileNo: mobileNo, emailId: emailId, address: address}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getCustomer();\r\n    });\r\n  }\r\n  deleteCustomer(_id: String, customerName: String) {\r\n    const dialogRef = this.dialog.open(DeleteCustomerComponent, {\r\n      data: {_id: _id, customerName: customerName}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getCustomer();\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CustomerComponent } from './customer.component';\r\nimport {CustomerRoutingModule} from './customer-routing.module';\r\nimport {MaterialModule} from '../../app.module';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { AddCustomerComponent } from './add-customer/add-customer.component';\r\nimport { EditCustomerComponent } from './edit-customer/edit-customer.component';\r\nimport { DeleteCustomerComponent } from './delete-customer/delete-customer.component';\r\nimport {CustomerService} from './customer.service';\r\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\r\nimport {CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\r\nimport { FoundryModule } from '../foundry.module';\r\nconst customNotifierOptions: NotifierOptions = {\r\n  position: {\r\n    horizontal: {\r\n      position: 'middle',\r\n      distance: 12\r\n    },\r\n    vertical: {\r\n      position: 'top',\r\n      distance: 50,\r\n      gap: 10\r\n    }\r\n  },\r\n  theme: 'material',\r\n  behaviour: {\r\n    autoHide: 1000,\r\n    onClick: 'hide',\r\n    onMouseover: 'pauseAutoHide',\r\n    showDismissButton: true,\r\n    stacking: 4\r\n  },\r\n  animations: {\r\n    enabled: true,\r\n    show: {\r\n      preset: 'slide',\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    hide: {\r\n      preset: 'fade',\r\n      speed: 300,\r\n      easing: 'ease',\r\n      offset: 50\r\n    },\r\n    shift: {\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    overlap: 10\r\n  }\r\n};\r\n\r\n@NgModule({\r\n  declarations: [CustomerComponent, AddCustomerComponent, EditCustomerComponent, DeleteCustomerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CustomerRoutingModule, MaterialModule,\r\n    FormsModule, ReactiveFormsModule, FoundryModule,\r\n    NotifierModule.withConfig(customNotifierOptions)\r\n  ],\r\n  entryComponents: [\r\n    AddCustomerComponent, EditCustomerComponent, DeleteCustomerComponent\r\n  ],\r\n  providers: [\r\n    CustomerService\r\n  ],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ]\r\n})\r\nexport class CustomerModule { }\r\n","export class Customer {\r\n _id: String;\r\n  customerName: String;\r\n  mobileNo: String;\r\n  emailId: String;\r\n  address: String;\r\n  createdBy: String;\r\n  modifiedBy: String;\r\n}\r\n\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <h1 mat-dialog-title>Are You Sure?</h1>\\r\\n      <div mat-dialog-content>\\r\\n        <p>Customer Name: {{data.customerName}}</p>\\r\\n      </div>\\r\\n      <div mat-dialog-actions align=\\\"end\\\">\\r\\n        <button mat-raised-button (click)=\\\"deleteCustomer()\\\" color=\\\"primary\\\">Delete</button>\\r\\n        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">Close</button>\\r\\n      </div>\\r\\n  </div>\\r\\n  <notifier-container></notifier-container>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvY3VzdG9tZXIvZGVsZXRlLWN1c3RvbWVyL2RlbGV0ZS1jdXN0b21lci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport {Customer} from '../customer';\r\nimport {CustomerService} from '../customer.service';\r\nimport { NotifierService } from 'angular-notifier';\r\n@Component({\r\n  selector: 'app-delete-customer',\r\n  templateUrl: './delete-customer.component.html',\r\n  styleUrls: ['./delete-customer.component.scss']\r\n})\r\nexport class DeleteCustomerComponent implements OnInit {\r\n\r\n  public customer: Customer;\r\n  private notifier: NotifierService;\r\n  public currentUser;\r\n  constructor(public dialogRef: MatDialogRef<DeleteCustomerComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private customerService: CustomerService, notifier: NotifierService ) {\r\n      this.notifier = notifier;\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = localStorage.getItem('user');\r\n    this.customer = new Customer();\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  deleteCustomer() {\r\n    this.customerService.deleteCustomer(this.data).subscribe((data) => {\r\n      this.notifier.notify( 'success', 'Deleted Successfully' );\r\n      this.dialogRef.close();\r\n    }, (error) => {\r\n      console.log(error);\r\n      this.notifier.notify( 'error', 'Not deleted' );\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1 mat-dialog-title>Edit Customer</h1>\\r\\n  <form [formGroup]=\\\"userForm\\\">\\r\\n    <div mat-dialog-content>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput placeholder=\\\"Customer Name\\\" formControlName=\\\"customerName\\\" id=\\\"customerName\\\" name=\\\"customerName\\\"\\r\\n          [(ngModel)]=\\\"data.customerName\\\">\\r\\n        <mat-error>\\r\\n          <control-messages [control]=\\\"userForm.controls.customerName\\\"></control-messages>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput placeholder=\\\"Mobile No\\\" formControlName=\\\"mobileNo\\\" id=\\\"mobileNo\\\" [maxlength]=\\\"10\\\"\\r\\n          name=\\\"mobileNo\\\" [(ngModel)]=\\\"data.mobileNo\\\">\\r\\n        <mat-error>\\r\\n          <control-messages [control]=\\\"userForm.controls.mobileNo\\\"></control-messages>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput placeholder=\\\"Email Id\\\" formControlName=\\\"emailId\\\" id=\\\"emailId\\\" name=\\\"emailId\\\"\\r\\n          [(ngModel)]=\\\"data.emailId\\\">\\r\\n        <mat-error>\\r\\n          <control-messages [control]=\\\"userForm.controls.emailId\\\"></control-messages>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput placeholder=\\\"Address\\\" formControlName=\\\"address\\\" id=\\\"address\\\" name=\\\"address\\\"\\r\\n          [(ngModel)]=\\\"data.address\\\">\\r\\n        <mat-error>\\r\\n          <control-messages [control]=\\\"userForm.controls.address\\\"></control-messages>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div mat-dialog-actions align=\\\"end\\\">\\r\\n      <button mat-raised-button (click)=\\\"updateCustomer()\\\" [disabled]=\\\"!userForm.valid\\\"\\r\\n        color=\\\"primary\\\">Edit</button>\\r\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">Close</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n<notifier-container></notifier-container>\"","module.exports = \".example-full-width {\\n  width: 100%;\\n  text-align: center; }\\n\\nh1 {\\n  font-size: 20px;\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9jdXN0b21lci9lZGl0LWN1c3RvbWVyL0U6XFxWcF9XU1xcZm91bmRyeS1jbGllbnQvc3JjXFxhcHBcXGZvdW5kcnlcXGN1c3RvbWVyXFxlZGl0LWN1c3RvbWVyXFxlZGl0LWN1c3RvbWVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsV0FBVztFQUNYLGtCQUFrQixFQUFBOztBQUVwQjtFQUNFLGVBQWU7RUFDZixrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvY3VzdG9tZXIvZWRpdC1jdXN0b21lci9lZGl0LWN1c3RvbWVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5leGFtcGxlLWZ1bGwtd2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5oMXtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport {Customer} from '../customer';\r\nimport {CustomerService} from '../customer.service';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ValidationService } from '../../validation/validation-service';\r\n@Component({\r\n  selector: 'app-edit-customer',\r\n  templateUrl: './edit-customer.component.html',\r\n  styleUrls: ['./edit-customer.component.scss']\r\n})\r\nexport class EditCustomerComponent implements OnInit {\r\n  userForm: any;\r\n  private notifier: NotifierService;\r\n  public currentUser;\r\n  constructor(public dialogRef: MatDialogRef<EditCustomerComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Customer,\r\n    private customerService: CustomerService, notifier: NotifierService, private formBuilder: FormBuilder ) {\r\n      this.notifier = notifier;\r\n    this.userForm = this.formBuilder.group({\r\n      'customerName': ['', [Validators.required, ValidationService.nameValidation]],\r\n      'emailId': ['', [Validators.required, ValidationService.emailValidator]],\r\n      'mobileNo': ['', [Validators.required, ValidationService.mobileValidator]],\r\n      'address': ['', [Validators.required]]\r\n    });\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = localStorage.getItem('user');\r\n    console.log(this.data);\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  updateCustomer() {\r\n    console.log(this.data);\r\n    this.data.modifiedBy = this.currentUser;\r\n    this.customerService.updateCustomer(this.data).subscribe((data) => {\r\n      this.notifier.notify( 'success', 'Updated Successfully' );\r\n      this.dialogRef.close();\r\n    }, (error) => {\r\n      console.log(error);\r\n      this.notifier.notify( 'error', 'Not Update' );\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}
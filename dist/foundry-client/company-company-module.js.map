{"version":3,"sources":["webpack:///./src/app/foundry/company/add-company/add-company.component.html","webpack:///./src/app/foundry/company/add-company/add-company.component.scss","webpack:///./src/app/foundry/company/add-company/add-company.component.ts","webpack:///./src/app/foundry/company/company-routing-module.ts","webpack:///./src/app/foundry/company/company.component.html","webpack:///./src/app/foundry/company/company.component.scss","webpack:///./src/app/foundry/company/company.component.ts","webpack:///./src/app/foundry/company/company.module.ts","webpack:///./src/app/foundry/company/company.service.ts","webpack:///./src/app/foundry/company/company.ts","webpack:///./src/app/foundry/company/delete-company/delete-company.component.html","webpack:///./src/app/foundry/company/delete-company/delete-company.component.scss","webpack:///./src/app/foundry/company/delete-company/delete-company.component.ts","webpack:///./src/app/foundry/company/edit-company/edit-company.component.html","webpack:///./src/app/foundry/company/edit-company/edit-company.component.scss","webpack:///./src/app/foundry/company/edit-company/edit-company.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+3F;;;;;;;;;;;ACAA,uCAAuC,gBAAgB,EAAE,QAAQ,iDAAiD,oBAAoB,uBAAuB,EAAE,oBAAoB,uBAAuB,iDAAiD,oBAAoB,EAAE,gBAAgB,uBAAuB,iDAAiD,oBAAoB,EAAE,+CAA+C,+nC;;;;;;;;;;;;;;;;;;;;;ACApX;AACP;AAGd;AAE6B;AACd;AAOpD;IAGA,6BAAmB,cAA8B,EAAE,eAAgC,EAC1E,YAA8C,EAAkC,IAAa;QADnF,mBAAc,GAAd,cAAc,CAAgB;QACxC,iBAAY,GAAZ,YAAY,CAAkC;QAAkC,SAAI,GAAJ,IAAI,CAAS;QACpG,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC;IAClC,CAAC;IAEC,sCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAC,IAAI,gDAAO,EAAE,CAAC;IAC7B,CAAC;IAEC,sCAAsC;IACtC,+CAAiB,GAAjB;QAAA,iBASH;QARK,IAAI,CAAC,OAAO,CAAC,UAAU,GAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxD,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACjE,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC;YACzD,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC,EAAE,UAAC,GAAG;YACL,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACX,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IA1BY,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,qIAA2C;;SAE5C,CAAC;QAKwD,6GAAM,CAAC,iEAAe,CAAC;+EAD9C,+DAAc,EAAmB,gEAAe;YAC7D,8DAAY,EAA6D,gDAAO;OAJzF,mBAAmB,CA2B/B;IAAD,0BAAC;CAAA;AA3B+B;;;;;;;;;;;;;;;;;;;;ACdO;AACc;AACE;AAGvD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;KAC5B;CACF,CAAC;AAMF;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAJhC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;AChBjC,ihBAAihB,qBAAqB,sOAAsO,iBAAiB,2OAA2O,iBAAiB,uOAAuO,iBAAiB,+OAA+O,oCAAoC,4OAA4O,mCAAmC,oPAAoP,qBAAqB,4OAA4O,iBAAiB,glBAAglB,u6BAAu6B,2BAA2B,iN;;;;;;;;;;;ACA30H,iCAAiC,eAAe,qBAAqB,EAAE,yBAAyB,uBAAuB,iDAAiD,oBAAoB,EAAE,YAAY,sBAAsB,EAAE,WAAW,gBAAgB,EAAE,qBAAqB,oBAAoB,gBAAgB,EAAE,QAAQ,eAAe,iDAAiD,EAAE,QAAQ,iDAAiD,oBAAoB,eAAe,mBAAmB,EAAE,8BAA8B,uBAAuB,mBAAmB,EAAE,+CAA+C,mkD;;;;;;;;;;;;;;;;;;;;;;;;ACAjjB;AACV;AACA;AACsC;AAErD;AACyC;AACM;AACT;AAO1E;IAIE,0BAAmB,cAA8B,EAAE,eAAgC,EAAS,SAAoB;QAA7F,mBAAc,GAAd,cAAc,CAAgB;QAA2C,cAAS,GAAT,SAAS,CAAW;QAGhH,qBAAgB,GAAa,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW;YACvF,SAAS,EAAE,aAAa,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAHhD,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC;IAClC,CAAC;IAOD,mCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,gDAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAGD,sCAAW,GAAX,UAAY,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAED,8BAA8B;IAC9B,8CAAmB,GAAnB;QAAA,iBAQC;QAPC,IAAI,CAAC,cAAc,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YACvD,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,CAAC;YAC/C,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;YAC3C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;QACnC,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yBAAyB;IACzB,2CAAgB,GAAhB;QAAA,iBAMC;QALC,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,sFAAmB,EAAE,EAC7D,CAAC,CAAC;QACH,YAAY,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAC,MAAM;YAC1C,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAA4B;IAC5B,8CAAmB,GAAnB,UAAoB,CAAS,EAAE,GAAW,EAAE,WAAmB,EAAE,OAAe,EAAE,OAAe,EAAE,OAAe,EAChH,SAAiB,EAAE,OAAe,EAAE,WAAmB,EAAE,OAAe;QAD1E,iBAWC;QATC,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,yFAAoB,EAAE;YAC7D,IAAI,EAAE;gBACJ,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS;gBAC9G,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO;aAC7D;SACF,CAAC,CAAC;QACH,YAAY,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAC,MAAM;YAC1C,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAEH,6BAA6B;IAC3B,8CAAmB,GAAnB,UAAoB,CAAS,EAAE,GAAW,EAAE,WAAmB,EAAE,OAAe,EAAE,OAAe,EAAE,OAAe,EAChH,SAAiB,EAAE,OAAe,EAAE,WAAmB,EAAE,OAAe;QAD1E,iBAWC;QATC,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,+FAAsB,EAAE;YAC/D,IAAI,EAAE;gBACJ,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS;gBAC9G,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO;aAC7D;SACF,CAAC,CAAC;QACH,YAAY,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAC,MAAM;YAC1C,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IA9DwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;uDAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;kDAAC;IAXvB,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,iHAAuC;;SAExC,CAAC;+EAKmC,+DAAc,EAAmB,gEAAe,EAAoB,2DAAS;OAJrG,gBAAgB,CAyE5B;IAAD,uBAAC;CAAA;AAzE4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfY;AACM;AACQ;AACS;AACU;AACG;AACM;AAC/B;AACe;AACV;AACS;AAClE,IAAM,qBAAqB,GAAoB;IAC7C,QAAQ,EAAE;QACR,UAAU,EAAE;YACV,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,EAAE;SACb;QACD,QAAQ,EAAE;YACR,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAE,EAAE;YACZ,GAAG,EAAE,EAAE;SACR;KACF;IACD,KAAK,EAAE,UAAU;IACjB,SAAS,EAAE;QACT,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,MAAM;QACf,WAAW,EAAE,eAAe;QAC5B,iBAAiB,EAAE,IAAI;QACvB,QAAQ,EAAE,CAAC;KACZ;IACD,UAAU,EAAE;QACV,OAAO,EAAE,IAAI;QACb,IAAI,EAAE;YACJ,MAAM,EAAE,OAAO;YACf,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,MAAM;SACf;QACD,IAAI,EAAE;YACJ,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,EAAE;SACX;QACD,KAAK,EAAE;YACL,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,MAAM;SACf;QACD,OAAO,EAAE,EAAE;KACZ;CACF,CAAC;AAYF;IAAA;IAA6B,CAAC;IAAjB,aAAa;QAVzB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,mEAAgB,EAAE,sFAAmB,EAAE,yFAAoB,EAAE,+FAAsB,CAAC;YACnG,OAAO,EAAE;gBACP,4DAAY,EAAC,4EAAoB,EAAC,iEAAc,EAAC,+DAAc,CAAC,UAAU,CAAC,qBAAqB,CAAC,EAAC,iEAAc;gBAC/G,2DAAW,EAAC,mEAAmB;aAEjC;YACD,SAAS,EAAC,CAAC,qEAAa,CAAC;YACzB,eAAe,EAAC,CAAC,sFAAmB,EAAE,yFAAoB,EAAE,+FAAsB,CAAC;SACpF,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;AC9DiB;AAC6B;AACnC;AACO;AACV;AAMlC;IAME,wBAAmB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAHtB,YAAO,GAAW,MAAM,CAAC;QACzB,YAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAC9D,YAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC9B,CAAC;IAElC,6BAA6B;IAC7B,4CAAmB,GAAnB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC;aAChE,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,EAC9C,iEAAU,CAAC,UAAC,KAAU;YACtB,OAAO,+CAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC;IAED,yBAAyB;IACzB,0CAAiB,GAAjB,UAAkB,OAAgB;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC;aAC1F,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,EAC9C,iEAAU,CAAC,UAAC,KAAU;YACtB,OAAO,+CAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC;IAED,2BAA2B;IAC3B,4CAAmB,GAAnB,UAAoB,OAAgB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC;aACzF,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,EAC9C,iEAAU,CAAC,UAAC,KAAU;YACtB,OAAO,+CAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC;IAED,2BAA2B;IAC3B,4CAAmB,GAAnB,UAAoB,OAAgB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC;aAC3F,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,EAC9C,iEAAU,CAAC,UAAC,KAAU;YACtB,OAAO,+CAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC;IA1CU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAOyB,kDAAI;OANlB,cAAc,CA2C1B;IAAD,qBAAC;CAAA;AA3C0B;;;;;;;;;;;;;ACV3B;AAAA;AAAA;IAAA;IAYA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;ACZD,6IAA6I,UAAU,iCAAiC,kBAAkB,6R;;;;;;;;;;;ACA1M,qBAAqB,qBAAqB,uBAAuB,iDAAiD,oBAAoB,EAAE,QAAQ,uBAAuB,iDAAiD,oBAAoB,EAAE,+CAA+C,25B;;;;;;;;;;;;;;;;;;;;;ACApO;AACpB;AAE6B;AACf;AACC;AAOpD;IAIE,gCAAmB,cAA8B,EAAE,eAAgC,EAC1E,YAAiD,EAAkC,IAAa;QADtF,mBAAc,GAAd,cAAc,CAAgB;QACxC,iBAAY,GAAZ,YAAY,CAAqC;QAAkC,SAAI,GAAJ,IAAI,CAAS;QACvG,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC;IAClC,CAAC;IAED,yCAAQ,GAAR;IACA,CAAC;IACD,2BAA2B;IAC3B,oDAAmB,GAAnB;QAAA,iBAQC;QAPC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAClE,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,sBAAsB,CAAC,CAAC;YACxD,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC5B,CAAC,EAAE,UAAC,GAAG;YACL,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QAC9C,CAAC,CAAC;IACJ,CAAC;IACD,uCAAM,GAAN;QACE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IAvBU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,8IAA8C;;SAE/C,CAAC;QAM6D,6GAAM,CAAC,iEAAe,CAAC;+EADjD,+DAAc,EAAmB,gEAAe;YAC7D,8DAAY,EAAgE,gDAAO;OAL9F,sBAAsB,CAwBlC;IAAD,6BAAC;CAAA;AAxBkC;;;;;;;;;;;;ACZnC,u3F;;;;;;;;;;;ACAA,0BAA0B,sBAAsB,EAAE,yBAAyB,gBAAgB,EAAE,QAAQ,uBAAuB,iDAAiD,oBAAoB,EAAE,oBAAoB,uBAAuB,iDAAiD,oBAAoB,EAAE,+CAA+C,+/B;;;;;;;;;;;;;;;;;;;;;ACA5S;AAEnB;AAE6B;AACf;AACC;AAOpD;IAIE,8BAAmB,cAA8B,EAAE,eAAgC,EAC1E,YAAgD,EACvB,IAAa;QAF5B,mBAAc,GAAd,cAAc,CAAgB;QACxC,iBAAY,GAAZ,YAAY,CAAoC;QACvB,SAAI,GAAJ,IAAI,CAAS;QAC7C,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC;IAClC,CAAC;IAED,uCAAQ,GAAR;IACA,CAAC;IAED,2BAA2B;IAC3B,kDAAmB,GAAnB;QAAA,iBAQC;QAPG,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACjE,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,sBAAsB,CAAC,CAAC;YACxD,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC5B,CAAC,EAAE,UAAC,GAAG;YACL,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QAC9C,CAAC,CAAC;IACJ,CAAC;IACD,qCAAM,GAAN;QACE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IAzBU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,wIAA4C;;SAE7C,CAAC;QAOG,6GAAM,CAAC,iEAAe,CAAC;+EAFS,+DAAc,EAAmB,gEAAe;YAC5D,8DAAY;YACK,gDAAO;OANpC,oBAAoB,CA0BhC;IAAD,2BAAC;CAAA;AA1BgC","file":"company-company-module.js","sourcesContent":["module.exports = \"  <h1 mat-dialog-title>Add Company Details</h1>\\r\\n  <form>\\r\\n    <div mat-dialog-content>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"companyName\\\" name=\\\"companyName\\\" [(ngModel)]=\\\"company.companyName\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"emailId\\\" name=\\\"emailId\\\" [(ngModel)]=\\\"company.emailId\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"phoneNo\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"company.phoneNo\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"address\\\" name=\\\"address\\\" [(ngModel)]=\\\"company.address\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"startDate\\\" name=\\\"startDate\\\"\\r\\n              [(ngModel)]=\\\"company.startDate\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker1></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"endDate\\\" name=\\\"endDate\\\"\\r\\n              [(ngModel)]=\\\"company.endDate\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker2></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"companyCode\\\" name=\\\"companyCode\\\" [(ngModel)]=\\\"company.companyCode\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"idProof\\\" name=\\\"idProof\\\" [(ngModel)]=\\\"company.idProof\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n  <mat-dialog-actions align=\\\"end\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"saveCompanyMaster()\\\">Save</button>\\r\\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n    </mat-dialog-actions>\\r\\n\"","module.exports = \".example-full-width {\\n  width: 100%; }\\n\\nh1 {\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 20px;\\n  text-align: center; }\\n\\nmat-form-field {\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 18px; }\\n\\nmat-option {\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 18px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9jb21wYW55L2FkZC1jb21wYW55L0U6XFxWcF9XU1xcZm91bmRyeS1jbGllbnQvc3JjXFxhcHBcXGZvdW5kcnlcXGNvbXBhbnlcXGFkZC1jb21wYW55XFxhZGQtY29tcGFueS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLFdBQVcsRUFBQTs7QUFFZjtFQUNJLDRDQUE0QztFQUM1QyxlQUFlO0VBQ2Ysa0JBQWtCLEVBQUE7O0FBRXRCO0VBQ0ksa0JBQWtCO0VBQ2xCLDRDQUE0QztFQUM1QyxlQUFlLEVBQUE7O0FBRW5CO0VBQ0ksa0JBQWtCO0VBQ2xCLDRDQUE0QztFQUM1QyxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9mb3VuZHJ5L2NvbXBhbnkvYWRkLWNvbXBhbnkvYWRkLWNvbXBhbnkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmV4YW1wbGUtZnVsbC13aWR0aHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbmgxe1xyXG4gICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxubWF0LWZvcm0tZmllbGR7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxufVxyXG5tYXQtb3B0aW9ue1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbn0iXX0= */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { NotifierService } from 'angular-notifier';\r\n\r\nimport { NgForm } from '@angular/forms';\r\nimport { Company } from '../company';\r\nimport { MasterService } from '../../master/master.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { CompanyService } from '../company.service';\r\n\r\n@Component({\r\n  selector: 'app-add-company',\r\n  templateUrl: './add-company.component.html',\r\n  styleUrls: ['./add-company.component.scss']\r\n})\r\nexport class AddCompanyComponent implements OnInit {\r\npublic company:Company;\r\nprivate notifier: NotifierService;\r\nconstructor(public companyService: CompanyService, notifierService: NotifierService,\r\n  public matDialogRef:MatDialogRef<AddCompanyComponent>, @Inject(MAT_DIALOG_DATA) public data: Company) {\r\n  this.notifier = notifierService;\r\n}\r\n\r\n  ngOnInit() {\r\n    this.company=new Company();\r\n  }\r\n\r\n    /** save&update the company master  */\r\n    saveCompanyMaster() {\r\n      this.company.modifiedBy=localStorage.getItem('user');\r\n          this.company.createdBy = localStorage.getItem('user');\r\n        this.companyService.saveCompanyMaster(this.company).subscribe((data) => {\r\n          this.notifier.notify('success', 'Saved Successfully');\r\n       this.matDialogRef.close();\r\n        }, (err) => {\r\n          this.notifier.notify('error', 'Not Save');\r\n        });\r\n}\r\n\r\ncancel() {\r\n  this.matDialogRef.close();\r\n}\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport { CompanyComponent } from './company.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CompanyComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyRoutingModule {}","module.exports = \"<div class=\\\"container\\\">\\r\\n    <mat-form-field>\\r\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n      </mat-form-field>\\r\\n      <div class=\\\"example-table-container mat-elevation-z8\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"companyName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>companyName </th>\\r\\n            <td mat-cell *matCellDef=\\\"let company\\\"> {{company.companyName}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"emailId\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>emailId </th>\\r\\n            <td mat-cell *matCellDef=\\\"let company\\\"> {{company.emailId}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"phoneNo\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> phoneNo </th>\\r\\n            <td mat-cell *matCellDef=\\\"let company\\\"> {{company.phoneNo}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"address\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>address </th>\\r\\n            <td mat-cell *matCellDef=\\\"let company\\\"> {{company.address}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"startDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> startDate </th>\\r\\n            <td mat-cell *matCellDef=\\\"let company\\\"> {{company.startDate | date:'MMM d,y'}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"endDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> endDate </th>\\r\\n            <td mat-cell *matCellDef=\\\"let company\\\"> {{company.endDate | date:'MMM d,y' }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"companyCode\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> companyCode </th>\\r\\n            <td mat-cell *matCellDef=\\\"let company\\\"> {{company.companyCode}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"idProof\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> idProof </th>\\r\\n            <td mat-cell *matCellDef=\\\"let company\\\"> {{company.idProof}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"actions\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>\\r\\n              <button mat-icon-button matTooltip=\\\"Refresh\\\" color=\\\"accent\\\" (click)=\\\"refresh()\\\">\\r\\n                <mat-icon>refresh</mat-icon>\\r\\n              </button>\\r\\n              <button mat-icon-button matTooltip=\\\"Add Item\\\" color=\\\"accent\\\"(click)=\\\"addCompanyMaster()\\\">\\r\\n                  <mat-icon>add</mat-icon>\\r\\n                </button>\\r\\n            </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let company;let i=index\\\">\\r\\n              <button mat-icon-button matTooltip=\\\"Edit companyMaster\\\" color=\\\"accent\\\" (click)=\\\"updateCompanyMaster(i,company._id,company.companyName,company.emailId,company.phoneNo,company.address,\\r\\n                company.startDate,company.endDate,company.companyCode,company.idProof)\\\">\\r\\n                <mat-icon>edit</mat-icon>\\r\\n              </button>\\r\\n              <button mat-icon-button matTooltip=\\\"Delete companyMaster\\\" color=\\\"accent\\\" (click)=\\\"deleteCompanyMaster(i,company._id,company.companyName,company.emailId,company.phoneNo,company.address,\\r\\n              company.startDate,company.endDate,company.companyCode,company.idProof)\\\">\\r\\n                <mat-icon>delete</mat-icon>\\r\\n              </button>\\r\\n            </mat-cell>\\r\\n          </ng-container>\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n          </tr>\\r\\n        </table>\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n      </div>\\r\\n     \\r\\n</div>\\r\\n<notifier-container></notifier-container>\\r\\n\"","module.exports = \".example-card {\\n  width: 30%;\\n  margin-top: 50px; }\\n\\n.example-full-width {\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 16px; }\\n\\nbutton {\\n  margin-left: 15px; }\\n\\ntable {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd {\\n  width: 25%;\\n  font-family: 'Times New Roman', Times, serif; }\\n\\nth {\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 20px;\\n  width: 25%;\\n  color: #2979FF; }\\n\\n.example-table-container {\\n  position: relative;\\n  overflow: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9jb21wYW55L0U6XFxWcF9XU1xcZm91bmRyeS1jbGllbnQvc3JjXFxhcHBcXGZvdW5kcnlcXGNvbXBhbnlcXGNvbXBhbnkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxVQUFVO0VBQ1YsZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0ksa0JBQWtCO0VBQ2xCLDRDQUE0QztFQUM1QyxlQUFlLEVBQUE7O0FBRW5CO0VBQ0EsaUJBQWlCLEVBQUE7O0FBRWpCO0VBQ0ksV0FBVyxFQUFBOztBQUdiO0VBQ0UsZUFBZTtFQUNmLFdBQVcsRUFBQTs7QUFHYjtFQUNFLFVBQVU7RUFDViw0Q0FBNEMsRUFBQTs7QUFFOUM7RUFDSSw0Q0FBNEM7RUFDNUMsZUFBZTtFQUNmLFVBQVU7RUFDVixjQUFjLEVBQUE7O0FBRWxCO0VBQ0Usa0JBQWtCO0VBQ2xCLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZvdW5kcnkvY29tcGFueS9jb21wYW55LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY2FyZHtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG5cclxufVxyXG4uZXhhbXBsZS1mdWxsLXdpZHRoe1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuYnV0dG9ue1xyXG5tYXJnaW4tbGVmdDogMTVweDtcclxufVxyXG50YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcblxyXG4gIC5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcblxyXG4gIHRke1xyXG4gICAgd2lkdGg6IDI1JTtcclxuICAgIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xyXG4gIH1cclxuICB0aHtcclxuICAgICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgd2lkdGg6IDI1JTtcclxuICAgICAgY29sb3I6ICMyOTc5RkY7XHJcbiAgfVxyXG4gIC5leGFtcGxlLXRhYmxlLWNvbnRhaW5lciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuICB9XHJcbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CompanyService } from './company.service';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialog } from '@angular/material';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Company } from './company';\r\nimport { EditCompanyComponent } from './edit-company/edit-company.component';\r\nimport { DeleteCompanyComponent } from './delete-company/delete-company.component';\r\nimport { AddCompanyComponent } from './add-company/add-company.component';\r\n\r\n@Component({\r\n  selector: 'app-company',\r\n  templateUrl: './company.component.html',\r\n  styleUrls: ['./company.component.scss']\r\n})\r\nexport class CompanyComponent implements OnInit {\r\n\r\n  public company: Company;\r\n  private notifier: NotifierService;\r\n  constructor(public companyService: CompanyService, notifierService: NotifierService, public matDialog: MatDialog) {\r\n    this.notifier = notifierService;\r\n  }\r\n  displayedColumns: String[] = ['companyName', 'emailId', 'phoneNo', 'address', 'startDate',\r\n    'endDate', 'companyCode', 'idProof', 'actions'];\r\n  dataSource;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngOnInit() {\r\n    this.company = new Company();\r\n    this.getAllCompanyMaster();\r\n  }\r\n\r\n\r\n  applyFilter(filterValue: String) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  /** get all company details */\r\n  getAllCompanyMaster() {\r\n    this.companyService.getAllCompanyMaster().subscribe((data) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  /**add company details */\r\n  addCompanyMaster() {\r\n    const matDialogRef = this.matDialog.open(AddCompanyComponent, {\r\n    });\r\n    matDialogRef.afterClosed().subscribe((result) => {\r\n      this.getAllCompanyMaster();\r\n    });\r\n  }\r\n\r\n  /**update company details */\r\n  updateCompanyMaster(i: number, _id: String, companyName: String, emailId: String, phoneNo: String, address: String,\r\n    startDate: String, endDate: String, companyCode: String, idProof: String) {\r\n    const matDialogRef = this.matDialog.open(EditCompanyComponent, {\r\n      data: {\r\n        _id: _id, companyName: companyName, emailId: emailId, phoneNo: phoneNo, address: address, startDate: startDate,\r\n        endDate: endDate, companyCode: companyCode, idProof: idProof\r\n      }\r\n    });\r\n    matDialogRef.afterClosed().subscribe((result) => {\r\n      this.getAllCompanyMaster();\r\n    });\r\n  }\r\n\r\n/** delete company details */\r\n  deleteCompanyMaster(i: number, _id: String, companyName: String, emailId: String, phoneNo: String, address: String,\r\n    startDate: String, endDate: String, companyCode: String, idProof: String) {\r\n    const matDialogRef = this.matDialog.open(DeleteCompanyComponent, {\r\n      data: {\r\n        _id: _id, companyName: companyName, emailId: emailId, phoneNo: phoneNo, address: address, startDate: startDate,\r\n        endDate: endDate, companyCode: companyCode, idProof: idProof\r\n      }\r\n    });\r\n    matDialogRef.afterClosed().subscribe((result) => {\r\n      this.getAllCompanyMaster();\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CompanyComponent } from './company.component';\r\nimport { CompanyRoutingModule } from './company-routing-module';\r\nimport { AddCompanyComponent } from './add-company/add-company.component';\r\nimport { EditCompanyComponent } from './edit-company/edit-company.component';\r\nimport { DeleteCompanyComponent } from './delete-company/delete-company.component';\r\nimport { MaterialModule } from 'src/app/app.module';\r\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\r\nimport { MasterService } from '../master/master.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nconst customNotifierOptions: NotifierOptions = {\r\n  position: {\r\n    horizontal: {\r\n      position: 'middle',\r\n      distance: 12\r\n    },\r\n    vertical: {\r\n      position: 'top',\r\n      distance: 50,\r\n      gap: 10\r\n    }\r\n  },\r\n  theme: 'material',\r\n  behaviour: {\r\n    autoHide: 1000,\r\n    onClick: 'hide',\r\n    onMouseover: 'pauseAutoHide',\r\n    showDismissButton: true,\r\n    stacking: 4\r\n  },\r\n  animations: {\r\n    enabled: true,\r\n    show: {\r\n      preset: 'slide',\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    hide: {\r\n      preset: 'fade',\r\n      speed: 300,\r\n      easing: 'ease',\r\n      offset: 50\r\n    },\r\n    shift: {\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    overlap: 10\r\n  }\r\n};\r\n\r\n@NgModule({\r\n  declarations: [CompanyComponent, AddCompanyComponent, EditCompanyComponent, DeleteCompanyComponent],\r\n  imports: [\r\n    CommonModule,CompanyRoutingModule,MaterialModule,NotifierModule.withConfig(customNotifierOptions),MaterialModule\r\n    ,FormsModule,ReactiveFormsModule,\r\n    \r\n  ],\r\n  providers:[MasterService],\r\n  entryComponents:[AddCompanyComponent, EditCompanyComponent, DeleteCompanyComponent]\r\n})\r\nexport class CompanyModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { Company } from './company';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompanyService {\r\n\r\n  \r\n  public baseURL: String = '/api';\r\n  public headers = new Headers({ 'Content-type': 'application/json' });\r\n  public options = new RequestOptions({ headers: this.headers });\r\n  constructor(public http: Http) { }\r\n  \r\n  /**get All activity Master */\r\n  getAllCompanyMaster() {\r\n    return this.http.get(this.baseURL + '/companyMaster', this.options)\r\n      .pipe(map((response: Response) => response.json())\r\n        , catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n\r\n  /**Save company Master */\r\n  saveCompanyMaster(company: Company) {\r\n    return this.http.post(this.baseURL + '/companyMaster', JSON.stringify(company), this.options)\r\n      .pipe(map((response: Response) => response.json())\r\n        , catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n\r\n  /**Update company Master */\r\n  updateCompanyMaster(company: Company) {\r\n    return this.http.put(this.baseURL + '/companyMaster', JSON.stringify(company), this.options)\r\n      .pipe(map((response: Response) => response.json())\r\n        , catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n\r\n  /**delete company Master */\r\n  deleteCompanyMaster(company: Company) {\r\n    return this.http.patch(this.baseURL + '/companyMaster', JSON.stringify(company), this.options)\r\n      .pipe(map((response: Response) => response.json())\r\n        , catchError((error: any) => {\r\n          return Observable.throw(error);\r\n        }));\r\n  }\r\n}\r\n","export class Company {\r\n    _id: String;\r\n    companyName: String;\r\n    emailId: String;\r\n    phoneNo: String;\r\n    address: String;\r\n    startDate: String;\r\n    endDate: String;\r\n    companyCode: String;\r\n    idProof: String;\r\n    createdBy: String;\r\n    modifiedBy: String;\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <h1 mat-dialog-title>Are You Sure?</h1>\\r\\n    <div mat-dialog-content>\\r\\n      <p>ID: {{data._id}}</p>\\r\\n      <p>Company Name: {{data.companyName}}</p>\\r\\n    </div>\\r\\n    <div mat-dialog-actions align=\\\"end\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"deleteCompanyMaster()\\\">Delete</button>\\r\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","module.exports = \"p {\\n  margin-top: 12px;\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 16px; }\\n\\nh1 {\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9jb21wYW55L2RlbGV0ZS1jb21wYW55L0U6XFxWcF9XU1xcZm91bmRyeS1jbGllbnQvc3JjXFxhcHBcXGZvdW5kcnlcXGNvbXBhbnlcXGRlbGV0ZS1jb21wYW55XFxkZWxldGUtY29tcGFueS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsNENBQTRDO0VBQzVDLGVBQWUsRUFBQTs7QUFFZjtFQUNJLGtCQUFrQjtFQUNsQiw0Q0FBNEM7RUFDNUMsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZm91bmRyeS9jb21wYW55L2RlbGV0ZS1jb21wYW55L2RlbGV0ZS1jb21wYW55LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsicHtcclxuICAgIG1hcmdpbi10b3A6IDEycHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIH1cclxuICAgIGgxe1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcclxuICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgIFxyXG4gICAgfSJdfQ== */\"","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { Company } from '../company';\r\nimport { MasterService } from '../../master/master.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { CompanyService } from '../company.service';\r\n\r\n@Component({\r\n  selector: 'app-delete-company',\r\n  templateUrl: './delete-company.component.html',\r\n  styleUrls: ['./delete-company.component.scss']\r\n})\r\nexport class DeleteCompanyComponent implements OnInit {\r\n\r\n  public company:Company;\r\n  private notifier: NotifierService;\r\n  constructor(public companyService: CompanyService, notifierService: NotifierService,\r\n    public matDialogRef:MatDialogRef<DeleteCompanyComponent>, @Inject(MAT_DIALOG_DATA) public data: Company) {\r\n    this.notifier = notifierService;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  /**delete Company Master */\r\n  deleteCompanyMaster() {\r\n    this.data.modifiedBy=localStorage.getItem('user');\r\n      this.companyService.deleteCompanyMaster(this.data).subscribe((data) => {\r\n      this.notifier.notify('success', 'Deleted Successfully');\r\n      this.matDialogRef.close();\r\n    }, (err) => {\r\n      this.notifier.notify('error', 'Nor delate');\r\n    })\r\n  }\r\n  cancel() {\r\n    this.matDialogRef.close();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1 mat-dialog-title>update Company Details</h1>\\r\\n  <form>\\r\\n    <div mat-dialog-content>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"companyName\\\" name=\\\"companyName\\\" [(ngModel)]=\\\"data.companyName\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"emailId\\\" name=\\\"emailId\\\" [(ngModel)]=\\\"data.emailId\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"phoneNo\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"data.phoneNo\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"address\\\" name=\\\"address\\\" [(ngModel)]=\\\"data.address\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"startDate\\\" name=\\\"startDate\\\"\\r\\n              [(ngModel)]=\\\"data.startDate\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker1></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"endDate\\\" name=\\\"endDate\\\" [(ngModel)]=\\\"data.endDate\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker2></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"companyCode\\\" name=\\\"companyCode\\\" [(ngModel)]=\\\"data.companyCode\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"idProof\\\" name=\\\"idProof\\\" [(ngModel)]=\\\"data.idProof\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div mat-dialog-actions align=\\\"end\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateCompanyMaster()\\\">Update</button>\\r\\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\"","module.exports = \"button {\\n  margin-left: 10px; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\nh1 {\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 20px; }\\n\\nmat-form-field {\\n  text-align: center;\\n  font-family: 'Times New Roman', Times, serif;\\n  font-size: 18px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm91bmRyeS9jb21wYW55L2VkaXQtY29tcGFueS9FOlxcVnBfV1NcXGZvdW5kcnktY2xpZW50L3NyY1xcYXBwXFxmb3VuZHJ5XFxjb21wYW55XFxlZGl0LWNvbXBhbnlcXGVkaXQtY29tcGFueS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFpQixFQUFBOztBQUdyQjtFQUNJLFdBQVcsRUFBQTs7QUFFZjtFQUNJLGtCQUFrQjtFQUNsQiw0Q0FBNEM7RUFDNUMsZUFBZSxFQUFBOztBQUduQjtFQUNJLGtCQUFrQjtFQUNsQiw0Q0FBNEM7RUFDNUMsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZm91bmRyeS9jb21wYW55L2VkaXQtY29tcGFueS9lZGl0LWNvbXBhbnkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b257XHJcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcclxufVxyXG5cclxuLmV4YW1wbGUtZnVsbC13aWR0aHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbmgxe1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcblxyXG59XHJcbm1hdC1mb3JtLWZpZWxke1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbn0iXX0= */\"","import { Component, OnInit,Inject} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Company } from '../company';\r\nimport { MasterService } from '../../master/master.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { CompanyService } from '../company.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-company',\r\n  templateUrl: './edit-company.component.html',\r\n  styleUrls: ['./edit-company.component.scss']\r\n})\r\nexport class EditCompanyComponent implements OnInit {\r\n\r\n  public company: Company;\r\n  private notifier: NotifierService;\r\n  constructor(public companyService: CompanyService, notifierService: NotifierService,\r\n    public matDialogRef: MatDialogRef<EditCompanyComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Company) {\r\n    this.notifier = notifierService;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**update Company Master */\r\n  updateCompanyMaster() {\r\n      this.data.modifiedBy = localStorage.getItem('user');\r\n     this.companyService.updateCompanyMaster(this.data).subscribe((data) => {\r\n      this.notifier.notify('success', 'Updated Successfully');\r\n      this.matDialogRef.close();\r\n    }, (err) => {\r\n      this.notifier.notify('error', 'Nor update');\r\n    })\r\n  }\r\n  cancel() {\r\n    this.matDialogRef.close();\r\n  }\r\n}\r\n"],"sourceRoot":""}